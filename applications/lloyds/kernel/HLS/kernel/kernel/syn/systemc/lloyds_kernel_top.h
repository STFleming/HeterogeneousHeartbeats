// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _lloyds_kernel_top_HH_
#define _lloyds_kernel_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "load_points_buffer.h"
#include "store_output_points_buffer.h"
#include "lloyds_kernel_top_data_points_buffer_0_value.h"

namespace ap_rtl {

struct lloyds_kernel_top : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > block_address;
    sc_out< sc_logic > master_portA_req_din;
    sc_in< sc_logic > master_portA_req_full_n;
    sc_out< sc_logic > master_portA_req_write;
    sc_in< sc_logic > master_portA_rsp_empty_n;
    sc_out< sc_logic > master_portA_rsp_read;
    sc_out< sc_lv<32> > master_portA_address;
    sc_in< sc_lv<32> > master_portA_datain;
    sc_out< sc_lv<32> > master_portA_dataout;
    sc_out< sc_lv<32> > master_portA_size;
    sc_out< sc_logic > master_portB_req_din;
    sc_in< sc_logic > master_portB_req_full_n;
    sc_out< sc_logic > master_portB_req_write;
    sc_in< sc_logic > master_portB_rsp_empty_n;
    sc_out< sc_logic > master_portB_rsp_read;
    sc_out< sc_lv<32> > master_portB_address;
    sc_in< sc_lv<32> > master_portB_datain;
    sc_out< sc_lv<32> > master_portB_dataout;
    sc_out< sc_lv<32> > master_portB_size;
    sc_in< sc_lv<32> > data_points_addr;
    sc_in< sc_lv<32> > centres_in_addr;
    sc_in< sc_lv<32> > output_addr;
    sc_in< sc_lv<32> > update_points;
    sc_in< sc_lv<32> > n;
    sc_in< sc_lv<32> > k;


    // Module declarations
    lloyds_kernel_top(sc_module_name name);
    SC_HAS_PROCESS(lloyds_kernel_top);

    ~lloyds_kernel_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    lloyds_kernel_top_data_points_buffer_0_value* data_points_buffer_0_value_U;
    lloyds_kernel_top_data_points_buffer_0_value* data_points_buffer_1_value_U;
    lloyds_kernel_top_data_points_buffer_0_value* data_points_buffer_2_value_U;
    load_points_buffer* grp_load_points_buffer_fu_87;
    store_output_points_buffer* grp_store_output_points_buffer_fu_99;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<32> > block_address0data_reg;
    sc_signal< sc_logic > block_address0vld_reg;
    sc_signal< sc_logic > block_address0ack_out;
    sc_signal< sc_lv<32> > data_points_addr0data_reg;
    sc_signal< sc_logic > data_points_addr0vld_reg;
    sc_signal< sc_logic > data_points_addr0ack_out;
    sc_signal< sc_lv<32> > output_addr0data_reg;
    sc_signal< sc_logic > output_addr0vld_reg;
    sc_signal< sc_logic > output_addr0ack_out;
    sc_signal< sc_lv<32> > data_points_block_address_fu_113_p2;
    sc_signal< sc_lv<32> > data_points_block_address_reg_130;
    sc_signal< sc_lv<4> > data_points_buffer_0_value_address0;
    sc_signal< sc_logic > data_points_buffer_0_value_ce0;
    sc_signal< sc_logic > data_points_buffer_0_value_we0;
    sc_signal< sc_lv<32> > data_points_buffer_0_value_d0;
    sc_signal< sc_lv<4> > data_points_buffer_1_value_address0;
    sc_signal< sc_logic > data_points_buffer_1_value_ce0;
    sc_signal< sc_logic > data_points_buffer_1_value_we0;
    sc_signal< sc_lv<32> > data_points_buffer_1_value_d0;
    sc_signal< sc_lv<4> > data_points_buffer_2_value_address0;
    sc_signal< sc_logic > data_points_buffer_2_value_ce0;
    sc_signal< sc_logic > data_points_buffer_2_value_we0;
    sc_signal< sc_lv<32> > data_points_buffer_2_value_d0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_ap_start;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_ap_done;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_ap_idle;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_ap_ready;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_offset;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_address;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_bus_r_req_din;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_bus_r_req_full_n;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_bus_r_req_write;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_bus_r_rsp_empty_n;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_bus_r_rsp_read;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_bus_r_address;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_bus_r_datain;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_bus_r_dataout;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_bus_r_size;
    sc_signal< sc_lv<4> > grp_load_points_buffer_fu_87_buffer_0_value_address0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_buffer_0_value_ce0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_buffer_0_value_we0;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_buffer_0_value_d0;
    sc_signal< sc_lv<4> > grp_load_points_buffer_fu_87_buffer_1_value_address0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_buffer_1_value_ce0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_buffer_1_value_we0;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_buffer_1_value_d0;
    sc_signal< sc_lv<4> > grp_load_points_buffer_fu_87_buffer_2_value_address0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_buffer_2_value_ce0;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_buffer_2_value_we0;
    sc_signal< sc_lv<32> > grp_load_points_buffer_fu_87_buffer_2_value_d0;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_ap_start;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_ap_done;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_ap_idle;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_ap_ready;
    sc_signal< sc_lv<32> > grp_store_output_points_buffer_fu_99_offset;
    sc_signal< sc_lv<32> > grp_store_output_points_buffer_fu_99_address;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_bus_r_req_din;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_bus_r_req_full_n;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_bus_r_req_write;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_bus_r_rsp_read;
    sc_signal< sc_lv<32> > grp_store_output_points_buffer_fu_99_bus_r_address;
    sc_signal< sc_lv<32> > grp_store_output_points_buffer_fu_99_bus_r_datain;
    sc_signal< sc_lv<32> > grp_store_output_points_buffer_fu_99_bus_r_dataout;
    sc_signal< sc_lv<32> > grp_store_output_points_buffer_fu_99_bus_r_size;
    sc_signal< sc_logic > grp_load_points_buffer_fu_87_ap_start_ap_start_reg;
    sc_signal< sc_logic > grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg;
    sc_signal< sc_lv<32> > tmp_fu_107_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<3> ap_ST_st4_fsm_3;
    static const sc_lv<3> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_block_address0ack_out();
    void thread_data_points_addr0ack_out();
    void thread_data_points_block_address_fu_113_p2();
    void thread_data_points_buffer_0_value_address0();
    void thread_data_points_buffer_0_value_ce0();
    void thread_data_points_buffer_0_value_d0();
    void thread_data_points_buffer_0_value_we0();
    void thread_data_points_buffer_1_value_address0();
    void thread_data_points_buffer_1_value_ce0();
    void thread_data_points_buffer_1_value_d0();
    void thread_data_points_buffer_1_value_we0();
    void thread_data_points_buffer_2_value_address0();
    void thread_data_points_buffer_2_value_ce0();
    void thread_data_points_buffer_2_value_d0();
    void thread_data_points_buffer_2_value_we0();
    void thread_grp_load_points_buffer_fu_87_address();
    void thread_grp_load_points_buffer_fu_87_ap_start();
    void thread_grp_load_points_buffer_fu_87_bus_r_datain();
    void thread_grp_load_points_buffer_fu_87_bus_r_req_full_n();
    void thread_grp_load_points_buffer_fu_87_bus_r_rsp_empty_n();
    void thread_grp_load_points_buffer_fu_87_offset();
    void thread_grp_store_output_points_buffer_fu_99_address();
    void thread_grp_store_output_points_buffer_fu_99_ap_start();
    void thread_grp_store_output_points_buffer_fu_99_bus_r_datain();
    void thread_grp_store_output_points_buffer_fu_99_bus_r_req_full_n();
    void thread_grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n();
    void thread_grp_store_output_points_buffer_fu_99_offset();
    void thread_master_portA_address();
    void thread_master_portA_dataout();
    void thread_master_portA_req_din();
    void thread_master_portA_req_write();
    void thread_master_portA_rsp_read();
    void thread_master_portA_size();
    void thread_master_portB_address();
    void thread_master_portB_dataout();
    void thread_master_portB_req_din();
    void thread_master_portB_req_write();
    void thread_master_portB_rsp_read();
    void thread_master_portB_size();
    void thread_output_addr0ack_out();
    void thread_tmp_fu_107_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
