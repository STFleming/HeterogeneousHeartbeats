// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _store_output_buffer_HH_
#define _store_output_buffer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "store_output_buffer_int_buffer.h"

namespace ap_rtl {

struct store_output_buffer : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > offset;
    sc_out< sc_lv<4> > buffer_min_idx_V_address0;
    sc_out< sc_logic > buffer_min_idx_V_ce0;
    sc_in< sc_lv<8> > buffer_min_idx_V_q0;
    sc_out< sc_lv<4> > buffer_sum_sq_address0;
    sc_out< sc_logic > buffer_sum_sq_ce0;
    sc_in< sc_lv<32> > buffer_sum_sq_q0;
    sc_in< sc_lv<32> > address;
    sc_out< sc_logic > bus_r_req_din;
    sc_in< sc_logic > bus_r_req_full_n;
    sc_out< sc_logic > bus_r_req_write;
    sc_in< sc_logic > bus_r_rsp_empty_n;
    sc_out< sc_logic > bus_r_rsp_read;
    sc_out< sc_lv<32> > bus_r_address;
    sc_in< sc_lv<32> > bus_r_datain;
    sc_out< sc_lv<32> > bus_r_dataout;
    sc_out< sc_lv<32> > bus_r_size;


    // Module declarations
    store_output_buffer(sc_module_name name);
    SC_HAS_PROCESS(store_output_buffer);

    ~store_output_buffer();

    sc_trace_file* mVcdFile;

    store_output_buffer_int_buffer* int_buffer_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<5> > i_reg_157;
    sc_signal< sc_lv<6> > indvar_reg_168;
    sc_signal< sc_lv<1> > exitcond_fu_180_p2;
    sc_signal< sc_lv<1> > exitcond_reg_286;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<5> > i_2_fu_186_p2;
    sc_signal< sc_lv<4> > tmp_16_fu_198_p1;
    sc_signal< sc_lv<4> > tmp_16_reg_300;
    sc_signal< sc_lv<5> > tmp_21_fu_202_p2;
    sc_signal< sc_lv<5> > tmp_21_reg_305;
    sc_signal< sc_lv<32> > bus_addr_reg_315;
    sc_signal< sc_lv<1> > exitcond5_fu_253_p2;
    sc_signal< sc_lv<1> > exitcond5_reg_320;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond5_reg_320_pp1_it1;
    sc_signal< bool > ap_sig_bdd_95;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<6> > indvar_next_fu_259_p2;
    sc_signal< sc_lv<1> > isIter0_fu_270_p2;
    sc_signal< sc_lv<1> > isIter0_reg_334;
    sc_signal< sc_lv<1> > ap_reg_ppstg_isIter0_reg_334_pp1_it1;
    sc_signal< sc_lv<32> > int_buffer_q0;
    sc_signal< sc_lv<32> > int_buffer_load_reg_338;
    sc_signal< sc_lv<5> > int_buffer_address0;
    sc_signal< sc_logic > int_buffer_ce0;
    sc_signal< sc_logic > int_buffer_we0;
    sc_signal< sc_lv<32> > int_buffer_d0;
    sc_signal< sc_lv<5> > int_buffer_address1;
    sc_signal< sc_logic > int_buffer_ce1;
    sc_signal< sc_logic > int_buffer_we1;
    sc_signal< sc_lv<32> > int_buffer_d1;
    sc_signal< sc_lv<64> > tmp_14_fu_192_p1;
    sc_signal< sc_lv<64> > tmp_17_fu_213_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_224_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_265_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_243_p1;
    sc_signal< sc_lv<5> > tmp_18_fu_217_p3;
    sc_signal< sc_lv<32> > tmp_fu_229_p2;
    sc_signal< sc_lv<30> > tmp_s_fu_233_p4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st4_fsm_2;
    static const sc_lv<3> ap_ST_pp1_stg0_fsm_3;
    static const sc_lv<3> ap_ST_st8_fsm_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_95();
    void thread_buffer_min_idx_V_address0();
    void thread_buffer_min_idx_V_ce0();
    void thread_buffer_sum_sq_address0();
    void thread_buffer_sum_sq_ce0();
    void thread_bus_r_address();
    void thread_bus_r_dataout();
    void thread_bus_r_req_din();
    void thread_bus_r_req_write();
    void thread_bus_r_rsp_read();
    void thread_bus_r_size();
    void thread_exitcond5_fu_253_p2();
    void thread_exitcond_fu_180_p2();
    void thread_i_2_fu_186_p2();
    void thread_indvar_next_fu_259_p2();
    void thread_int_buffer_address0();
    void thread_int_buffer_address1();
    void thread_int_buffer_ce0();
    void thread_int_buffer_ce1();
    void thread_int_buffer_d0();
    void thread_int_buffer_d1();
    void thread_int_buffer_we0();
    void thread_int_buffer_we1();
    void thread_isIter0_fu_270_p2();
    void thread_tmp_13_fu_243_p1();
    void thread_tmp_14_fu_192_p1();
    void thread_tmp_16_fu_198_p1();
    void thread_tmp_17_fu_213_p1();
    void thread_tmp_18_fu_217_p3();
    void thread_tmp_19_fu_224_p1();
    void thread_tmp_20_fu_265_p1();
    void thread_tmp_21_fu_202_p2();
    void thread_tmp_fu_229_p2();
    void thread_tmp_s_fu_233_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
