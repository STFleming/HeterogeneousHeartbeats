// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _store_output_points_buffer_HH_
#define _store_output_points_buffer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "store_output_points_buffer_int_buffer.h"

namespace ap_rtl {

struct store_output_points_buffer : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > offset;
    sc_in< sc_lv<32> > address;
    sc_out< sc_logic > bus_r_req_din;
    sc_in< sc_logic > bus_r_req_full_n;
    sc_out< sc_logic > bus_r_req_write;
    sc_in< sc_logic > bus_r_rsp_empty_n;
    sc_out< sc_logic > bus_r_rsp_read;
    sc_out< sc_lv<32> > bus_r_address;
    sc_in< sc_lv<32> > bus_r_datain;
    sc_out< sc_lv<32> > bus_r_dataout;
    sc_out< sc_lv<32> > bus_r_size;


    // Module declarations
    store_output_points_buffer(sc_module_name name);
    SC_HAS_PROCESS(store_output_points_buffer);

    ~store_output_points_buffer();

    sc_trace_file* mVcdFile;

    store_output_points_buffer_int_buffer* int_buffer_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<6> > indvar_reg_154;
    sc_signal< sc_lv<1> > exitcond1_fu_166_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_303;
    sc_signal< sc_lv<5> > i_1_fu_172_p2;
    sc_signal< sc_lv<5> > i_1_reg_307;
    sc_signal< sc_lv<7> > tmp_4_fu_198_p2;
    sc_signal< sc_lv<7> > tmp_4_reg_312;
    sc_signal< sc_lv<32> > bus_addr_reg_317;
    sc_signal< sc_lv<1> > exitcond2_fu_266_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_322;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond2_reg_322_pp1_it1;
    sc_signal< bool > ap_sig_bdd_71;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<6> > indvar_next_fu_272_p2;
    sc_signal< sc_lv<1> > isIter0_fu_283_p2;
    sc_signal< sc_lv<1> > isIter0_reg_336;
    sc_signal< sc_lv<1> > ap_reg_ppstg_isIter0_reg_336_pp1_it1;
    sc_signal< sc_lv<1> > int_buffer_q1;
    sc_signal< sc_lv<1> > int_buffer_load_reg_340;
    sc_signal< sc_lv<6> > int_buffer_address0;
    sc_signal< sc_logic > int_buffer_ce0;
    sc_signal< sc_logic > int_buffer_we0;
    sc_signal< sc_lv<1> > int_buffer_d0;
    sc_signal< sc_lv<6> > int_buffer_address1;
    sc_signal< sc_logic > int_buffer_ce1;
    sc_signal< sc_logic > int_buffer_we1;
    sc_signal< sc_lv<1> > int_buffer_d1;
    sc_signal< sc_lv<5> > i_reg_143;
    sc_signal< sc_lv<64> > tmp_6_fu_208_p1;
    sc_signal< sc_lv<64> > tmp_6_1_fu_223_p1;
    sc_signal< sc_lv<64> > tmp_6_2_fu_237_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_278_p1;
    sc_signal< sc_lv<64> > tmp_1_cast_fu_256_p1;
    sc_signal< sc_lv<4> > tmp_5_fu_182_p1;
    sc_signal< sc_lv<6> > p_shl_fu_186_p3;
    sc_signal< sc_lv<7> > p_shl_cast_fu_194_p1;
    sc_signal< sc_lv<7> > i_cast2_fu_178_p1;
    sc_signal< sc_lv<32> > tmp_6_fu_208_p0;
    sc_signal< sc_lv<7> > tmp_5_1_fu_213_p2;
    sc_signal< sc_lv<32> > tmp_6_1_fu_223_p0;
    sc_signal< sc_lv<7> > tmp_5_2_fu_228_p2;
    sc_signal< sc_lv<32> > tmp_6_2_fu_237_p0;
    sc_signal< sc_lv<32> > tmp_fu_242_p2;
    sc_signal< sc_lv<30> > tmp_1_fu_246_p4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<3> ap_ST_st4_fsm_3;
    static const sc_lv<3> ap_ST_pp1_stg0_fsm_4;
    static const sc_lv<3> ap_ST_st8_fsm_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_71();
    void thread_bus_r_address();
    void thread_bus_r_dataout();
    void thread_bus_r_req_din();
    void thread_bus_r_req_write();
    void thread_bus_r_rsp_read();
    void thread_bus_r_size();
    void thread_exitcond1_fu_166_p2();
    void thread_exitcond2_fu_266_p2();
    void thread_i_1_fu_172_p2();
    void thread_i_cast2_fu_178_p1();
    void thread_indvar_next_fu_272_p2();
    void thread_int_buffer_address0();
    void thread_int_buffer_address1();
    void thread_int_buffer_ce0();
    void thread_int_buffer_ce1();
    void thread_int_buffer_d0();
    void thread_int_buffer_d1();
    void thread_int_buffer_we0();
    void thread_int_buffer_we1();
    void thread_isIter0_fu_283_p2();
    void thread_p_shl_cast_fu_194_p1();
    void thread_p_shl_fu_186_p3();
    void thread_tmp_1_cast_fu_256_p1();
    void thread_tmp_1_fu_246_p4();
    void thread_tmp_3_fu_278_p1();
    void thread_tmp_4_fu_198_p2();
    void thread_tmp_5_1_fu_213_p2();
    void thread_tmp_5_2_fu_228_p2();
    void thread_tmp_5_fu_182_p1();
    void thread_tmp_6_1_fu_223_p0();
    void thread_tmp_6_1_fu_223_p1();
    void thread_tmp_6_2_fu_237_p0();
    void thread_tmp_6_2_fu_237_p1();
    void thread_tmp_6_fu_208_p0();
    void thread_tmp_6_fu_208_p1();
    void thread_tmp_fu_242_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
