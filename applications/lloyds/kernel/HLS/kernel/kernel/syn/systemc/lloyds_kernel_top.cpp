// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "lloyds_kernel_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic lloyds_kernel_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic lloyds_kernel_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> lloyds_kernel_top::ap_ST_st1_fsm_0 = "000";
const sc_lv<3> lloyds_kernel_top::ap_ST_st2_fsm_1 = "1";
const sc_lv<3> lloyds_kernel_top::ap_ST_st3_fsm_2 = "10";
const sc_lv<3> lloyds_kernel_top::ap_ST_st4_fsm_3 = "11";
const sc_lv<3> lloyds_kernel_top::ap_ST_st5_fsm_4 = "100";
const sc_lv<32> lloyds_kernel_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> lloyds_kernel_top::ap_const_lv32_2 = "10";

lloyds_kernel_top::lloyds_kernel_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    data_points_buffer_0_value_U = new lloyds_kernel_top_data_points_buffer_0_value("data_points_buffer_0_value_U");
    data_points_buffer_0_value_U->clk(ap_clk);
    data_points_buffer_0_value_U->reset(ap_rst);
    data_points_buffer_0_value_U->address0(data_points_buffer_0_value_address0);
    data_points_buffer_0_value_U->ce0(data_points_buffer_0_value_ce0);
    data_points_buffer_0_value_U->we0(data_points_buffer_0_value_we0);
    data_points_buffer_0_value_U->d0(data_points_buffer_0_value_d0);
    data_points_buffer_1_value_U = new lloyds_kernel_top_data_points_buffer_0_value("data_points_buffer_1_value_U");
    data_points_buffer_1_value_U->clk(ap_clk);
    data_points_buffer_1_value_U->reset(ap_rst);
    data_points_buffer_1_value_U->address0(data_points_buffer_1_value_address0);
    data_points_buffer_1_value_U->ce0(data_points_buffer_1_value_ce0);
    data_points_buffer_1_value_U->we0(data_points_buffer_1_value_we0);
    data_points_buffer_1_value_U->d0(data_points_buffer_1_value_d0);
    data_points_buffer_2_value_U = new lloyds_kernel_top_data_points_buffer_0_value("data_points_buffer_2_value_U");
    data_points_buffer_2_value_U->clk(ap_clk);
    data_points_buffer_2_value_U->reset(ap_rst);
    data_points_buffer_2_value_U->address0(data_points_buffer_2_value_address0);
    data_points_buffer_2_value_U->ce0(data_points_buffer_2_value_ce0);
    data_points_buffer_2_value_U->we0(data_points_buffer_2_value_we0);
    data_points_buffer_2_value_U->d0(data_points_buffer_2_value_d0);
    grp_load_points_buffer_fu_87 = new load_points_buffer("grp_load_points_buffer_fu_87");
    grp_load_points_buffer_fu_87->ap_clk(ap_clk);
    grp_load_points_buffer_fu_87->ap_rst(ap_rst);
    grp_load_points_buffer_fu_87->ap_start(grp_load_points_buffer_fu_87_ap_start);
    grp_load_points_buffer_fu_87->ap_done(grp_load_points_buffer_fu_87_ap_done);
    grp_load_points_buffer_fu_87->ap_idle(grp_load_points_buffer_fu_87_ap_idle);
    grp_load_points_buffer_fu_87->ap_ready(grp_load_points_buffer_fu_87_ap_ready);
    grp_load_points_buffer_fu_87->offset(grp_load_points_buffer_fu_87_offset);
    grp_load_points_buffer_fu_87->address(grp_load_points_buffer_fu_87_address);
    grp_load_points_buffer_fu_87->bus_r_req_din(grp_load_points_buffer_fu_87_bus_r_req_din);
    grp_load_points_buffer_fu_87->bus_r_req_full_n(grp_load_points_buffer_fu_87_bus_r_req_full_n);
    grp_load_points_buffer_fu_87->bus_r_req_write(grp_load_points_buffer_fu_87_bus_r_req_write);
    grp_load_points_buffer_fu_87->bus_r_rsp_empty_n(grp_load_points_buffer_fu_87_bus_r_rsp_empty_n);
    grp_load_points_buffer_fu_87->bus_r_rsp_read(grp_load_points_buffer_fu_87_bus_r_rsp_read);
    grp_load_points_buffer_fu_87->bus_r_address(grp_load_points_buffer_fu_87_bus_r_address);
    grp_load_points_buffer_fu_87->bus_r_datain(grp_load_points_buffer_fu_87_bus_r_datain);
    grp_load_points_buffer_fu_87->bus_r_dataout(grp_load_points_buffer_fu_87_bus_r_dataout);
    grp_load_points_buffer_fu_87->bus_r_size(grp_load_points_buffer_fu_87_bus_r_size);
    grp_load_points_buffer_fu_87->buffer_0_value_address0(grp_load_points_buffer_fu_87_buffer_0_value_address0);
    grp_load_points_buffer_fu_87->buffer_0_value_ce0(grp_load_points_buffer_fu_87_buffer_0_value_ce0);
    grp_load_points_buffer_fu_87->buffer_0_value_we0(grp_load_points_buffer_fu_87_buffer_0_value_we0);
    grp_load_points_buffer_fu_87->buffer_0_value_d0(grp_load_points_buffer_fu_87_buffer_0_value_d0);
    grp_load_points_buffer_fu_87->buffer_1_value_address0(grp_load_points_buffer_fu_87_buffer_1_value_address0);
    grp_load_points_buffer_fu_87->buffer_1_value_ce0(grp_load_points_buffer_fu_87_buffer_1_value_ce0);
    grp_load_points_buffer_fu_87->buffer_1_value_we0(grp_load_points_buffer_fu_87_buffer_1_value_we0);
    grp_load_points_buffer_fu_87->buffer_1_value_d0(grp_load_points_buffer_fu_87_buffer_1_value_d0);
    grp_load_points_buffer_fu_87->buffer_2_value_address0(grp_load_points_buffer_fu_87_buffer_2_value_address0);
    grp_load_points_buffer_fu_87->buffer_2_value_ce0(grp_load_points_buffer_fu_87_buffer_2_value_ce0);
    grp_load_points_buffer_fu_87->buffer_2_value_we0(grp_load_points_buffer_fu_87_buffer_2_value_we0);
    grp_load_points_buffer_fu_87->buffer_2_value_d0(grp_load_points_buffer_fu_87_buffer_2_value_d0);
    grp_store_output_points_buffer_fu_99 = new store_output_points_buffer("grp_store_output_points_buffer_fu_99");
    grp_store_output_points_buffer_fu_99->ap_clk(ap_clk);
    grp_store_output_points_buffer_fu_99->ap_rst(ap_rst);
    grp_store_output_points_buffer_fu_99->ap_start(grp_store_output_points_buffer_fu_99_ap_start);
    grp_store_output_points_buffer_fu_99->ap_done(grp_store_output_points_buffer_fu_99_ap_done);
    grp_store_output_points_buffer_fu_99->ap_idle(grp_store_output_points_buffer_fu_99_ap_idle);
    grp_store_output_points_buffer_fu_99->ap_ready(grp_store_output_points_buffer_fu_99_ap_ready);
    grp_store_output_points_buffer_fu_99->offset(grp_store_output_points_buffer_fu_99_offset);
    grp_store_output_points_buffer_fu_99->address(grp_store_output_points_buffer_fu_99_address);
    grp_store_output_points_buffer_fu_99->bus_r_req_din(grp_store_output_points_buffer_fu_99_bus_r_req_din);
    grp_store_output_points_buffer_fu_99->bus_r_req_full_n(grp_store_output_points_buffer_fu_99_bus_r_req_full_n);
    grp_store_output_points_buffer_fu_99->bus_r_req_write(grp_store_output_points_buffer_fu_99_bus_r_req_write);
    grp_store_output_points_buffer_fu_99->bus_r_rsp_empty_n(grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n);
    grp_store_output_points_buffer_fu_99->bus_r_rsp_read(grp_store_output_points_buffer_fu_99_bus_r_rsp_read);
    grp_store_output_points_buffer_fu_99->bus_r_address(grp_store_output_points_buffer_fu_99_bus_r_address);
    grp_store_output_points_buffer_fu_99->bus_r_datain(grp_store_output_points_buffer_fu_99_bus_r_datain);
    grp_store_output_points_buffer_fu_99->bus_r_dataout(grp_store_output_points_buffer_fu_99_bus_r_dataout);
    grp_store_output_points_buffer_fu_99->bus_r_size(grp_store_output_points_buffer_fu_99_bus_r_size);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_block_address0ack_out);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_data_points_addr0ack_out);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_data_points_block_address_fu_113_p2);
    sensitive << ( block_address0data_reg );
    sensitive << ( tmp_fu_107_p2 );

    SC_METHOD(thread_data_points_buffer_0_value_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_0_value_address0 );

    SC_METHOD(thread_data_points_buffer_0_value_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_0_value_ce0 );

    SC_METHOD(thread_data_points_buffer_0_value_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_0_value_d0 );

    SC_METHOD(thread_data_points_buffer_0_value_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_0_value_we0 );

    SC_METHOD(thread_data_points_buffer_1_value_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_1_value_address0 );

    SC_METHOD(thread_data_points_buffer_1_value_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_1_value_ce0 );

    SC_METHOD(thread_data_points_buffer_1_value_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_1_value_d0 );

    SC_METHOD(thread_data_points_buffer_1_value_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_1_value_we0 );

    SC_METHOD(thread_data_points_buffer_2_value_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_2_value_address0 );

    SC_METHOD(thread_data_points_buffer_2_value_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_2_value_ce0 );

    SC_METHOD(thread_data_points_buffer_2_value_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_2_value_d0 );

    SC_METHOD(thread_data_points_buffer_2_value_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_buffer_2_value_we0 );

    SC_METHOD(thread_grp_load_points_buffer_fu_87_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( data_points_block_address_reg_130 );

    SC_METHOD(thread_grp_load_points_buffer_fu_87_ap_start);
    sensitive << ( grp_load_points_buffer_fu_87_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_load_points_buffer_fu_87_bus_r_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( master_portA_datain );
    sensitive << ( grp_load_points_buffer_fu_87_ap_done );

    SC_METHOD(thread_grp_load_points_buffer_fu_87_bus_r_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( master_portA_req_full_n );
    sensitive << ( grp_load_points_buffer_fu_87_ap_done );

    SC_METHOD(thread_grp_load_points_buffer_fu_87_bus_r_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( master_portA_rsp_empty_n );
    sensitive << ( grp_load_points_buffer_fu_87_ap_done );

    SC_METHOD(thread_grp_load_points_buffer_fu_87_offset);
    sensitive << ( ap_CS_fsm );
    sensitive << ( data_points_addr0data_reg );

    SC_METHOD(thread_grp_store_output_points_buffer_fu_99_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( data_points_block_address_reg_130 );

    SC_METHOD(thread_grp_store_output_points_buffer_fu_99_ap_start);
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_store_output_points_buffer_fu_99_bus_r_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( master_portA_datain );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_grp_store_output_points_buffer_fu_99_bus_r_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( master_portA_req_full_n );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( master_portA_rsp_empty_n );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_grp_store_output_points_buffer_fu_99_offset);
    sensitive << ( ap_CS_fsm );
    sensitive << ( output_addr0data_reg );

    SC_METHOD(thread_master_portA_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_idle );
    sensitive << ( grp_load_points_buffer_fu_87_bus_r_address );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_idle );
    sensitive << ( grp_store_output_points_buffer_fu_99_bus_r_address );

    SC_METHOD(thread_master_portA_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_idle );
    sensitive << ( grp_load_points_buffer_fu_87_bus_r_dataout );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_idle );
    sensitive << ( grp_store_output_points_buffer_fu_99_bus_r_dataout );

    SC_METHOD(thread_master_portA_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_idle );
    sensitive << ( grp_load_points_buffer_fu_87_bus_r_req_din );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_idle );
    sensitive << ( grp_store_output_points_buffer_fu_99_bus_r_req_din );

    SC_METHOD(thread_master_portA_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_idle );
    sensitive << ( grp_load_points_buffer_fu_87_bus_r_req_write );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_idle );
    sensitive << ( grp_store_output_points_buffer_fu_99_bus_r_req_write );

    SC_METHOD(thread_master_portA_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_idle );
    sensitive << ( grp_load_points_buffer_fu_87_bus_r_rsp_read );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_idle );
    sensitive << ( grp_store_output_points_buffer_fu_99_bus_r_rsp_read );

    SC_METHOD(thread_master_portA_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_idle );
    sensitive << ( grp_load_points_buffer_fu_87_bus_r_size );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_idle );
    sensitive << ( grp_store_output_points_buffer_fu_99_bus_r_size );

    SC_METHOD(thread_master_portB_address);

    SC_METHOD(thread_master_portB_dataout);

    SC_METHOD(thread_master_portB_req_din);

    SC_METHOD(thread_master_portB_req_write);

    SC_METHOD(thread_master_portB_rsp_read);

    SC_METHOD(thread_master_portB_size);

    SC_METHOD(thread_output_addr0ack_out);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_METHOD(thread_tmp_fu_107_p2);
    sensitive << ( block_address0data_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_points_buffer_fu_87_ap_done );
    sensitive << ( grp_store_output_points_buffer_fu_99_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000";
    block_address0data_reg = "00000000000000000000000000000000";
    block_address0vld_reg = SC_LOGIC_0;
    data_points_addr0data_reg = "00000000000000000000000000000000";
    data_points_addr0vld_reg = SC_LOGIC_0;
    output_addr0data_reg = "00000000000000000000000000000000";
    output_addr0vld_reg = SC_LOGIC_0;
    grp_load_points_buffer_fu_87_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "lloyds_kernel_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, block_address, "(port)block_address");
    sc_trace(mVcdFile, master_portA_req_din, "(port)master_portA_req_din");
    sc_trace(mVcdFile, master_portA_req_full_n, "(port)master_portA_req_full_n");
    sc_trace(mVcdFile, master_portA_req_write, "(port)master_portA_req_write");
    sc_trace(mVcdFile, master_portA_rsp_empty_n, "(port)master_portA_rsp_empty_n");
    sc_trace(mVcdFile, master_portA_rsp_read, "(port)master_portA_rsp_read");
    sc_trace(mVcdFile, master_portA_address, "(port)master_portA_address");
    sc_trace(mVcdFile, master_portA_datain, "(port)master_portA_datain");
    sc_trace(mVcdFile, master_portA_dataout, "(port)master_portA_dataout");
    sc_trace(mVcdFile, master_portA_size, "(port)master_portA_size");
    sc_trace(mVcdFile, master_portB_req_din, "(port)master_portB_req_din");
    sc_trace(mVcdFile, master_portB_req_full_n, "(port)master_portB_req_full_n");
    sc_trace(mVcdFile, master_portB_req_write, "(port)master_portB_req_write");
    sc_trace(mVcdFile, master_portB_rsp_empty_n, "(port)master_portB_rsp_empty_n");
    sc_trace(mVcdFile, master_portB_rsp_read, "(port)master_portB_rsp_read");
    sc_trace(mVcdFile, master_portB_address, "(port)master_portB_address");
    sc_trace(mVcdFile, master_portB_datain, "(port)master_portB_datain");
    sc_trace(mVcdFile, master_portB_dataout, "(port)master_portB_dataout");
    sc_trace(mVcdFile, master_portB_size, "(port)master_portB_size");
    sc_trace(mVcdFile, data_points_addr, "(port)data_points_addr");
    sc_trace(mVcdFile, centres_in_addr, "(port)centres_in_addr");
    sc_trace(mVcdFile, output_addr, "(port)output_addr");
    sc_trace(mVcdFile, update_points, "(port)update_points");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, k, "(port)k");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, block_address0data_reg, "block_address0data_reg");
    sc_trace(mVcdFile, block_address0vld_reg, "block_address0vld_reg");
    sc_trace(mVcdFile, block_address0ack_out, "block_address0ack_out");
    sc_trace(mVcdFile, data_points_addr0data_reg, "data_points_addr0data_reg");
    sc_trace(mVcdFile, data_points_addr0vld_reg, "data_points_addr0vld_reg");
    sc_trace(mVcdFile, data_points_addr0ack_out, "data_points_addr0ack_out");
    sc_trace(mVcdFile, output_addr0data_reg, "output_addr0data_reg");
    sc_trace(mVcdFile, output_addr0vld_reg, "output_addr0vld_reg");
    sc_trace(mVcdFile, output_addr0ack_out, "output_addr0ack_out");
    sc_trace(mVcdFile, data_points_block_address_fu_113_p2, "data_points_block_address_fu_113_p2");
    sc_trace(mVcdFile, data_points_block_address_reg_130, "data_points_block_address_reg_130");
    sc_trace(mVcdFile, data_points_buffer_0_value_address0, "data_points_buffer_0_value_address0");
    sc_trace(mVcdFile, data_points_buffer_0_value_ce0, "data_points_buffer_0_value_ce0");
    sc_trace(mVcdFile, data_points_buffer_0_value_we0, "data_points_buffer_0_value_we0");
    sc_trace(mVcdFile, data_points_buffer_0_value_d0, "data_points_buffer_0_value_d0");
    sc_trace(mVcdFile, data_points_buffer_1_value_address0, "data_points_buffer_1_value_address0");
    sc_trace(mVcdFile, data_points_buffer_1_value_ce0, "data_points_buffer_1_value_ce0");
    sc_trace(mVcdFile, data_points_buffer_1_value_we0, "data_points_buffer_1_value_we0");
    sc_trace(mVcdFile, data_points_buffer_1_value_d0, "data_points_buffer_1_value_d0");
    sc_trace(mVcdFile, data_points_buffer_2_value_address0, "data_points_buffer_2_value_address0");
    sc_trace(mVcdFile, data_points_buffer_2_value_ce0, "data_points_buffer_2_value_ce0");
    sc_trace(mVcdFile, data_points_buffer_2_value_we0, "data_points_buffer_2_value_we0");
    sc_trace(mVcdFile, data_points_buffer_2_value_d0, "data_points_buffer_2_value_d0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_ap_start, "grp_load_points_buffer_fu_87_ap_start");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_ap_done, "grp_load_points_buffer_fu_87_ap_done");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_ap_idle, "grp_load_points_buffer_fu_87_ap_idle");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_ap_ready, "grp_load_points_buffer_fu_87_ap_ready");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_offset, "grp_load_points_buffer_fu_87_offset");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_address, "grp_load_points_buffer_fu_87_address");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_req_din, "grp_load_points_buffer_fu_87_bus_r_req_din");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_req_full_n, "grp_load_points_buffer_fu_87_bus_r_req_full_n");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_req_write, "grp_load_points_buffer_fu_87_bus_r_req_write");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_rsp_empty_n, "grp_load_points_buffer_fu_87_bus_r_rsp_empty_n");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_rsp_read, "grp_load_points_buffer_fu_87_bus_r_rsp_read");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_address, "grp_load_points_buffer_fu_87_bus_r_address");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_datain, "grp_load_points_buffer_fu_87_bus_r_datain");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_dataout, "grp_load_points_buffer_fu_87_bus_r_dataout");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_bus_r_size, "grp_load_points_buffer_fu_87_bus_r_size");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_0_value_address0, "grp_load_points_buffer_fu_87_buffer_0_value_address0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_0_value_ce0, "grp_load_points_buffer_fu_87_buffer_0_value_ce0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_0_value_we0, "grp_load_points_buffer_fu_87_buffer_0_value_we0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_0_value_d0, "grp_load_points_buffer_fu_87_buffer_0_value_d0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_1_value_address0, "grp_load_points_buffer_fu_87_buffer_1_value_address0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_1_value_ce0, "grp_load_points_buffer_fu_87_buffer_1_value_ce0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_1_value_we0, "grp_load_points_buffer_fu_87_buffer_1_value_we0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_1_value_d0, "grp_load_points_buffer_fu_87_buffer_1_value_d0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_2_value_address0, "grp_load_points_buffer_fu_87_buffer_2_value_address0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_2_value_ce0, "grp_load_points_buffer_fu_87_buffer_2_value_ce0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_2_value_we0, "grp_load_points_buffer_fu_87_buffer_2_value_we0");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_buffer_2_value_d0, "grp_load_points_buffer_fu_87_buffer_2_value_d0");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_ap_start, "grp_store_output_points_buffer_fu_99_ap_start");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_ap_done, "grp_store_output_points_buffer_fu_99_ap_done");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_ap_idle, "grp_store_output_points_buffer_fu_99_ap_idle");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_ap_ready, "grp_store_output_points_buffer_fu_99_ap_ready");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_offset, "grp_store_output_points_buffer_fu_99_offset");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_address, "grp_store_output_points_buffer_fu_99_address");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_req_din, "grp_store_output_points_buffer_fu_99_bus_r_req_din");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_req_full_n, "grp_store_output_points_buffer_fu_99_bus_r_req_full_n");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_req_write, "grp_store_output_points_buffer_fu_99_bus_r_req_write");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n, "grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_rsp_read, "grp_store_output_points_buffer_fu_99_bus_r_rsp_read");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_address, "grp_store_output_points_buffer_fu_99_bus_r_address");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_datain, "grp_store_output_points_buffer_fu_99_bus_r_datain");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_dataout, "grp_store_output_points_buffer_fu_99_bus_r_dataout");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_bus_r_size, "grp_store_output_points_buffer_fu_99_bus_r_size");
    sc_trace(mVcdFile, grp_load_points_buffer_fu_87_ap_start_ap_start_reg, "grp_load_points_buffer_fu_87_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg, "grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg");
    sc_trace(mVcdFile, tmp_fu_107_p2, "tmp_fu_107_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("lloyds_kernel_top.hdltvin.dat");
    mHdltvoutHandle.open("lloyds_kernel_top.hdltvout.dat");
}

lloyds_kernel_top::~lloyds_kernel_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete data_points_buffer_0_value_U;
    delete data_points_buffer_1_value_U;
    delete data_points_buffer_2_value_U;
    delete grp_load_points_buffer_fu_87;
    delete grp_store_output_points_buffer_fu_99;
}

void lloyds_kernel_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        block_address0data_reg = ap_const_lv32_0;
    } else {
        if (((!(!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_0, block_address0vld_reg.read())) || 
             (!(!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, block_address0vld_reg.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, block_address0ack_out.read())))) {
            block_address0data_reg = block_address.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        block_address0vld_reg = ap_const_logic_0;
    } else {
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_points_addr0data_reg = ap_const_lv32_0;
    } else {
        if (((!(!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_0, data_points_addr0vld_reg.read())) || 
             (!(!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_points_addr0vld_reg.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_points_addr0ack_out.read())))) {
            data_points_addr0data_reg = data_points_addr.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_points_addr0vld_reg = ap_const_logic_0;
    } else {
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_load_points_buffer_fu_87_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            grp_load_points_buffer_fu_87_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_load_points_buffer_fu_87_ap_ready.read())) {
            grp_load_points_buffer_fu_87_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
            grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_store_output_points_buffer_fu_99_ap_ready.read())) {
            grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        output_addr0data_reg = ap_const_lv32_0;
    } else {
        if (((!(!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_0, output_addr0vld_reg.read())) || 
             (!(!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_addr0vld_reg.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_addr0ack_out.read())))) {
            output_addr0data_reg = output_addr.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        output_addr0vld_reg = ap_const_logic_0;
    } else {
    }
    if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        data_points_block_address_reg_130 = data_points_block_address_fu_113_p2.read();
    }
}

void lloyds_kernel_top::thread_ap_done() {
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_done.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_ap_ready() {
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_done.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_block_address0ack_out() {
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_done.read()))) {
        block_address0ack_out = ap_const_logic_1;
    } else {
        block_address0ack_out = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_addr0ack_out() {
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_done.read()))) {
        data_points_addr0ack_out = ap_const_logic_1;
    } else {
        data_points_addr0ack_out = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_block_address_fu_113_p2() {
    data_points_block_address_fu_113_p2 = (!tmp_fu_107_p2.read().is_01() || !block_address0data_reg.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_fu_107_p2.read()) - sc_biguint<32>(block_address0data_reg.read()));
}

void lloyds_kernel_top::thread_data_points_buffer_0_value_address0() {
    data_points_buffer_0_value_address0 = grp_load_points_buffer_fu_87_buffer_0_value_address0.read();
}

void lloyds_kernel_top::thread_data_points_buffer_0_value_ce0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        data_points_buffer_0_value_ce0 = grp_load_points_buffer_fu_87_buffer_0_value_ce0.read();
    } else {
        data_points_buffer_0_value_ce0 = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_buffer_0_value_d0() {
    data_points_buffer_0_value_d0 = grp_load_points_buffer_fu_87_buffer_0_value_d0.read();
}

void lloyds_kernel_top::thread_data_points_buffer_0_value_we0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        data_points_buffer_0_value_we0 = grp_load_points_buffer_fu_87_buffer_0_value_we0.read();
    } else {
        data_points_buffer_0_value_we0 = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_buffer_1_value_address0() {
    data_points_buffer_1_value_address0 = grp_load_points_buffer_fu_87_buffer_1_value_address0.read();
}

void lloyds_kernel_top::thread_data_points_buffer_1_value_ce0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        data_points_buffer_1_value_ce0 = grp_load_points_buffer_fu_87_buffer_1_value_ce0.read();
    } else {
        data_points_buffer_1_value_ce0 = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_buffer_1_value_d0() {
    data_points_buffer_1_value_d0 = grp_load_points_buffer_fu_87_buffer_1_value_d0.read();
}

void lloyds_kernel_top::thread_data_points_buffer_1_value_we0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        data_points_buffer_1_value_we0 = grp_load_points_buffer_fu_87_buffer_1_value_we0.read();
    } else {
        data_points_buffer_1_value_we0 = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_buffer_2_value_address0() {
    data_points_buffer_2_value_address0 = grp_load_points_buffer_fu_87_buffer_2_value_address0.read();
}

void lloyds_kernel_top::thread_data_points_buffer_2_value_ce0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        data_points_buffer_2_value_ce0 = grp_load_points_buffer_fu_87_buffer_2_value_ce0.read();
    } else {
        data_points_buffer_2_value_ce0 = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_data_points_buffer_2_value_d0() {
    data_points_buffer_2_value_d0 = grp_load_points_buffer_fu_87_buffer_2_value_d0.read();
}

void lloyds_kernel_top::thread_data_points_buffer_2_value_we0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        data_points_buffer_2_value_we0 = grp_load_points_buffer_fu_87_buffer_2_value_we0.read();
    } else {
        data_points_buffer_2_value_we0 = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_grp_load_points_buffer_fu_87_address() {
    grp_load_points_buffer_fu_87_address = data_points_block_address_reg_130.read();
}

void lloyds_kernel_top::thread_grp_load_points_buffer_fu_87_ap_start() {
    grp_load_points_buffer_fu_87_ap_start = grp_load_points_buffer_fu_87_ap_start_ap_start_reg.read();
}

void lloyds_kernel_top::thread_grp_load_points_buffer_fu_87_bus_r_datain() {
    grp_load_points_buffer_fu_87_bus_r_datain = master_portA_datain.read();
}

void lloyds_kernel_top::thread_grp_load_points_buffer_fu_87_bus_r_req_full_n() {
    grp_load_points_buffer_fu_87_bus_r_req_full_n = master_portA_req_full_n.read();
}

void lloyds_kernel_top::thread_grp_load_points_buffer_fu_87_bus_r_rsp_empty_n() {
    grp_load_points_buffer_fu_87_bus_r_rsp_empty_n = master_portA_rsp_empty_n.read();
}

void lloyds_kernel_top::thread_grp_load_points_buffer_fu_87_offset() {
    grp_load_points_buffer_fu_87_offset = data_points_addr0data_reg.read();
}

void lloyds_kernel_top::thread_grp_store_output_points_buffer_fu_99_address() {
    grp_store_output_points_buffer_fu_99_address = data_points_block_address_reg_130.read();
}

void lloyds_kernel_top::thread_grp_store_output_points_buffer_fu_99_ap_start() {
    grp_store_output_points_buffer_fu_99_ap_start = grp_store_output_points_buffer_fu_99_ap_start_ap_start_reg.read();
}

void lloyds_kernel_top::thread_grp_store_output_points_buffer_fu_99_bus_r_datain() {
    grp_store_output_points_buffer_fu_99_bus_r_datain = master_portA_datain.read();
}

void lloyds_kernel_top::thread_grp_store_output_points_buffer_fu_99_bus_r_req_full_n() {
    grp_store_output_points_buffer_fu_99_bus_r_req_full_n = master_portA_req_full_n.read();
}

void lloyds_kernel_top::thread_grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n() {
    grp_store_output_points_buffer_fu_99_bus_r_rsp_empty_n = master_portA_rsp_empty_n.read();
}

void lloyds_kernel_top::thread_grp_store_output_points_buffer_fu_99_offset() {
    grp_store_output_points_buffer_fu_99_offset = output_addr0data_reg.read();
}

void lloyds_kernel_top::thread_master_portA_address() {
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_idle.read())))) {
        master_portA_address = grp_store_output_points_buffer_fu_99_bus_r_address.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
                (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_idle.read())))) {
        master_portA_address = grp_load_points_buffer_fu_87_bus_r_address.read();
    } else {
        master_portA_address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lloyds_kernel_top::thread_master_portA_dataout() {
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_idle.read())))) {
        master_portA_dataout = grp_store_output_points_buffer_fu_99_bus_r_dataout.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
                (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_idle.read())))) {
        master_portA_dataout = grp_load_points_buffer_fu_87_bus_r_dataout.read();
    } else {
        master_portA_dataout = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lloyds_kernel_top::thread_master_portA_req_din() {
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_idle.read())))) {
        master_portA_req_din = grp_store_output_points_buffer_fu_99_bus_r_req_din.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
                (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_idle.read())))) {
        master_portA_req_din = grp_load_points_buffer_fu_87_bus_r_req_din.read();
    } else {
        master_portA_req_din = sc_logic('X');
    }
}

void lloyds_kernel_top::thread_master_portA_req_write() {
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_idle.read())))) {
        master_portA_req_write = grp_store_output_points_buffer_fu_99_bus_r_req_write.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
                (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_idle.read())))) {
        master_portA_req_write = grp_load_points_buffer_fu_87_bus_r_req_write.read();
    } else {
        master_portA_req_write = sc_logic('X');
    }
}

void lloyds_kernel_top::thread_master_portA_rsp_read() {
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_idle.read())))) {
        master_portA_rsp_read = grp_store_output_points_buffer_fu_99_bus_r_rsp_read.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
                (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_idle.read())))) {
        master_portA_rsp_read = grp_load_points_buffer_fu_87_bus_r_rsp_read.read();
    } else {
        master_portA_rsp_read = sc_logic('X');
    }
}

void lloyds_kernel_top::thread_master_portA_size() {
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_idle.read())))) {
        master_portA_size = grp_store_output_points_buffer_fu_99_bus_r_size.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
                (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_idle.read())))) {
        master_portA_size = grp_load_points_buffer_fu_87_bus_r_size.read();
    } else {
        master_portA_size = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lloyds_kernel_top::thread_master_portB_address() {
    master_portB_address = ap_const_lv32_0;
}

void lloyds_kernel_top::thread_master_portB_dataout() {
    master_portB_dataout = ap_const_lv32_0;
}

void lloyds_kernel_top::thread_master_portB_req_din() {
    master_portB_req_din = ap_const_logic_0;
}

void lloyds_kernel_top::thread_master_portB_req_write() {
    master_portB_req_write = ap_const_logic_0;
}

void lloyds_kernel_top::thread_master_portB_rsp_read() {
    master_portB_rsp_read = ap_const_logic_0;
}

void lloyds_kernel_top::thread_master_portB_size() {
    master_portB_size = ap_const_lv32_0;
}

void lloyds_kernel_top::thread_output_addr0ack_out() {
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_done.read()))) {
        output_addr0ack_out = ap_const_logic_1;
    } else {
        output_addr0ack_out = ap_const_logic_0;
    }
}

void lloyds_kernel_top::thread_tmp_fu_107_p2() {
    tmp_fu_107_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): block_address0data_reg.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void lloyds_kernel_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_load_points_buffer_fu_87_ap_done.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_store_output_points_buffer_fu_99_ap_done.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}
void lloyds_kernel_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"block_address\" :  \"" << block_address.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portA_req_din\" :  \"" << master_portA_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"master_portA_req_full_n\" :  \"" << master_portA_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portA_req_write\" :  \"" << master_portA_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"master_portA_rsp_empty_n\" :  \"" << master_portA_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portA_rsp_read\" :  \"" << master_portA_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portA_address\" :  \"" << master_portA_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"master_portA_datain\" :  \"" << master_portA_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portA_dataout\" :  \"" << master_portA_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portA_size\" :  \"" << master_portA_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portB_req_din\" :  \"" << master_portB_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"master_portB_req_full_n\" :  \"" << master_portB_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portB_req_write\" :  \"" << master_portB_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"master_portB_rsp_empty_n\" :  \"" << master_portB_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portB_rsp_read\" :  \"" << master_portB_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portB_address\" :  \"" << master_portB_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"master_portB_datain\" :  \"" << master_portB_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portB_dataout\" :  \"" << master_portB_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_portB_size\" :  \"" << master_portB_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_points_addr\" :  \"" << data_points_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"centres_in_addr\" :  \"" << centres_in_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_addr\" :  \"" << output_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"update_points\" :  \"" << update_points.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"k\" :  \"" << k.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

