// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module lloyds_kernel_top_top (
m_axi_master_portA_AWID,
m_axi_master_portA_AWADDR,
m_axi_master_portA_AWLEN,
m_axi_master_portA_AWSIZE,
m_axi_master_portA_AWBURST,
m_axi_master_portA_AWLOCK,
m_axi_master_portA_AWCACHE,
m_axi_master_portA_AWPROT,
m_axi_master_portA_AWQOS,
m_axi_master_portA_AWUSER,
m_axi_master_portA_AWVALID,
m_axi_master_portA_AWREADY,
m_axi_master_portA_WDATA,
m_axi_master_portA_WSTRB,
m_axi_master_portA_WLAST,
m_axi_master_portA_WUSER,
m_axi_master_portA_WVALID,
m_axi_master_portA_WREADY,
m_axi_master_portA_BID,
m_axi_master_portA_BRESP,
m_axi_master_portA_BUSER,
m_axi_master_portA_BVALID,
m_axi_master_portA_BREADY,
m_axi_master_portA_ARID,
m_axi_master_portA_ARADDR,
m_axi_master_portA_ARLEN,
m_axi_master_portA_ARSIZE,
m_axi_master_portA_ARBURST,
m_axi_master_portA_ARLOCK,
m_axi_master_portA_ARCACHE,
m_axi_master_portA_ARPROT,
m_axi_master_portA_ARQOS,
m_axi_master_portA_ARUSER,
m_axi_master_portA_ARVALID,
m_axi_master_portA_ARREADY,
m_axi_master_portA_RID,
m_axi_master_portA_RDATA,
m_axi_master_portA_RRESP,
m_axi_master_portA_RLAST,
m_axi_master_portA_RUSER,
m_axi_master_portA_RVALID,
m_axi_master_portA_RREADY,
s_axi_CONFIG_BUS_AWADDR,
s_axi_CONFIG_BUS_AWVALID,
s_axi_CONFIG_BUS_AWREADY,
s_axi_CONFIG_BUS_WDATA,
s_axi_CONFIG_BUS_WSTRB,
s_axi_CONFIG_BUS_WVALID,
s_axi_CONFIG_BUS_WREADY,
s_axi_CONFIG_BUS_BRESP,
s_axi_CONFIG_BUS_BVALID,
s_axi_CONFIG_BUS_BREADY,
s_axi_CONFIG_BUS_ARADDR,
s_axi_CONFIG_BUS_ARVALID,
s_axi_CONFIG_BUS_ARREADY,
s_axi_CONFIG_BUS_RDATA,
s_axi_CONFIG_BUS_RRESP,
s_axi_CONFIG_BUS_RVALID,
s_axi_CONFIG_BUS_RREADY,
interrupt,
aresetn,
aclk
);

parameter C_M_AXI_MASTER_PORTA_ID_WIDTH = 1;
parameter C_M_AXI_MASTER_PORTA_ADDR_WIDTH = 32;
parameter C_M_AXI_MASTER_PORTA_DATA_WIDTH = 32;
parameter C_M_AXI_MASTER_PORTA_AWUSER_WIDTH = 1;
parameter C_M_AXI_MASTER_PORTA_ARUSER_WIDTH = 1;
parameter C_M_AXI_MASTER_PORTA_WUSER_WIDTH = 1;
parameter C_M_AXI_MASTER_PORTA_RUSER_WIDTH = 1;
parameter C_M_AXI_MASTER_PORTA_BUSER_WIDTH = 1;
parameter C_M_AXI_MASTER_PORTA_USER_DATA_WIDTH = 32;
parameter C_M_AXI_MASTER_PORTA_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_MASTER_PORTA_USER_VALUE = 1'b0;
parameter C_M_AXI_MASTER_PORTA_PROT_VALUE = 3'b010;
parameter C_M_AXI_MASTER_PORTA_CACHE_VALUE = 4'b0000;
parameter C_S_AXI_CONFIG_BUS_ADDR_WIDTH = 7;
parameter C_S_AXI_CONFIG_BUS_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

output [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_AWID ;
output [C_M_AXI_MASTER_PORTA_ADDR_WIDTH - 1:0] m_axi_master_portA_AWADDR ;
output [8 - 1:0] m_axi_master_portA_AWLEN ;
output [3 - 1:0] m_axi_master_portA_AWSIZE ;
output [2 - 1:0] m_axi_master_portA_AWBURST ;
output [2 - 1:0] m_axi_master_portA_AWLOCK ;
output [4 - 1:0] m_axi_master_portA_AWCACHE ;
output [3 - 1:0] m_axi_master_portA_AWPROT ;
output [4 - 1:0] m_axi_master_portA_AWQOS ;
output [C_M_AXI_MASTER_PORTA_AWUSER_WIDTH - 1:0] m_axi_master_portA_AWUSER ;
output m_axi_master_portA_AWVALID ;
input m_axi_master_portA_AWREADY ;
output [C_M_AXI_MASTER_PORTA_DATA_WIDTH - 1:0] m_axi_master_portA_WDATA ;
output [C_M_AXI_MASTER_PORTA_DATA_WIDTH/8 - 1:0] m_axi_master_portA_WSTRB ;
output m_axi_master_portA_WLAST ;
output [C_M_AXI_MASTER_PORTA_WUSER_WIDTH - 1:0] m_axi_master_portA_WUSER ;
output m_axi_master_portA_WVALID ;
input m_axi_master_portA_WREADY ;
input [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_BID ;
input [2 - 1:0] m_axi_master_portA_BRESP ;
input [C_M_AXI_MASTER_PORTA_BUSER_WIDTH - 1:0] m_axi_master_portA_BUSER ;
input m_axi_master_portA_BVALID ;
output m_axi_master_portA_BREADY ;
output [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_ARID ;
output [C_M_AXI_MASTER_PORTA_ADDR_WIDTH - 1:0] m_axi_master_portA_ARADDR ;
output [8 - 1:0] m_axi_master_portA_ARLEN ;
output [3 - 1:0] m_axi_master_portA_ARSIZE ;
output [2 - 1:0] m_axi_master_portA_ARBURST ;
output [2 - 1:0] m_axi_master_portA_ARLOCK ;
output [4 - 1:0] m_axi_master_portA_ARCACHE ;
output [3 - 1:0] m_axi_master_portA_ARPROT ;
output [4 - 1:0] m_axi_master_portA_ARQOS ;
output [C_M_AXI_MASTER_PORTA_ARUSER_WIDTH - 1:0] m_axi_master_portA_ARUSER ;
output m_axi_master_portA_ARVALID ;
input m_axi_master_portA_ARREADY ;
input [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_RID ;
input [C_M_AXI_MASTER_PORTA_DATA_WIDTH - 1:0] m_axi_master_portA_RDATA ;
input [2 - 1:0] m_axi_master_portA_RRESP ;
input m_axi_master_portA_RLAST ;
input [C_M_AXI_MASTER_PORTA_RUSER_WIDTH - 1:0] m_axi_master_portA_RUSER ;
input m_axi_master_portA_RVALID ;
output m_axi_master_portA_RREADY ;


input [C_S_AXI_CONFIG_BUS_ADDR_WIDTH - 1:0] s_axi_CONFIG_BUS_AWADDR ;
input s_axi_CONFIG_BUS_AWVALID ;
output s_axi_CONFIG_BUS_AWREADY ;
input [C_S_AXI_CONFIG_BUS_DATA_WIDTH - 1:0] s_axi_CONFIG_BUS_WDATA ;
input [C_S_AXI_CONFIG_BUS_DATA_WIDTH/8 - 1:0] s_axi_CONFIG_BUS_WSTRB ;
input s_axi_CONFIG_BUS_WVALID ;
output s_axi_CONFIG_BUS_WREADY ;
output [2 - 1:0] s_axi_CONFIG_BUS_BRESP ;
output s_axi_CONFIG_BUS_BVALID ;
input s_axi_CONFIG_BUS_BREADY ;
input [C_S_AXI_CONFIG_BUS_ADDR_WIDTH - 1:0] s_axi_CONFIG_BUS_ARADDR ;
input s_axi_CONFIG_BUS_ARVALID ;
output s_axi_CONFIG_BUS_ARREADY ;
output [C_S_AXI_CONFIG_BUS_DATA_WIDTH - 1:0] s_axi_CONFIG_BUS_RDATA ;
output [2 - 1:0] s_axi_CONFIG_BUS_RRESP ;
output s_axi_CONFIG_BUS_RVALID ;
input s_axi_CONFIG_BUS_RREADY ;
output interrupt ;

input aresetn ;

input aclk ;


wire [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_AWID;
wire [C_M_AXI_MASTER_PORTA_ADDR_WIDTH - 1:0] m_axi_master_portA_AWADDR;
wire [8 - 1:0] m_axi_master_portA_AWLEN;
wire [3 - 1:0] m_axi_master_portA_AWSIZE;
wire [2 - 1:0] m_axi_master_portA_AWBURST;
wire [2 - 1:0] m_axi_master_portA_AWLOCK;
wire [4 - 1:0] m_axi_master_portA_AWCACHE;
wire [3 - 1:0] m_axi_master_portA_AWPROT;
wire [4 - 1:0] m_axi_master_portA_AWQOS;
wire [C_M_AXI_MASTER_PORTA_AWUSER_WIDTH - 1:0] m_axi_master_portA_AWUSER;
wire m_axi_master_portA_AWVALID;
wire m_axi_master_portA_AWREADY;
wire [C_M_AXI_MASTER_PORTA_DATA_WIDTH - 1:0] m_axi_master_portA_WDATA;
wire [C_M_AXI_MASTER_PORTA_DATA_WIDTH/8 - 1:0] m_axi_master_portA_WSTRB;
wire m_axi_master_portA_WLAST;
wire [C_M_AXI_MASTER_PORTA_WUSER_WIDTH - 1:0] m_axi_master_portA_WUSER;
wire m_axi_master_portA_WVALID;
wire m_axi_master_portA_WREADY;
wire [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_BID;
wire [2 - 1:0] m_axi_master_portA_BRESP;
wire [C_M_AXI_MASTER_PORTA_BUSER_WIDTH - 1:0] m_axi_master_portA_BUSER;
wire m_axi_master_portA_BVALID;
wire m_axi_master_portA_BREADY;
wire [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_ARID;
wire [C_M_AXI_MASTER_PORTA_ADDR_WIDTH - 1:0] m_axi_master_portA_ARADDR;
wire [8 - 1:0] m_axi_master_portA_ARLEN;
wire [3 - 1:0] m_axi_master_portA_ARSIZE;
wire [2 - 1:0] m_axi_master_portA_ARBURST;
wire [2 - 1:0] m_axi_master_portA_ARLOCK;
wire [4 - 1:0] m_axi_master_portA_ARCACHE;
wire [3 - 1:0] m_axi_master_portA_ARPROT;
wire [4 - 1:0] m_axi_master_portA_ARQOS;
wire [C_M_AXI_MASTER_PORTA_ARUSER_WIDTH - 1:0] m_axi_master_portA_ARUSER;
wire m_axi_master_portA_ARVALID;
wire m_axi_master_portA_ARREADY;
wire [C_M_AXI_MASTER_PORTA_ID_WIDTH - 1:0] m_axi_master_portA_RID;
wire [C_M_AXI_MASTER_PORTA_DATA_WIDTH - 1:0] m_axi_master_portA_RDATA;
wire [2 - 1:0] m_axi_master_portA_RRESP;
wire m_axi_master_portA_RLAST;
wire [C_M_AXI_MASTER_PORTA_RUSER_WIDTH - 1:0] m_axi_master_portA_RUSER;
wire m_axi_master_portA_RVALID;
wire m_axi_master_portA_RREADY;


wire [C_S_AXI_CONFIG_BUS_ADDR_WIDTH - 1:0] s_axi_CONFIG_BUS_AWADDR;
wire s_axi_CONFIG_BUS_AWVALID;
wire s_axi_CONFIG_BUS_AWREADY;
wire [C_S_AXI_CONFIG_BUS_DATA_WIDTH - 1:0] s_axi_CONFIG_BUS_WDATA;
wire [C_S_AXI_CONFIG_BUS_DATA_WIDTH/8 - 1:0] s_axi_CONFIG_BUS_WSTRB;
wire s_axi_CONFIG_BUS_WVALID;
wire s_axi_CONFIG_BUS_WREADY;
wire [2 - 1:0] s_axi_CONFIG_BUS_BRESP;
wire s_axi_CONFIG_BUS_BVALID;
wire s_axi_CONFIG_BUS_BREADY;
wire [C_S_AXI_CONFIG_BUS_ADDR_WIDTH - 1:0] s_axi_CONFIG_BUS_ARADDR;
wire s_axi_CONFIG_BUS_ARVALID;
wire s_axi_CONFIG_BUS_ARREADY;
wire [C_S_AXI_CONFIG_BUS_DATA_WIDTH - 1:0] s_axi_CONFIG_BUS_RDATA;
wire [2 - 1:0] s_axi_CONFIG_BUS_RRESP;
wire s_axi_CONFIG_BUS_RVALID;
wire s_axi_CONFIG_BUS_RREADY;
wire interrupt;

wire aresetn;


wire [32 - 1:0] sig_lloyds_kernel_top_master_portA_datain;
wire [32 - 1:0] sig_lloyds_kernel_top_master_portA_dataout;
wire [32 - 1:0] sig_lloyds_kernel_top_master_portA_address;
wire [32 - 1:0] sig_lloyds_kernel_top_master_portA_size;
wire sig_lloyds_kernel_top_master_portA_req_din;
wire sig_lloyds_kernel_top_master_portA_req_full_n;
wire sig_lloyds_kernel_top_master_portA_req_write;
wire sig_lloyds_kernel_top_master_portA_rsp_empty_n;
wire sig_lloyds_kernel_top_master_portA_rsp_read;

wire [32 - 1:0] sig_lloyds_kernel_top_block_address;
wire [32 - 1:0] sig_lloyds_kernel_top_data_points_addr;
wire [32 - 1:0] sig_lloyds_kernel_top_centres_in_addr;
wire [32 - 1:0] sig_lloyds_kernel_top_output_addr;
wire [32 - 1:0] sig_lloyds_kernel_top_update_points;
wire [32 - 1:0] sig_lloyds_kernel_top_n;
wire [32 - 1:0] sig_lloyds_kernel_top_k;
wire [32 - 1:0] sig_lloyds_kernel_top_debug;
wire sig_lloyds_kernel_top_ap_start;
wire sig_lloyds_kernel_top_ap_ready;
wire sig_lloyds_kernel_top_ap_done;
wire sig_lloyds_kernel_top_ap_idle;

wire sig_lloyds_kernel_top_ap_rst;



lloyds_kernel_top lloyds_kernel_top_U(
    .master_portA_datain(sig_lloyds_kernel_top_master_portA_datain),
    .master_portA_dataout(sig_lloyds_kernel_top_master_portA_dataout),
    .master_portA_address(sig_lloyds_kernel_top_master_portA_address),
    .master_portA_size(sig_lloyds_kernel_top_master_portA_size),
    .master_portA_req_din(sig_lloyds_kernel_top_master_portA_req_din),
    .master_portA_req_full_n(sig_lloyds_kernel_top_master_portA_req_full_n),
    .master_portA_req_write(sig_lloyds_kernel_top_master_portA_req_write),
    .master_portA_rsp_empty_n(sig_lloyds_kernel_top_master_portA_rsp_empty_n),
    .master_portA_rsp_read(sig_lloyds_kernel_top_master_portA_rsp_read),
    .block_address(sig_lloyds_kernel_top_block_address),
    .data_points_addr(sig_lloyds_kernel_top_data_points_addr),
    .centres_in_addr(sig_lloyds_kernel_top_centres_in_addr),
    .output_addr(sig_lloyds_kernel_top_output_addr),
    .update_points(sig_lloyds_kernel_top_update_points),
    .n(sig_lloyds_kernel_top_n),
    .k(sig_lloyds_kernel_top_k),
    .debug(sig_lloyds_kernel_top_debug),
    .ap_start(sig_lloyds_kernel_top_ap_start),
    .ap_ready(sig_lloyds_kernel_top_ap_ready),
    .ap_done(sig_lloyds_kernel_top_ap_done),
    .ap_idle(sig_lloyds_kernel_top_ap_idle),
    .ap_rst(sig_lloyds_kernel_top_ap_rst),
    .ap_clk(aclk)
);

lloyds_kernel_top_master_portA_if #(
    .C_ID_WIDTH(C_M_AXI_MASTER_PORTA_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_MASTER_PORTA_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_MASTER_PORTA_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_MASTER_PORTA_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_MASTER_PORTA_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_MASTER_PORTA_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_MASTER_PORTA_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_MASTER_PORTA_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_MASTER_PORTA_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_MASTER_PORTA_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_MASTER_PORTA_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_MASTER_PORTA_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_MASTER_PORTA_CACHE_VALUE))
lloyds_kernel_top_master_portA_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_lloyds_kernel_top_master_portA_datain),
    .USER_dataout(sig_lloyds_kernel_top_master_portA_dataout),
    .USER_address(sig_lloyds_kernel_top_master_portA_address),
    .USER_size(sig_lloyds_kernel_top_master_portA_size),
    .USER_req_din(sig_lloyds_kernel_top_master_portA_req_din),
    .USER_req_full_n(sig_lloyds_kernel_top_master_portA_req_full_n),
    .USER_req_write(sig_lloyds_kernel_top_master_portA_req_write),
    .USER_rsp_empty_n(sig_lloyds_kernel_top_master_portA_rsp_empty_n),
    .USER_rsp_read(sig_lloyds_kernel_top_master_portA_rsp_read),
    .AWID(m_axi_master_portA_AWID),
    .AWADDR(m_axi_master_portA_AWADDR),
    .AWLEN(m_axi_master_portA_AWLEN),
    .AWSIZE(m_axi_master_portA_AWSIZE),
    .AWBURST(m_axi_master_portA_AWBURST),
    .AWLOCK(m_axi_master_portA_AWLOCK),
    .AWCACHE(m_axi_master_portA_AWCACHE),
    .AWPROT(m_axi_master_portA_AWPROT),
    .AWQOS(m_axi_master_portA_AWQOS),
    .AWUSER(m_axi_master_portA_AWUSER),
    .AWVALID(m_axi_master_portA_AWVALID),
    .AWREADY(m_axi_master_portA_AWREADY),
    .WDATA(m_axi_master_portA_WDATA),
    .WSTRB(m_axi_master_portA_WSTRB),
    .WLAST(m_axi_master_portA_WLAST),
    .WUSER(m_axi_master_portA_WUSER),
    .WVALID(m_axi_master_portA_WVALID),
    .WREADY(m_axi_master_portA_WREADY),
    .BID(m_axi_master_portA_BID),
    .BRESP(m_axi_master_portA_BRESP),
    .BUSER(m_axi_master_portA_BUSER),
    .BVALID(m_axi_master_portA_BVALID),
    .BREADY(m_axi_master_portA_BREADY),
    .ARID(m_axi_master_portA_ARID),
    .ARADDR(m_axi_master_portA_ARADDR),
    .ARLEN(m_axi_master_portA_ARLEN),
    .ARSIZE(m_axi_master_portA_ARSIZE),
    .ARBURST(m_axi_master_portA_ARBURST),
    .ARLOCK(m_axi_master_portA_ARLOCK),
    .ARCACHE(m_axi_master_portA_ARCACHE),
    .ARPROT(m_axi_master_portA_ARPROT),
    .ARQOS(m_axi_master_portA_ARQOS),
    .ARUSER(m_axi_master_portA_ARUSER),
    .ARVALID(m_axi_master_portA_ARVALID),
    .ARREADY(m_axi_master_portA_ARREADY),
    .RID(m_axi_master_portA_RID),
    .RDATA(m_axi_master_portA_RDATA),
    .RRESP(m_axi_master_portA_RRESP),
    .RLAST(m_axi_master_portA_RLAST),
    .RUSER(m_axi_master_portA_RUSER),
    .RVALID(m_axi_master_portA_RVALID),
    .RREADY(m_axi_master_portA_RREADY));

lloyds_kernel_top_CONFIG_BUS_if #(
    .C_ADDR_WIDTH(C_S_AXI_CONFIG_BUS_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_CONFIG_BUS_DATA_WIDTH))
lloyds_kernel_top_CONFIG_BUS_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_block_address(sig_lloyds_kernel_top_block_address),
    .I_data_points_addr(sig_lloyds_kernel_top_data_points_addr),
    .I_centres_in_addr(sig_lloyds_kernel_top_centres_in_addr),
    .I_output_addr(sig_lloyds_kernel_top_output_addr),
    .I_update_points(sig_lloyds_kernel_top_update_points),
    .I_n(sig_lloyds_kernel_top_n),
    .I_k(sig_lloyds_kernel_top_k),
    .O_debug(sig_lloyds_kernel_top_debug),
    .I_ap_start(sig_lloyds_kernel_top_ap_start),
    .O_ap_ready(sig_lloyds_kernel_top_ap_ready),
    .O_ap_done(sig_lloyds_kernel_top_ap_done),
    .O_ap_idle(sig_lloyds_kernel_top_ap_idle),
    .AWADDR(s_axi_CONFIG_BUS_AWADDR),
    .AWVALID(s_axi_CONFIG_BUS_AWVALID),
    .AWREADY(s_axi_CONFIG_BUS_AWREADY),
    .WDATA(s_axi_CONFIG_BUS_WDATA),
    .WSTRB(s_axi_CONFIG_BUS_WSTRB),
    .WVALID(s_axi_CONFIG_BUS_WVALID),
    .WREADY(s_axi_CONFIG_BUS_WREADY),
    .BRESP(s_axi_CONFIG_BUS_BRESP),
    .BVALID(s_axi_CONFIG_BUS_BVALID),
    .BREADY(s_axi_CONFIG_BUS_BREADY),
    .ARADDR(s_axi_CONFIG_BUS_ARADDR),
    .ARVALID(s_axi_CONFIG_BUS_ARVALID),
    .ARREADY(s_axi_CONFIG_BUS_ARREADY),
    .RDATA(s_axi_CONFIG_BUS_RDATA),
    .RRESP(s_axi_CONFIG_BUS_RRESP),
    .RVALID(s_axi_CONFIG_BUS_RVALID),
    .RREADY(s_axi_CONFIG_BUS_RREADY),
    .interrupt(interrupt));

lloyds_kernel_top_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_lloyds_kernel_top_ap_rst),
    .din(aresetn));

endmodule
