

================================================================
== Vivado HLS Report for 'lloyds_kernel_top'
================================================================
* Date:           Thu Jun 12 16:46:30 2014

* Version:        2013.4 (build date: Mon Dec 09 17:07:59 PM 2013)
* Project:        kernel
* Solution:       kernel
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  364|    ?|  365|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------------+-----+-----+----------+-----------+-----------+-------+----------+
        |                            |  Latency  | Iteration|  Initiation Interval  |  Trip |          |
        |          Loop Name         | min | max |  Latency |  achieved |   target  | Count | Pipelined|
        +----------------------------+-----+-----+----------+-----------+-----------+-------+----------+
        |- process_data_points_loop  |  208|    ?|  13 ~ ?  |          -|          -|     16|    no    |
        | + minsearch_loop           |    9|    ?|         9|          1|          1| 1 ~ ? |    yes   |
        +----------------------------+-----+-----+----------+-----------+-----------+-------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
|ShiftMemory      |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Shift register: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 1
  Pipeline-0: II = 1, D = 9, States = { 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (!exitcond)
	19  / (exitcond)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / (tmp_3) | (!tmp_3 & tmp_14)
	9  / (!tmp_3 & !tmp_14)
18 --> 
	7  / true
19 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: k_read [2/2] 0.00ns
:10  %k_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %k) nounwind

ST_1: update_points_read [2/2] 0.00ns
:11  %update_points_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %update_points) nounwind

ST_1: output_addr_read [2/2] 0.00ns
:12  %output_addr_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %output_addr) nounwind

ST_1: centres_in_addr_read [2/2] 0.00ns
:13  %centres_in_addr_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %centres_in_addr) nounwind

ST_1: data_points_addr_read [2/2] 0.00ns
:14  %data_points_addr_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %data_points_addr) nounwind

ST_1: block_address_read [2/2] 0.00ns
:15  %block_address_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %block_address) nounwind

ST_1: data_points_buffer_0_value [1/1] 0.00ns
:16  %data_points_buffer_0_value = alloca [16 x i32], align 4

ST_1: data_points_buffer_1_value [1/1] 0.00ns
:17  %data_points_buffer_1_value = alloca [16 x i32], align 4

ST_1: data_points_buffer_2_value [1/1] 0.00ns
:18  %data_points_buffer_2_value = alloca [16 x i32], align 4

ST_1: centres_buffer_0_value [1/1] 0.00ns
:19  %centres_buffer_0_value = alloca [256 x i32], align 4

ST_1: centres_buffer_1_value [1/1] 0.00ns
:20  %centres_buffer_1_value = alloca [256 x i32], align 4

ST_1: centres_buffer_2_value [1/1] 0.00ns
:21  %centres_buffer_2_value = alloca [256 x i32], align 4

ST_1: output_buffer_min_idx_V [1/1] 0.00ns
:22  %output_buffer_min_idx_V = alloca [16 x i8], align 1

ST_1: output_buffer_sum_sq [1/1] 0.00ns
:23  %output_buffer_sum_sq = alloca [16 x i32], align 4

ST_1: output_points_buffer_0_value [1/1] 0.00ns
:24  %output_points_buffer_0_value = alloca [16 x i32], align 4

ST_1: output_points_buffer_1_value [1/1] 0.00ns
:25  %output_points_buffer_1_value = alloca [16 x i32], align 4

ST_1: output_points_buffer_2_value [1/1] 0.00ns
:26  %output_points_buffer_2_value = alloca [16 x i32], align 4


 <State 2>: 4.88ns
ST_2: k_read [1/2] 0.00ns
:10  %k_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %k) nounwind

ST_2: update_points_read [1/2] 0.00ns
:11  %update_points_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %update_points) nounwind

ST_2: output_addr_read [1/2] 0.00ns
:12  %output_addr_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %output_addr) nounwind

ST_2: centres_in_addr_read [1/2] 0.00ns
:13  %centres_in_addr_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %centres_in_addr) nounwind

ST_2: data_points_addr_read [1/2] 0.00ns
:14  %data_points_addr_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %data_points_addr) nounwind

ST_2: block_address_read [1/2] 0.00ns
:15  %block_address_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %block_address) nounwind

ST_2: tmp_11 [1/1] 0.00ns
:45  %tmp_11 = shl i32 %block_address_read, 2

ST_2: data_points_block_address [1/1] 2.44ns
:46  %data_points_block_address = sub i32 %tmp_11, %block_address_read

ST_2: stg_45 [2/2] 2.44ns
:48  call fastcc void @load_points_buffer(i32 %data_points_addr_read, i32 %data_points_block_address, i32* %master_portA, [16 x i32]* %data_points_buffer_0_value, [16 x i32]* %data_points_buffer_1_value, [16 x i32]* %data_points_buffer_2_value) nounwind

ST_2: tmp_16 [1/1] 0.00ns
:49  %tmp_16 = trunc i32 %k_read to i8


 <State 3>: 0.00ns
ST_3: stg_47 [1/2] 0.00ns
:48  call fastcc void @load_points_buffer(i32 %data_points_addr_read, i32 %data_points_block_address, i32* %master_portA, [16 x i32]* %data_points_buffer_0_value, [16 x i32]* %data_points_buffer_1_value, [16 x i32]* %data_points_buffer_2_value) nounwind


 <State 4>: 3.80ns
ST_4: stg_48 [2/2] 3.80ns
:50  call fastcc void @load_centres_buffer(i32 %centres_in_addr_read, i32* %master_portA, i8 %tmp_16, [256 x i32]* %centres_buffer_0_value, [256 x i32]* %centres_buffer_1_value, [256 x i32]* %centres_buffer_2_value) nounwind

ST_4: data_points_buffer_0_value_addr [1/1] 0.00ns
:51  %data_points_buffer_0_value_addr = getelementptr [16 x i32]* %data_points_buffer_0_value, i64 0, i64 0

ST_4: data_points_buffer_0_value_load [2/2] 2.39ns
:52  %data_points_buffer_0_value_load = load i32* %data_points_buffer_0_value_addr, align 16


 <State 5>: 2.39ns
ST_5: stg_51 [1/2] 0.00ns
:50  call fastcc void @load_centres_buffer(i32 %centres_in_addr_read, i32* %master_portA, i8 %tmp_16, [256 x i32]* %centres_buffer_0_value, [256 x i32]* %centres_buffer_1_value, [256 x i32]* %centres_buffer_2_value) nounwind

ST_5: data_points_buffer_0_value_load [1/2] 2.39ns
:52  %data_points_buffer_0_value_load = load i32* %data_points_buffer_0_value_addr, align 16

ST_5: stg_53 [2/2] 0.00ns
:53  call void @_ssdm_op_Write.ap_none.i32P(i32* %debug, i32 %data_points_buffer_0_value_load) nounwind


 <State 6>: 1.26ns
ST_6: stg_54 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32 %block_address) nounwind, !map !14

ST_6: stg_55 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %master_portA) nounwind, !map !20

ST_6: stg_56 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 %data_points_addr) nounwind, !map !24

ST_6: stg_57 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %centres_in_addr) nounwind, !map !28

ST_6: stg_58 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %output_addr) nounwind, !map !32

ST_6: stg_59 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %update_points) nounwind, !map !36

ST_6: stg_60 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %n) nounwind, !map !40

ST_6: stg_61 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %k) nounwind, !map !44

ST_6: stg_62 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32* %debug) nounwind, !map !48

ST_6: stg_63 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([18 x i8]* @str) nounwind

ST_6: stg_64 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecBus(i32* %master_portA, [7 x i8]* @p_str513, i32 0, i32 0, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_65 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecIFCore(i32* %master_portA, [1 x i8]* @p_str19, [6 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind

ST_6: stg_66 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecWire(i32 %data_points_addr, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_67 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecIFCore(i32 %data_points_addr, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_68 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecWire(i32 %centres_in_addr, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_69 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecIFCore(i32 %centres_in_addr, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_70 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecWire(i32 %output_addr, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_71 [1/1] 0.00ns
:34  call void (...)* @_ssdm_op_SpecIFCore(i32 %output_addr, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_72 [1/1] 0.00ns
:35  call void (...)* @_ssdm_op_SpecWire(i32 %n, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_73 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecIFCore(i32 %n, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_74 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecWire(i32 %k, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_75 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecIFCore(i32 %k, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_76 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecWire(i32 %update_points, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_77 [1/1] 0.00ns
:40  call void (...)* @_ssdm_op_SpecIFCore(i32 %update_points, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_78 [1/1] 0.00ns
:41  call void (...)* @_ssdm_op_SpecWire(i32 %block_address, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_79 [1/1] 0.00ns
:42  call void (...)* @_ssdm_op_SpecIFCore(i32 %block_address, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_80 [1/1] 0.00ns
:43  call void (...)* @_ssdm_op_SpecWire(i32* %debug, [8 x i8]* @p_str715, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_6: stg_81 [1/1] 0.00ns
:44  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: kernel_info_block_address [1/1] 0.00ns
:47  %kernel_info_block_address = shl i32 %block_address_read, 1

ST_6: stg_83 [1/2] 0.00ns
:53  call void @_ssdm_op_Write.ap_none.i32P(i32* %debug, i32 %data_points_buffer_0_value_load) nounwind

ST_6: stg_84 [1/1] 0.00ns
:54  call void (...)* @_ssdm_op_SpecIFCore(i32* %debug, [1 x i8]* @p_str19, [10 x i8]* @p_str816, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [23 x i8]* @p_str9) nounwind

ST_6: stg_85 [1/1] 1.26ns
:55  br label %1


 <State 7>: 2.52ns
ST_7: closest_centre_value_2_s [1/1] 0.00ns
:0  %closest_centre_value_2_s = phi i32 [ undef, %0 ], [ %closest_centre_value_2_3, %.loopexit ]

ST_7: closest_centre_value_1_s [1/1] 0.00ns
:1  %closest_centre_value_1_s = phi i32 [ undef, %0 ], [ %closest_centre_value_1_3, %.loopexit ]

ST_7: closest_centre_value_0_s [1/1] 0.00ns
:2  %closest_centre_value_0_s = phi i32 [ undef, %0 ], [ %closest_centre_value_0_3, %.loopexit ]

ST_7: i [1/1] 0.00ns
:3  %i = phi i5 [ 0, %0 ], [ %i_1, %.loopexit ]

ST_7: exitcond [1/1] 1.91ns
:4  %exitcond = icmp eq i5 %i, -16

ST_7: i_1 [1/1] 1.72ns
:5  %i_1 = add i5 %i, 1

ST_7: stg_92 [1/1] 0.00ns
:6  br i1 %exitcond, label %5, label %2

ST_7: tmp_1 [1/1] 0.00ns
:3  %tmp_1 = zext i5 %i to i64

ST_7: data_points_buffer_0_value_addr_1 [1/1] 0.00ns
:4  %data_points_buffer_0_value_addr_1 = getelementptr [16 x i32]* %data_points_buffer_0_value, i64 0, i64 %tmp_1

ST_7: data_points_buffer_0_value_load_1 [2/2] 2.39ns
:5  %data_points_buffer_0_value_load_1 = load i32* %data_points_buffer_0_value_addr_1, align 4

ST_7: data_points_buffer_1_value_addr [1/1] 0.00ns
:6  %data_points_buffer_1_value_addr = getelementptr [16 x i32]* %data_points_buffer_1_value, i64 0, i64 %tmp_1

ST_7: data_points_buffer_1_value_load [2/2] 2.39ns
:7  %data_points_buffer_1_value_load = load i32* %data_points_buffer_1_value_addr, align 4

ST_7: data_points_buffer_2_value_addr [1/1] 0.00ns
:8  %data_points_buffer_2_value_addr = getelementptr [16 x i32]* %data_points_buffer_2_value, i64 0, i64 %tmp_1

ST_7: data_points_buffer_2_value_load [2/2] 2.39ns
:9  %data_points_buffer_2_value_load = load i32* %data_points_buffer_2_value_addr, align 4

ST_7: tmp_s [1/1] 2.52ns
:0  %tmp_s = icmp eq i32 %update_points_read, 0

ST_7: stg_101 [1/1] 0.00ns
:1  br i1 %tmp_s, label %6, label %7

ST_7: stg_102 [2/2] 0.00ns
:0  call fastcc void @store_output_points_buffer(i32 %output_addr_read, [16 x i32]* %output_points_buffer_0_value, [16 x i32]* %output_points_buffer_1_value, [16 x i32]* %output_points_buffer_2_value, i32 %data_points_block_address, i32* %master_portA) nounwind

ST_7: stg_103 [2/2] 0.00ns
:0  call fastcc void @store_output_buffer(i32 %output_addr_read, [16 x i8]* %output_buffer_min_idx_V, [16 x i32]* %output_buffer_sum_sq, i32 %kernel_info_block_address, i32* %master_portA) nounwind


 <State 8>: 2.39ns
ST_8: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_8: stg_105 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([25 x i8]* @p_str10) nounwind

ST_8: tmp [1/1] 0.00ns
:2  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([25 x i8]* @p_str10) nounwind

ST_8: data_points_buffer_0_value_load_1 [1/2] 2.39ns
:5  %data_points_buffer_0_value_load_1 = load i32* %data_points_buffer_0_value_addr_1, align 4

ST_8: data_points_buffer_1_value_load [1/2] 2.39ns
:7  %data_points_buffer_1_value_load = load i32* %data_points_buffer_1_value_addr, align 4

ST_8: data_points_buffer_2_value_load [1/2] 2.39ns
:9  %data_points_buffer_2_value_load = load i32* %data_points_buffer_2_value_addr, align 4

ST_8: stg_110 [1/1] 1.57ns
:10  br label %3


 <State 9>: 2.52ns
ST_9: final_centre_index_V [1/1] 0.00ns
:4  %final_centre_index_V = phi i8 [ 0, %2 ], [ %ii_V, %4 ]

ST_9: tmp_2 [1/1] 0.00ns
:7  %tmp_2 = zext i8 %final_centre_index_V to i32

ST_9: tmp_3 [1/1] 2.52ns
:8  %tmp_3 = icmp ugt i32 %tmp_2, %k_read

ST_9: ii_V [1/1] 1.72ns
:9  %ii_V = add i8 %final_centre_index_V, 1

ST_9: tmp_5 [1/1] 0.00ns
.preheader.i.i.preheader.0:4  %tmp_5 = zext i8 %final_centre_index_V to i64

ST_9: centres_buffer_0_value_addr [1/1] 0.00ns
.preheader.i.i.preheader.0:5  %centres_buffer_0_value_addr = getelementptr [256 x i32]* %centres_buffer_0_value, i64 0, i64 %tmp_5

ST_9: closest_centre_value_0 [2/2] 2.39ns
.preheader.i.i.preheader.0:6  %closest_centre_value_0 = load i32* %centres_buffer_0_value_addr, align 4

ST_9: centres_buffer_1_value_addr [1/1] 0.00ns
.preheader.i.i.preheader.0:7  %centres_buffer_1_value_addr = getelementptr [256 x i32]* %centres_buffer_1_value, i64 0, i64 %tmp_5

ST_9: closest_centre_value_1 [2/2] 2.39ns
.preheader.i.i.preheader.0:8  %closest_centre_value_1 = load i32* %centres_buffer_1_value_addr, align 4

ST_9: centres_buffer_2_value_addr [1/1] 0.00ns
.preheader.i.i.preheader.0:9  %centres_buffer_2_value_addr = getelementptr [256 x i32]* %centres_buffer_2_value, i64 0, i64 %tmp_5

ST_9: closest_centre_value_2 [2/2] 2.39ns
.preheader.i.i.preheader.0:10  %closest_centre_value_2 = load i32* %centres_buffer_2_value_addr, align 4

ST_9: tmp_14 [1/1] 2.52ns
.preheader.i.i.preheader.0:47  %tmp_14 = icmp eq i32 %tmp_2, %k_read


 <State 10>: 2.39ns
ST_10: closest_centre_value_0 [1/2] 2.39ns
.preheader.i.i.preheader.0:6  %closest_centre_value_0 = load i32* %centres_buffer_0_value_addr, align 4

ST_10: closest_centre_value_1 [1/2] 2.39ns
.preheader.i.i.preheader.0:8  %closest_centre_value_1 = load i32* %centres_buffer_1_value_addr, align 4

ST_10: closest_centre_value_2 [1/2] 2.39ns
.preheader.i.i.preheader.0:10  %closest_centre_value_2 = load i32* %centres_buffer_2_value_addr, align 4


 <State 11>: 8.52ns
ST_11: tmp_9 [1/1] 2.44ns
.preheader.i.i.preheader.0:12  %tmp_9 = sub nsw i32 %closest_centre_value_0, %data_points_buffer_0_value_load_1

ST_11: lhs_V [1/1] 0.00ns
.preheader.i.i.preheader.0:13  %lhs_V = sext i32 %tmp_9 to i64

ST_11: r_V [6/6] 6.08ns
.preheader.i.i.preheader.0:14  %r_V = mul nsw i64 %lhs_V, %lhs_V

ST_11: tmp_2_1 [1/1] 2.44ns
.preheader.i.i.preheader.0:19  %tmp_2_1 = sub nsw i32 %closest_centre_value_1, %data_points_buffer_1_value_load

ST_11: lhs_V_1 [1/1] 0.00ns
.preheader.i.i.preheader.0:20  %lhs_V_1 = sext i32 %tmp_2_1 to i64

ST_11: r_V_1 [6/6] 6.08ns
.preheader.i.i.preheader.0:21  %r_V_1 = mul nsw i64 %lhs_V_1, %lhs_V_1

ST_11: tmp_2_2 [1/1] 2.44ns
.preheader.i.i.preheader.0:26  %tmp_2_2 = sub nsw i32 %closest_centre_value_2, %data_points_buffer_2_value_load

ST_11: lhs_V_2 [1/1] 0.00ns
.preheader.i.i.preheader.0:27  %lhs_V_2 = sext i32 %tmp_2_2 to i64

ST_11: r_V_2 [6/6] 6.08ns
.preheader.i.i.preheader.0:28  %r_V_2 = mul nsw i64 %lhs_V_2, %lhs_V_2


 <State 12>: 6.08ns
ST_12: r_V [5/6] 6.08ns
.preheader.i.i.preheader.0:14  %r_V = mul nsw i64 %lhs_V, %lhs_V

ST_12: r_V_1 [5/6] 6.08ns
.preheader.i.i.preheader.0:21  %r_V_1 = mul nsw i64 %lhs_V_1, %lhs_V_1

ST_12: r_V_2 [5/6] 6.08ns
.preheader.i.i.preheader.0:28  %r_V_2 = mul nsw i64 %lhs_V_2, %lhs_V_2


 <State 13>: 6.08ns
ST_13: r_V [4/6] 6.08ns
.preheader.i.i.preheader.0:14  %r_V = mul nsw i64 %lhs_V, %lhs_V

ST_13: r_V_1 [4/6] 6.08ns
.preheader.i.i.preheader.0:21  %r_V_1 = mul nsw i64 %lhs_V_1, %lhs_V_1

ST_13: r_V_2 [4/6] 6.08ns
.preheader.i.i.preheader.0:28  %r_V_2 = mul nsw i64 %lhs_V_2, %lhs_V_2


 <State 14>: 6.08ns
ST_14: r_V [3/6] 6.08ns
.preheader.i.i.preheader.0:14  %r_V = mul nsw i64 %lhs_V, %lhs_V

ST_14: r_V_1 [3/6] 6.08ns
.preheader.i.i.preheader.0:21  %r_V_1 = mul nsw i64 %lhs_V_1, %lhs_V_1

ST_14: r_V_2 [3/6] 6.08ns
.preheader.i.i.preheader.0:28  %r_V_2 = mul nsw i64 %lhs_V_2, %lhs_V_2


 <State 15>: 6.08ns
ST_15: r_V [2/6] 6.08ns
.preheader.i.i.preheader.0:14  %r_V = mul nsw i64 %lhs_V, %lhs_V

ST_15: r_V_1 [2/6] 6.08ns
.preheader.i.i.preheader.0:21  %r_V_1 = mul nsw i64 %lhs_V_1, %lhs_V_1

ST_15: r_V_2 [2/6] 6.08ns
.preheader.i.i.preheader.0:28  %r_V_2 = mul nsw i64 %lhs_V_2, %lhs_V_2


 <State 16>: 8.57ns
ST_16: r_V [1/6] 6.08ns
.preheader.i.i.preheader.0:14  %r_V = mul nsw i64 %lhs_V, %lhs_V

ST_16: stg_148 [1/1] 0.00ns
.preheader.i.i.preheader.0:15  call void (...)* @_ssdm_op_SpecFUCore(i64 %r_V, [1 x i8]* @p_str, [6 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_16: result [1/1] 0.00ns
.preheader.i.i.preheader.0:16  %result = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %r_V, i32 4, i32 35)

ST_16: r_V_1 [1/6] 6.08ns
.preheader.i.i.preheader.0:21  %r_V_1 = mul nsw i64 %lhs_V_1, %lhs_V_1

ST_16: stg_151 [1/1] 0.00ns
.preheader.i.i.preheader.0:22  call void (...)* @_ssdm_op_SpecFUCore(i64 %r_V_1, [1 x i8]* @p_str, [6 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_16: result_1 [1/1] 0.00ns
.preheader.i.i.preheader.0:23  %result_1 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %r_V_1, i32 4, i32 35)

ST_16: r_V_2 [1/6] 6.08ns
.preheader.i.i.preheader.0:28  %r_V_2 = mul nsw i64 %lhs_V_2, %lhs_V_2

ST_16: stg_154 [1/1] 0.00ns
.preheader.i.i.preheader.0:29  call void (...)* @_ssdm_op_SpecFUCore(i64 %r_V_2, [1 x i8]* @p_str, [6 x i8]* @p_str2, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_16: result_2 [1/1] 0.00ns
.preheader.i.i.preheader.0:30  %result_2 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %r_V_2, i32 4, i32 35)

ST_16: tmp3 [1/1] 2.49ns
.preheader.i.i.preheader.0:33  %tmp3 = add nsw i32 %result_1, %result


 <State 17>: 7.95ns
ST_17: closest_centre_value_2_1 [1/1] 0.00ns
:0  %closest_centre_value_2_1 = phi i32 [ %closest_centre_value_2_s, %2 ], [ %closest_centre_value_2_closest_centre_value_2_1, %4 ]

ST_17: closest_centre_value_1_1 [1/1] 0.00ns
:1  %closest_centre_value_1_1 = phi i32 [ %closest_centre_value_1_s, %2 ], [ %closest_centre_value_1_closest_centre_value_1_1, %4 ]

ST_17: closest_centre_value_0_1 [1/1] 0.00ns
:2  %closest_centre_value_0_1 = phi i32 [ %closest_centre_value_0_s, %2 ], [ %closest_centre_value_0_closest_centre_value_0_1, %4 ]

ST_17: p_s [1/1] 0.00ns
:3  %p_s = phi i8 [ 0, %2 ], [ %final_centre_index_V_s, %4 ]

ST_17: sum_sq_out [1/1] 0.00ns
:5  %sum_sq_out = phi i32 [ 2147483647, %2 ], [ %tmp_dist_sum_sq_out, %4 ]

ST_17: min_dist [1/1] 0.00ns
:6  %min_dist = phi i32 [ 2147483647, %2 ], [ %tmp_dist_min_dist, %4 ]

ST_17: stg_163 [1/1] 1.57ns
:10  br i1 %tmp_3, label %.loopexit, label %.preheader.i.i.preheader.0

ST_17: empty_29 [1/1] 0.00ns
.preheader.i.i.preheader.0:0  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 -1, i64 0) nounwind

ST_17: stg_165 [1/1] 0.00ns
.preheader.i.i.preheader.0:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str11) nounwind

ST_17: tmp_4 [1/1] 0.00ns
.preheader.i.i.preheader.0:2  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str11) nounwind

ST_17: stg_167 [1/1] 0.00ns
.preheader.i.i.preheader.0:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, [1 x i8]* @p_str19) nounwind

ST_17: tmp_6 [1/1] 0.00ns
.preheader.i.i.preheader.0:11  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_17: empty_30 [1/1] 0.00ns
.preheader.i.i.preheader.0:17  %empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_6) nounwind

ST_17: tmp_7 [1/1] 0.00ns
.preheader.i.i.preheader.0:18  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_17: empty_31 [1/1] 0.00ns
.preheader.i.i.preheader.0:24  %empty_31 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_7) nounwind

ST_17: tmp_8 [1/1] 0.00ns
.preheader.i.i.preheader.0:25  %tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_17: empty_32 [1/1] 0.00ns
.preheader.i.i.preheader.0:31  %empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_8) nounwind

ST_17: tmp_10 [1/1] 0.00ns
.preheader.i.i.preheader.0:32  %tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_17: stg_175 [1/1] 0.00ns
.preheader.i.i.preheader.0:34  call void (...)* @_ssdm_op_SpecFUCore(i32 %tmp3, [1 x i8]* @p_str, [9 x i8]* @p_str5, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_17: empty_33 [1/1] 0.00ns
.preheader.i.i.preheader.0:35  %empty_33 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_10) nounwind

ST_17: tmp_12 [1/1] 0.00ns
.preheader.i.i.preheader.0:36  %tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_17: sum_sq_out_3 [1/1] 2.49ns
.preheader.i.i.preheader.0:37  %sum_sq_out_3 = add nsw i32 %result_2, %tmp3

ST_17: stg_179 [1/1] 0.00ns
.preheader.i.i.preheader.0:38  call void (...)* @_ssdm_op_SpecFUCore(i32 %sum_sq_out_3, [1 x i8]* @p_str, [9 x i8]* @p_str5, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_17: empty_34 [1/1] 0.00ns
.preheader.i.i.preheader.0:39  %empty_34 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_12) nounwind

ST_17: tmp_13 [1/1] 2.52ns
.preheader.i.i.preheader.0:40  %tmp_13 = icmp slt i32 %sum_sq_out_3, %min_dist

ST_17: closest_centre_value_2_closest_centre_value_2_1 [1/1] 1.37ns
.preheader.i.i.preheader.0:41  %closest_centre_value_2_closest_centre_value_2_1 = select i1 %tmp_13, i32 %closest_centre_value_2, i32 %closest_centre_value_2_1

ST_17: closest_centre_value_1_closest_centre_value_1_1 [1/1] 1.37ns
.preheader.i.i.preheader.0:42  %closest_centre_value_1_closest_centre_value_1_1 = select i1 %tmp_13, i32 %closest_centre_value_1, i32 %closest_centre_value_1_1

ST_17: closest_centre_value_0_closest_centre_value_0_1 [1/1] 1.37ns
.preheader.i.i.preheader.0:43  %closest_centre_value_0_closest_centre_value_0_1 = select i1 %tmp_13, i32 %closest_centre_value_0, i32 %closest_centre_value_0_1

ST_17: final_centre_index_V_s [1/1] 1.37ns
.preheader.i.i.preheader.0:44  %final_centre_index_V_s = select i1 %tmp_13, i8 %final_centre_index_V, i8 %p_s

ST_17: tmp_dist_sum_sq_out [1/1] 1.37ns
.preheader.i.i.preheader.0:45  %tmp_dist_sum_sq_out = select i1 %tmp_13, i32 %sum_sq_out_3, i32 %sum_sq_out

ST_17: tmp_dist_min_dist [1/1] 1.37ns
.preheader.i.i.preheader.0:46  %tmp_dist_min_dist = select i1 %tmp_13, i32 %sum_sq_out_3, i32 %min_dist

ST_17: stg_188 [1/1] 1.57ns
.preheader.i.i.preheader.0:48  br i1 %tmp_14, label %.loopexit, label %4

ST_17: empty_35 [1/1] 0.00ns
:0  %empty_35 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str11, i32 %tmp_4) nounwind

ST_17: stg_190 [1/1] 0.00ns
:1  br label %3


 <State 18>: 2.39ns
ST_18: closest_centre_value_2_3 [1/1] 0.00ns
.loopexit:0  %closest_centre_value_2_3 = phi i32 [ %closest_centre_value_2_1, %3 ], [ %closest_centre_value_2_closest_centre_value_2_1, %.preheader.i.i.preheader.0 ]

ST_18: closest_centre_value_1_3 [1/1] 0.00ns
.loopexit:1  %closest_centre_value_1_3 = phi i32 [ %closest_centre_value_1_1, %3 ], [ %closest_centre_value_1_closest_centre_value_1_1, %.preheader.i.i.preheader.0 ]

ST_18: closest_centre_value_0_3 [1/1] 0.00ns
.loopexit:2  %closest_centre_value_0_3 = phi i32 [ %closest_centre_value_0_1, %3 ], [ %closest_centre_value_0_closest_centre_value_0_1, %.preheader.i.i.preheader.0 ]

ST_18: p_036_2 [1/1] 0.00ns
.loopexit:3  %p_036_2 = phi i8 [ %p_s, %3 ], [ %final_centre_index_V_s, %.preheader.i.i.preheader.0 ]

ST_18: sum_sq_out_2 [1/1] 0.00ns
.loopexit:4  %sum_sq_out_2 = phi i32 [ %sum_sq_out, %3 ], [ %tmp_dist_sum_sq_out, %.preheader.i.i.preheader.0 ]

ST_18: output_buffer_min_idx_V_addr [1/1] 0.00ns
.loopexit:5  %output_buffer_min_idx_V_addr = getelementptr [16 x i8]* %output_buffer_min_idx_V, i64 0, i64 %tmp_1

ST_18: stg_197 [1/1] 2.39ns
.loopexit:6  store i8 %p_036_2, i8* %output_buffer_min_idx_V_addr, align 8

ST_18: output_buffer_sum_sq_addr [1/1] 0.00ns
.loopexit:7  %output_buffer_sum_sq_addr = getelementptr [16 x i32]* %output_buffer_sum_sq, i64 0, i64 %tmp_1

ST_18: stg_199 [1/1] 2.39ns
.loopexit:8  store i32 %sum_sq_out_2, i32* %output_buffer_sum_sq_addr, align 4

ST_18: output_points_buffer_0_value_addr [1/1] 0.00ns
.loopexit:9  %output_points_buffer_0_value_addr = getelementptr [16 x i32]* %output_points_buffer_0_value, i64 0, i64 %tmp_1

ST_18: stg_201 [1/1] 2.39ns
.loopexit:10  store i32 %closest_centre_value_0_3, i32* %output_points_buffer_0_value_addr, align 4

ST_18: output_points_buffer_1_value_addr [1/1] 0.00ns
.loopexit:11  %output_points_buffer_1_value_addr = getelementptr [16 x i32]* %output_points_buffer_1_value, i64 0, i64 %tmp_1

ST_18: stg_203 [1/1] 2.39ns
.loopexit:12  store i32 %closest_centre_value_1_3, i32* %output_points_buffer_1_value_addr, align 4

ST_18: output_points_buffer_2_value_addr [1/1] 0.00ns
.loopexit:13  %output_points_buffer_2_value_addr = getelementptr [16 x i32]* %output_points_buffer_2_value, i64 0, i64 %tmp_1

ST_18: stg_205 [1/1] 2.39ns
.loopexit:14  store i32 %closest_centre_value_2_3, i32* %output_points_buffer_2_value_addr, align 4

ST_18: empty_36 [1/1] 0.00ns
.loopexit:15  %empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([25 x i8]* @p_str10, i32 %tmp) nounwind

ST_18: stg_207 [1/1] 0.00ns
.loopexit:16  br label %1


 <State 19>: 0.00ns
ST_19: stg_208 [1/2] 0.00ns
:0  call fastcc void @store_output_points_buffer(i32 %output_addr_read, [16 x i32]* %output_points_buffer_0_value, [16 x i32]* %output_points_buffer_1_value, [16 x i32]* %output_points_buffer_2_value, i32 %data_points_block_address, i32* %master_portA) nounwind

ST_19: stg_209 [1/1] 0.00ns
:1  br label %8

ST_19: stg_210 [1/2] 0.00ns
:0  call fastcc void @store_output_buffer(i32 %output_addr_read, [16 x i8]* %output_buffer_min_idx_V, [16 x i32]* %output_buffer_sum_sq, i32 %kernel_info_block_address, i32* %master_portA) nounwind

ST_19: stg_211 [1/1] 0.00ns
:1  br label %8

ST_19: stg_212 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
