// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "store_output_points_buffer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic store_output_points_buffer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic store_output_points_buffer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> store_output_points_buffer::ap_ST_st1_fsm_0 = "000";
const sc_lv<3> store_output_points_buffer::ap_ST_pp0_stg0_fsm_1 = "1";
const sc_lv<3> store_output_points_buffer::ap_ST_pp0_stg1_fsm_2 = "10";
const sc_lv<3> store_output_points_buffer::ap_ST_st5_fsm_3 = "11";
const sc_lv<3> store_output_points_buffer::ap_ST_pp1_stg0_fsm_4 = "100";
const sc_lv<3> store_output_points_buffer::ap_ST_st9_fsm_5 = "101";
const sc_lv<1> store_output_points_buffer::ap_const_lv1_0 = "0";
const sc_lv<5> store_output_points_buffer::ap_const_lv5_0 = "00000";
const sc_lv<6> store_output_points_buffer::ap_const_lv6_0 = "000000";
const sc_lv<32> store_output_points_buffer::ap_const_lv32_30 = "110000";
const sc_lv<5> store_output_points_buffer::ap_const_lv5_10 = "10000";
const sc_lv<5> store_output_points_buffer::ap_const_lv5_1 = "1";
const sc_lv<2> store_output_points_buffer::ap_const_lv2_0 = "00";
const sc_lv<7> store_output_points_buffer::ap_const_lv7_1 = "1";
const sc_lv<7> store_output_points_buffer::ap_const_lv7_2 = "10";
const sc_lv<32> store_output_points_buffer::ap_const_lv32_2 = "10";
const sc_lv<32> store_output_points_buffer::ap_const_lv32_1F = "11111";
const sc_lv<6> store_output_points_buffer::ap_const_lv6_30 = "110000";
const sc_lv<6> store_output_points_buffer::ap_const_lv6_1 = "1";

store_output_points_buffer::store_output_points_buffer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    int_buffer_U = new store_output_points_buffer_int_buffer("int_buffer_U");
    int_buffer_U->clk(ap_clk);
    int_buffer_U->reset(ap_rst);
    int_buffer_U->address0(int_buffer_address0);
    int_buffer_U->ce0(int_buffer_ce0);
    int_buffer_U->we0(int_buffer_we0);
    int_buffer_U->d0(int_buffer_d0);
    int_buffer_U->address1(int_buffer_address1);
    int_buffer_U->ce1(int_buffer_ce1);
    int_buffer_U->we1(int_buffer_we1);
    int_buffer_U->d1(int_buffer_d1);
    int_buffer_U->q1(int_buffer_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( bus_r_req_full_n );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_385_pp1_it1 );

    SC_METHOD(thread_buffer_0_value_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_15_fu_222_p1 );

    SC_METHOD(thread_buffer_0_value_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_buffer_1_value_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_15_fu_222_p1 );

    SC_METHOD(thread_buffer_1_value_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_buffer_2_value_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_15_fu_222_p1 );

    SC_METHOD(thread_buffer_2_value_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_bus_r_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( bus_addr_reg_380 );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_385_pp1_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_isIter0_reg_399_pp1_it1 );

    SC_METHOD(thread_bus_r_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_385_pp1_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( int_buffer_load_reg_403 );

    SC_METHOD(thread_bus_r_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_385_pp1_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_isIter0_reg_399_pp1_it1 );

    SC_METHOD(thread_bus_r_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_385_pp1_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_isIter0_reg_399_pp1_it1 );

    SC_METHOD(thread_bus_r_rsp_read);

    SC_METHOD(thread_bus_r_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppstg_exitcond2_reg_385_pp1_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );
    sensitive << ( ap_reg_ppstg_isIter0_reg_399_pp1_it1 );

    SC_METHOD(thread_exitcond1_fu_206_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( i_phi_fu_187_p4 );

    SC_METHOD(thread_exitcond2_fu_311_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvar_reg_194 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_METHOD(thread_i_2_fu_212_p2);
    sensitive << ( i_phi_fu_187_p4 );

    SC_METHOD(thread_i_cast3_fu_218_p1);
    sensitive << ( i_phi_fu_187_p4 );

    SC_METHOD(thread_i_phi_fu_187_p4);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_reg_183 );
    sensitive << ( exitcond1_reg_344 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_2_reg_348 );

    SC_METHOD(thread_indvar_next_fu_317_p2);
    sensitive << ( indvar_reg_194 );

    SC_METHOD(thread_int_buffer_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_17_fu_254_p1 );
    sensitive << ( tmp_29_2_fu_282_p1 );

    SC_METHOD(thread_int_buffer_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( tmp_29_1_fu_268_p1 );
    sensitive << ( tmp_14_fu_323_p1 );

    SC_METHOD(thread_int_buffer_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_int_buffer_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_METHOD(thread_int_buffer_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( buffer_0_value_q0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( buffer_2_value_load_reg_375 );

    SC_METHOD(thread_int_buffer_d1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( buffer_1_value_q0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_int_buffer_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_reg_344 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_int_buffer_we1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_reg_344 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_isIter0_fu_328_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvar_reg_194 );
    sensitive << ( exitcond2_fu_311_p2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    SC_METHOD(thread_p_shl_cast_fu_241_p1);
    sensitive << ( p_shl_fu_233_p3 );

    SC_METHOD(thread_p_shl_fu_233_p3);
    sensitive << ( tmp_18_fu_229_p1 );

    SC_METHOD(thread_tmp_14_fu_323_p1);
    sensitive << ( indvar_reg_194 );

    SC_METHOD(thread_tmp_15_cast_fu_301_p1);
    sensitive << ( tmp_s_fu_291_p4 );

    SC_METHOD(thread_tmp_15_fu_222_p1);
    sensitive << ( i_phi_fu_187_p4 );

    SC_METHOD(thread_tmp_16_fu_245_p2);
    sensitive << ( p_shl_cast_fu_241_p1 );
    sensitive << ( i_cast3_fu_218_p1 );

    SC_METHOD(thread_tmp_17_fu_254_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_16_reg_353 );

    SC_METHOD(thread_tmp_17_fu_254_p1);
    sensitive << ( tmp_17_fu_254_p0 );

    SC_METHOD(thread_tmp_18_fu_229_p1);
    sensitive << ( i_phi_fu_187_p4 );

    SC_METHOD(thread_tmp_28_1_fu_259_p2);
    sensitive << ( tmp_16_reg_353 );

    SC_METHOD(thread_tmp_28_2_fu_273_p2);
    sensitive << ( tmp_16_reg_353 );

    SC_METHOD(thread_tmp_29_1_fu_268_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_28_1_fu_259_p2 );

    SC_METHOD(thread_tmp_29_1_fu_268_p1);
    sensitive << ( tmp_29_1_fu_268_p0 );

    SC_METHOD(thread_tmp_29_2_fu_282_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_28_2_fu_273_p2 );

    SC_METHOD(thread_tmp_29_2_fu_282_p1);
    sensitive << ( tmp_29_2_fu_282_p0 );

    SC_METHOD(thread_tmp_fu_287_p2);
    sensitive << ( offset );
    sensitive << ( address );

    SC_METHOD(thread_tmp_s_fu_291_p4);
    sensitive << ( tmp_fu_287_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_206_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond2_fu_311_p2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_reg_ppiten_pp1_it2 );

    ap_CS_fsm = "000";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "store_output_points_buffer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, offset, "(port)offset");
    sc_trace(mVcdFile, buffer_0_value_address0, "(port)buffer_0_value_address0");
    sc_trace(mVcdFile, buffer_0_value_ce0, "(port)buffer_0_value_ce0");
    sc_trace(mVcdFile, buffer_0_value_q0, "(port)buffer_0_value_q0");
    sc_trace(mVcdFile, buffer_1_value_address0, "(port)buffer_1_value_address0");
    sc_trace(mVcdFile, buffer_1_value_ce0, "(port)buffer_1_value_ce0");
    sc_trace(mVcdFile, buffer_1_value_q0, "(port)buffer_1_value_q0");
    sc_trace(mVcdFile, buffer_2_value_address0, "(port)buffer_2_value_address0");
    sc_trace(mVcdFile, buffer_2_value_ce0, "(port)buffer_2_value_ce0");
    sc_trace(mVcdFile, buffer_2_value_q0, "(port)buffer_2_value_q0");
    sc_trace(mVcdFile, address, "(port)address");
    sc_trace(mVcdFile, bus_r_req_din, "(port)bus_r_req_din");
    sc_trace(mVcdFile, bus_r_req_full_n, "(port)bus_r_req_full_n");
    sc_trace(mVcdFile, bus_r_req_write, "(port)bus_r_req_write");
    sc_trace(mVcdFile, bus_r_rsp_empty_n, "(port)bus_r_rsp_empty_n");
    sc_trace(mVcdFile, bus_r_rsp_read, "(port)bus_r_rsp_read");
    sc_trace(mVcdFile, bus_r_address, "(port)bus_r_address");
    sc_trace(mVcdFile, bus_r_datain, "(port)bus_r_datain");
    sc_trace(mVcdFile, bus_r_dataout, "(port)bus_r_dataout");
    sc_trace(mVcdFile, bus_r_size, "(port)bus_r_size");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, i_reg_183, "i_reg_183");
    sc_trace(mVcdFile, indvar_reg_194, "indvar_reg_194");
    sc_trace(mVcdFile, exitcond1_fu_206_p2, "exitcond1_fu_206_p2");
    sc_trace(mVcdFile, exitcond1_reg_344, "exitcond1_reg_344");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, i_2_fu_212_p2, "i_2_fu_212_p2");
    sc_trace(mVcdFile, i_2_reg_348, "i_2_reg_348");
    sc_trace(mVcdFile, tmp_16_fu_245_p2, "tmp_16_fu_245_p2");
    sc_trace(mVcdFile, tmp_16_reg_353, "tmp_16_reg_353");
    sc_trace(mVcdFile, buffer_2_value_load_reg_375, "buffer_2_value_load_reg_375");
    sc_trace(mVcdFile, bus_addr_reg_380, "bus_addr_reg_380");
    sc_trace(mVcdFile, exitcond2_fu_311_p2, "exitcond2_fu_311_p2");
    sc_trace(mVcdFile, exitcond2_reg_385, "exitcond2_reg_385");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it0, "ap_reg_ppiten_pp1_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it1, "ap_reg_ppiten_pp1_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond2_reg_385_pp1_it1, "ap_reg_ppstg_exitcond2_reg_385_pp1_it1");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it2, "ap_reg_ppiten_pp1_it2");
    sc_trace(mVcdFile, indvar_next_fu_317_p2, "indvar_next_fu_317_p2");
    sc_trace(mVcdFile, isIter0_fu_328_p2, "isIter0_fu_328_p2");
    sc_trace(mVcdFile, isIter0_reg_399, "isIter0_reg_399");
    sc_trace(mVcdFile, ap_reg_ppstg_isIter0_reg_399_pp1_it1, "ap_reg_ppstg_isIter0_reg_399_pp1_it1");
    sc_trace(mVcdFile, int_buffer_q1, "int_buffer_q1");
    sc_trace(mVcdFile, int_buffer_load_reg_403, "int_buffer_load_reg_403");
    sc_trace(mVcdFile, int_buffer_address0, "int_buffer_address0");
    sc_trace(mVcdFile, int_buffer_ce0, "int_buffer_ce0");
    sc_trace(mVcdFile, int_buffer_we0, "int_buffer_we0");
    sc_trace(mVcdFile, int_buffer_d0, "int_buffer_d0");
    sc_trace(mVcdFile, int_buffer_address1, "int_buffer_address1");
    sc_trace(mVcdFile, int_buffer_ce1, "int_buffer_ce1");
    sc_trace(mVcdFile, int_buffer_we1, "int_buffer_we1");
    sc_trace(mVcdFile, int_buffer_d1, "int_buffer_d1");
    sc_trace(mVcdFile, i_phi_fu_187_p4, "i_phi_fu_187_p4");
    sc_trace(mVcdFile, tmp_15_fu_222_p1, "tmp_15_fu_222_p1");
    sc_trace(mVcdFile, tmp_17_fu_254_p1, "tmp_17_fu_254_p1");
    sc_trace(mVcdFile, tmp_29_1_fu_268_p1, "tmp_29_1_fu_268_p1");
    sc_trace(mVcdFile, tmp_29_2_fu_282_p1, "tmp_29_2_fu_282_p1");
    sc_trace(mVcdFile, tmp_14_fu_323_p1, "tmp_14_fu_323_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_301_p1, "tmp_15_cast_fu_301_p1");
    sc_trace(mVcdFile, tmp_18_fu_229_p1, "tmp_18_fu_229_p1");
    sc_trace(mVcdFile, p_shl_fu_233_p3, "p_shl_fu_233_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_241_p1, "p_shl_cast_fu_241_p1");
    sc_trace(mVcdFile, i_cast3_fu_218_p1, "i_cast3_fu_218_p1");
    sc_trace(mVcdFile, tmp_17_fu_254_p0, "tmp_17_fu_254_p0");
    sc_trace(mVcdFile, tmp_28_1_fu_259_p2, "tmp_28_1_fu_259_p2");
    sc_trace(mVcdFile, tmp_29_1_fu_268_p0, "tmp_29_1_fu_268_p0");
    sc_trace(mVcdFile, tmp_28_2_fu_273_p2, "tmp_28_2_fu_273_p2");
    sc_trace(mVcdFile, tmp_29_2_fu_282_p0, "tmp_29_2_fu_282_p0");
    sc_trace(mVcdFile, tmp_fu_287_p2, "tmp_fu_287_p2");
    sc_trace(mVcdFile, tmp_s_fu_291_p4, "tmp_s_fu_291_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

store_output_points_buffer::~store_output_points_buffer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete int_buffer_U;
}

void store_output_points_buffer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(exitcond1_fu_206_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()) && 
             esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()) && 
                     !esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
             !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,3,3>(ap_ST_st5_fsm_3, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
             !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read()))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_3, ap_CS_fsm.read()) || 
                    (esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
                     !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read())))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
             !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())))) {
            ap_reg_ppiten_pp1_it2 = ap_reg_ppiten_pp1_it1.read();
        } else if (esl_seteq<1,3,3>(ap_ST_st5_fsm_3, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp1_it2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0))) {
        i_reg_183 = i_2_reg_348.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_183 = ap_const_lv5_0;
    }
    if (esl_seteq<1,3,3>(ap_ST_st5_fsm_3, ap_CS_fsm.read())) {
        indvar_reg_194 = ap_const_lv6_0;
    } else if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read()))) {
        indvar_reg_194 = indvar_next_fu_317_p2.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())))) {
        ap_reg_ppstg_exitcond2_reg_385_pp1_it1 = exitcond2_reg_385.read();
        ap_reg_ppstg_isIter0_reg_399_pp1_it1 = isIter0_reg_399.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0))) {
        buffer_2_value_load_reg_375 = buffer_2_value_q0.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st5_fsm_3, ap_CS_fsm.read())) {
        bus_addr_reg_380 =  (sc_lv<32>) (tmp_15_cast_fu_301_p1.read());
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        exitcond1_reg_344 = exitcond1_fu_206_p2.read();
        i_2_reg_348 = i_2_fu_212_p2.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())))) {
        exitcond2_reg_385 = exitcond2_fu_311_p2.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_385.read()))) {
        int_buffer_load_reg_403 = int_buffer_q1.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read()))) {
        isIter0_reg_399 = isIter0_fu_328_p2.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(exitcond1_fu_206_p2.read(), ap_const_lv1_0))) {
        tmp_16_reg_353 = tmp_16_fu_245_p2.read();
    }
}

void store_output_points_buffer::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         esl_seteq<1,3,3>(ap_ST_st9_fsm_5, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_ap_ready() {
    if (esl_seteq<1,3,3>(ap_ST_st9_fsm_5, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = (esl_seteq<1,1,1>(bus_r_req_full_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond2_reg_385_pp1_it1.read()));
}

void store_output_points_buffer::thread_buffer_0_value_address0() {
    buffer_0_value_address0 =  (sc_lv<4>) (tmp_15_fu_222_p1.read());
}

void store_output_points_buffer::thread_buffer_0_value_ce0() {
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        buffer_0_value_ce0 = ap_const_logic_1;
    } else {
        buffer_0_value_ce0 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_buffer_1_value_address0() {
    buffer_1_value_address0 =  (sc_lv<4>) (tmp_15_fu_222_p1.read());
}

void store_output_points_buffer::thread_buffer_1_value_ce0() {
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        buffer_1_value_ce0 = ap_const_logic_1;
    } else {
        buffer_1_value_ce0 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_buffer_2_value_address0() {
    buffer_2_value_address0 =  (sc_lv<4>) (tmp_15_fu_222_p1.read());
}

void store_output_points_buffer::thread_buffer_2_value_ce0() {
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        buffer_2_value_ce0 = ap_const_logic_1;
    } else {
        buffer_2_value_ce0 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_bus_r_address() {
    bus_r_address = bus_addr_reg_380.read();
}

void store_output_points_buffer::thread_bus_r_dataout() {
    bus_r_dataout = int_buffer_load_reg_403.read();
}

void store_output_points_buffer::thread_bus_r_req_din() {
    if (((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond2_reg_385_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
          !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_isIter0_reg_399_pp1_it1.read())) || 
         (esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond2_reg_385_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
          !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()))))) {
        bus_r_req_din = ap_const_logic_1;
    } else {
        bus_r_req_din = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_bus_r_req_write() {
    if (((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond2_reg_385_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
          !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_isIter0_reg_399_pp1_it1.read())) || 
         (esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond2_reg_385_pp1_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
          !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()))))) {
        bus_r_req_write = ap_const_logic_1;
    } else {
        bus_r_req_write = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_bus_r_rsp_read() {
    bus_r_rsp_read = ap_const_logic_0;
}

void store_output_points_buffer::thread_bus_r_size() {
    bus_r_size = ap_const_lv32_30;
}

void store_output_points_buffer::thread_exitcond1_fu_206_p2() {
    exitcond1_fu_206_p2 = (!i_phi_fu_187_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_187_p4.read() == ap_const_lv5_10);
}

void store_output_points_buffer::thread_exitcond2_fu_311_p2() {
    exitcond2_fu_311_p2 = (!indvar_reg_194.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(indvar_reg_194.read() == ap_const_lv6_30);
}

void store_output_points_buffer::thread_i_2_fu_212_p2() {
    i_2_fu_212_p2 = (!i_phi_fu_187_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_bigint<5>(i_phi_fu_187_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void store_output_points_buffer::thread_i_cast3_fu_218_p1() {
    i_cast3_fu_218_p1 = esl_zext<7,5>(i_phi_fu_187_p4.read());
}

void store_output_points_buffer::thread_i_phi_fu_187_p4() {
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0))) {
        i_phi_fu_187_p4 = i_2_reg_348.read();
    } else {
        i_phi_fu_187_p4 = i_reg_183.read();
    }
}

void store_output_points_buffer::thread_indvar_next_fu_317_p2() {
    indvar_next_fu_317_p2 = (!indvar_reg_194.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_bigint<6>(indvar_reg_194.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void store_output_points_buffer::thread_int_buffer_address0() {
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        int_buffer_address0 =  (sc_lv<6>) (tmp_29_2_fu_282_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()))) {
        int_buffer_address0 =  (sc_lv<6>) (tmp_17_fu_254_p1.read());
    } else {
        int_buffer_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void store_output_points_buffer::thread_int_buffer_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()))) {
        int_buffer_address1 =  (sc_lv<6>) (tmp_29_1_fu_268_p1.read());
    } else if ((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()))) {
        int_buffer_address1 =  (sc_lv<6>) (tmp_14_fu_323_p1.read());
    } else {
        int_buffer_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void store_output_points_buffer::thread_int_buffer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read())) || 
         (esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        int_buffer_ce0 = ap_const_logic_1;
    } else {
        int_buffer_ce0 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_int_buffer_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read())) || 
         (esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
          !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()))))) {
        int_buffer_ce1 = ap_const_logic_1;
    } else {
        int_buffer_ce1 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_int_buffer_d0() {
    if ((esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        int_buffer_d0 = buffer_2_value_load_reg_375.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()))) {
        int_buffer_d0 = buffer_0_value_q0.read();
    } else {
        int_buffer_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void store_output_points_buffer::thread_int_buffer_d1() {
    int_buffer_d1 = buffer_1_value_q0.read();
}

void store_output_points_buffer::thread_int_buffer_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,3,3>(ap_ST_pp0_stg0_fsm_1, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0)))) {
        int_buffer_we0 = ap_const_logic_1;
    } else {
        int_buffer_we0 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_int_buffer_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,3,3>(ap_ST_pp0_stg1_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_344.read(), ap_const_lv1_0)))) {
        int_buffer_we1 = ap_const_logic_1;
    } else {
        int_buffer_we1 = ap_const_logic_0;
    }
}

void store_output_points_buffer::thread_isIter0_fu_328_p2() {
    isIter0_fu_328_p2 = (!indvar_reg_194.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(indvar_reg_194.read() == ap_const_lv6_0);
}

void store_output_points_buffer::thread_p_shl_cast_fu_241_p1() {
    p_shl_cast_fu_241_p1 = esl_zext<7,6>(p_shl_fu_233_p3.read());
}

void store_output_points_buffer::thread_p_shl_fu_233_p3() {
    p_shl_fu_233_p3 = esl_concat<4,2>(tmp_18_fu_229_p1.read(), ap_const_lv2_0);
}

void store_output_points_buffer::thread_tmp_14_fu_323_p1() {
    tmp_14_fu_323_p1 = esl_zext<64,6>(indvar_reg_194.read());
}

void store_output_points_buffer::thread_tmp_15_cast_fu_301_p1() {
    tmp_15_cast_fu_301_p1 = esl_zext<64,30>(tmp_s_fu_291_p4.read());
}

void store_output_points_buffer::thread_tmp_15_fu_222_p1() {
    tmp_15_fu_222_p1 = esl_zext<64,5>(i_phi_fu_187_p4.read());
}

void store_output_points_buffer::thread_tmp_16_fu_245_p2() {
    tmp_16_fu_245_p2 = (!p_shl_cast_fu_241_p1.read().is_01() || !i_cast3_fu_218_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(p_shl_cast_fu_241_p1.read()) - sc_biguint<7>(i_cast3_fu_218_p1.read()));
}

void store_output_points_buffer::thread_tmp_17_fu_254_p0() {
    tmp_17_fu_254_p0 = esl_sext<32,7>(tmp_16_reg_353.read());
}

void store_output_points_buffer::thread_tmp_17_fu_254_p1() {
    tmp_17_fu_254_p1 = esl_zext<64,32>(tmp_17_fu_254_p0.read());
}

void store_output_points_buffer::thread_tmp_18_fu_229_p1() {
    tmp_18_fu_229_p1 = i_phi_fu_187_p4.read().range(4-1, 0);
}

void store_output_points_buffer::thread_tmp_28_1_fu_259_p2() {
    tmp_28_1_fu_259_p2 = (!tmp_16_reg_353.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_bigint<7>(tmp_16_reg_353.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void store_output_points_buffer::thread_tmp_28_2_fu_273_p2() {
    tmp_28_2_fu_273_p2 = (!tmp_16_reg_353.read().is_01() || !ap_const_lv7_2.is_01())? sc_lv<7>(): (sc_bigint<7>(tmp_16_reg_353.read()) + sc_biguint<7>(ap_const_lv7_2));
}

void store_output_points_buffer::thread_tmp_29_1_fu_268_p0() {
    tmp_29_1_fu_268_p0 = esl_sext<32,7>(tmp_28_1_fu_259_p2.read());
}

void store_output_points_buffer::thread_tmp_29_1_fu_268_p1() {
    tmp_29_1_fu_268_p1 = esl_zext<64,32>(tmp_29_1_fu_268_p0.read());
}

void store_output_points_buffer::thread_tmp_29_2_fu_282_p0() {
    tmp_29_2_fu_282_p0 = esl_sext<32,7>(tmp_28_2_fu_273_p2.read());
}

void store_output_points_buffer::thread_tmp_29_2_fu_282_p1() {
    tmp_29_2_fu_282_p1 = esl_zext<64,32>(tmp_29_2_fu_282_p0.read());
}

void store_output_points_buffer::thread_tmp_fu_287_p2() {
    tmp_fu_287_p2 = (!address.read().is_01() || !offset.read().is_01())? sc_lv<32>(): (sc_bigint<32>(address.read()) + sc_biguint<32>(offset.read()));
}

void store_output_points_buffer::thread_tmp_s_fu_291_p4() {
    tmp_s_fu_291_p4 = tmp_fu_287_p2.read().range(31, 2);
}

void store_output_points_buffer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(exitcond1_fu_206_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            break;
        case 4 : 
            if ((!(esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            } else if (((esl_seteq<1,3,3>(ap_ST_pp1_stg0_fsm_4, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read()) && 
  !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
  !(ap_sig_bdd_107.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it2.read())) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_311_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
                ap_NS_fsm = ap_ST_st9_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            }
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}
}

