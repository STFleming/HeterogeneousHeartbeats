// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _load_centres_buffer_HH_
#define _load_centres_buffer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "load_centres_buffer_int_buffer.h"

namespace ap_rtl {

struct load_centres_buffer : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > offset;
    sc_out< sc_logic > bus_r_req_din;
    sc_in< sc_logic > bus_r_req_full_n;
    sc_out< sc_logic > bus_r_req_write;
    sc_in< sc_logic > bus_r_rsp_empty_n;
    sc_out< sc_logic > bus_r_rsp_read;
    sc_out< sc_lv<32> > bus_r_address;
    sc_in< sc_lv<32> > bus_r_datain;
    sc_out< sc_lv<32> > bus_r_dataout;
    sc_out< sc_lv<32> > bus_r_size;
    sc_in< sc_lv<8> > k_V;
    sc_out< sc_lv<8> > buffer_0_value_address0;
    sc_out< sc_logic > buffer_0_value_ce0;
    sc_out< sc_logic > buffer_0_value_we0;
    sc_out< sc_lv<32> > buffer_0_value_d0;
    sc_out< sc_lv<8> > buffer_1_value_address0;
    sc_out< sc_logic > buffer_1_value_ce0;
    sc_out< sc_logic > buffer_1_value_we0;
    sc_out< sc_lv<32> > buffer_1_value_d0;
    sc_out< sc_lv<8> > buffer_2_value_address0;
    sc_out< sc_logic > buffer_2_value_ce0;
    sc_out< sc_logic > buffer_2_value_we0;
    sc_out< sc_lv<32> > buffer_2_value_d0;


    // Module declarations
    load_centres_buffer(sc_module_name name);
    SC_HAS_PROCESS(load_centres_buffer);

    ~load_centres_buffer();

    sc_trace_file* mVcdFile;

    load_centres_buffer_int_buffer* int_buffer_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<30> > indvar_reg_193;
    sc_signal< sc_lv<30> > ap_reg_ppstg_indvar_reg_193_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_lv<1> > exitcond3_reg_406;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond3_reg_406_pp0_it5;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it7;
    sc_signal< sc_lv<30> > ap_reg_ppstg_indvar_reg_193_pp0_it2;
    sc_signal< sc_lv<30> > ap_reg_ppstg_indvar_reg_193_pp0_it3;
    sc_signal< sc_lv<30> > ap_reg_ppstg_indvar_reg_193_pp0_it4;
    sc_signal< sc_lv<30> > ap_reg_ppstg_indvar_reg_193_pp0_it5;
    sc_signal< sc_lv<30> > ap_reg_ppstg_indvar_reg_193_pp0_it6;
    sc_signal< sc_lv<8> > t_V_reg_205;
    sc_signal< sc_lv<32> > bus_addr_reg_390;
    sc_signal< sc_lv<30> > tmp_6_add_i32_shr_fu_284_p1;
    sc_signal< sc_lv<30> > tmp_6_add_i32_shr_reg_396;
    sc_signal< sc_lv<32> > tmp_6_add_i32_shr_cast_fu_288_p1;
    sc_signal< sc_lv<32> > tmp_6_add_i32_shr_cast_reg_401;
    sc_signal< sc_lv<1> > exitcond3_fu_292_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond3_reg_406_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond3_reg_406_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond3_reg_406_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond3_reg_406_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond3_reg_406_pp0_it6;
    sc_signal< sc_lv<30> > indvar_next_fu_297_p2;
    sc_signal< sc_lv<30> > indvar_next_reg_410;
    sc_signal< sc_lv<1> > isIter0_fu_303_p2;
    sc_signal< sc_lv<1> > isIter0_reg_415;
    sc_signal< sc_lv<32> > bus_addr_read_reg_419;
    sc_signal< sc_lv<1> > tmp_7_fu_314_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_424;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<8> > i_V_fu_319_p2;
    sc_signal< sc_lv<8> > i_V_reg_428;
    sc_signal< sc_lv<11> > tmp_9_fu_341_p2;
    sc_signal< sc_lv<11> > tmp_9_reg_433;
    sc_signal< sc_lv<1> > tmp_10_fu_363_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_448;
    sc_signal< sc_lv<64> > tmp_8_fu_368_p1;
    sc_signal< sc_lv<64> > tmp_8_reg_452;
    sc_signal< sc_lv<10> > int_buffer_address0;
    sc_signal< sc_logic > int_buffer_ce0;
    sc_signal< sc_logic > int_buffer_we0;
    sc_signal< sc_lv<32> > int_buffer_d0;
    sc_signal< sc_lv<32> > int_buffer_q0;
    sc_signal< sc_lv<10> > int_buffer_address1;
    sc_signal< sc_logic > int_buffer_ce1;
    sc_signal< sc_lv<32> > int_buffer_q1;
    sc_signal< sc_lv<30> > indvar_phi_fu_197_p4;
    sc_signal< sc_lv<8> > t_V_phi_fu_209_p4;
    sc_signal< sc_lv<64> > tmp_s_fu_309_p1;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_347_p1;
    sc_signal< sc_lv<64> > tmp_12_1_cast_fu_358_p1;
    sc_signal< sc_lv<64> > tmp_12_2_cast_fu_379_p1;
    sc_signal< sc_lv<64> > tmp_2_cast_fu_228_p1;
    sc_signal< sc_lv<30> > tmp_2_fu_218_p4;
    sc_signal< sc_lv<12> > p_shl_fu_238_p3;
    sc_signal< sc_lv<10> > p_shl1_fu_250_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_246_p1;
    sc_signal< sc_lv<13> > p_shl1_cast_fu_258_p1;
    sc_signal< sc_lv<13> > tmp_5_fu_262_p2;
    sc_signal< sc_lv<13> > tmp_6_add_i_fu_268_p2;
    sc_signal< sc_lv<11> > tmp_1_fu_274_p4;
    sc_signal< sc_lv<30> > tmp_6_add_i32_shr_cast_fu_288_p0;
    sc_signal< sc_lv<10> > p_shl2_fu_329_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_337_p1;
    sc_signal< sc_lv<11> > tmp_8_cast1_fu_325_p1;
    sc_signal< sc_lv<11> > tmp_12_1_fu_352_p2;
    sc_signal< sc_lv<11> > tmp_12_2_fu_374_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_pp1_stg0_fsm_2;
    static const sc_lv<3> ap_ST_pp1_stg1_fsm_3;
    static const sc_lv<3> ap_ST_st13_fsm_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<13> ap_const_lv13_F;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<30> ap_const_lv30_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_79();
    void thread_buffer_0_value_address0();
    void thread_buffer_0_value_ce0();
    void thread_buffer_0_value_d0();
    void thread_buffer_0_value_we0();
    void thread_buffer_1_value_address0();
    void thread_buffer_1_value_ce0();
    void thread_buffer_1_value_d0();
    void thread_buffer_1_value_we0();
    void thread_buffer_2_value_address0();
    void thread_buffer_2_value_ce0();
    void thread_buffer_2_value_d0();
    void thread_buffer_2_value_we0();
    void thread_bus_r_address();
    void thread_bus_r_dataout();
    void thread_bus_r_req_din();
    void thread_bus_r_req_write();
    void thread_bus_r_rsp_read();
    void thread_bus_r_size();
    void thread_exitcond3_fu_292_p2();
    void thread_i_V_fu_319_p2();
    void thread_indvar_next_fu_297_p2();
    void thread_indvar_phi_fu_197_p4();
    void thread_int_buffer_address0();
    void thread_int_buffer_address1();
    void thread_int_buffer_ce0();
    void thread_int_buffer_ce1();
    void thread_int_buffer_d0();
    void thread_int_buffer_we0();
    void thread_isIter0_fu_303_p2();
    void thread_p_shl1_cast_fu_258_p1();
    void thread_p_shl1_fu_250_p3();
    void thread_p_shl2_cast_fu_337_p1();
    void thread_p_shl2_fu_329_p3();
    void thread_p_shl_cast_fu_246_p1();
    void thread_p_shl_fu_238_p3();
    void thread_t_V_phi_fu_209_p4();
    void thread_tmp_10_fu_363_p2();
    void thread_tmp_12_1_cast_fu_358_p1();
    void thread_tmp_12_1_fu_352_p2();
    void thread_tmp_12_2_cast_fu_379_p1();
    void thread_tmp_12_2_fu_374_p2();
    void thread_tmp_1_fu_274_p4();
    void thread_tmp_2_cast_fu_228_p1();
    void thread_tmp_2_fu_218_p4();
    void thread_tmp_5_fu_262_p2();
    void thread_tmp_6_add_i32_shr_cast_fu_288_p0();
    void thread_tmp_6_add_i32_shr_cast_fu_288_p1();
    void thread_tmp_6_add_i32_shr_fu_284_p1();
    void thread_tmp_6_add_i_fu_268_p2();
    void thread_tmp_7_fu_314_p2();
    void thread_tmp_8_cast1_fu_325_p1();
    void thread_tmp_8_fu_368_p1();
    void thread_tmp_9_cast_fu_347_p1();
    void thread_tmp_9_fu_341_p2();
    void thread_tmp_s_fu_309_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
