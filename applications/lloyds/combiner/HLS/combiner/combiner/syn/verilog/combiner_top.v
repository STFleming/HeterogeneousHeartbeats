// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="combiner_top,hls_ip_2013_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module combiner_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        master_portA_req_din,
        master_portA_req_full_n,
        master_portA_req_write,
        master_portA_rsp_empty_n,
        master_portA_rsp_read,
        master_portA_address,
        master_portA_datain,
        master_portA_dataout,
        master_portA_size,
        master_portB_req_din,
        master_portB_req_full_n,
        master_portB_req_write,
        master_portB_rsp_empty_n,
        master_portB_rsp_read,
        master_portB_address,
        master_portB_datain,
        master_portB_dataout,
        master_portB_size,
        data_points_in_addr,
        kernel_info_in_addr,
        centres_out_addr,
        distortion_out,
        n,
        k
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   master_portA_req_din;
input   master_portA_req_full_n;
output   master_portA_req_write;
input   master_portA_rsp_empty_n;
output   master_portA_rsp_read;
output  [31:0] master_portA_address;
input  [31:0] master_portA_datain;
output  [31:0] master_portA_dataout;
output  [31:0] master_portA_size;
output   master_portB_req_din;
input   master_portB_req_full_n;
output   master_portB_req_write;
input   master_portB_rsp_empty_n;
output   master_portB_rsp_read;
output  [31:0] master_portB_address;
input  [31:0] master_portB_datain;
output  [31:0] master_portB_dataout;
output  [31:0] master_portB_size;
input  [31:0] data_points_in_addr;
input  [31:0] kernel_info_in_addr;
input  [31:0] centres_out_addr;
output  [31:0] distortion_out;
input  [31:0] n;
input  [31:0] k;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg master_portA_req_write;
reg master_portA_rsp_read;
reg[31:0] master_portA_address;
reg[31:0] master_portA_size;
reg master_portB_req_din;
reg master_portB_req_write;
reg   [4:0] ap_CS_fsm = 5'b00000;
reg   [31:0] data_points_in_addr0data_reg = 32'b00000000000000000000000000000000;
reg    data_points_in_addr0vld_reg = 1'b0;
reg    data_points_in_addr0ack_out;
reg   [31:0] kernel_info_in_addr0data_reg = 32'b00000000000000000000000000000000;
reg    kernel_info_in_addr0vld_reg = 1'b0;
reg    kernel_info_in_addr0ack_out;
reg   [31:0] centres_out_addr0data_reg = 32'b00000000000000000000000000000000;
reg    centres_out_addr0vld_reg = 1'b0;
reg    centres_out_addr0ack_out;
reg   [31:0] distortion_out1data_reg = 32'b00000000000000000000000000000000;
reg    distortion_out1vld_reg = 1'b0;
reg    distortion_out1vld_in;
reg    distortion_out1ack_in;
reg   [31:0] n0data_reg = 32'b00000000000000000000000000000000;
reg    n0vld_reg = 1'b0;
reg    n0ack_out;
reg   [31:0] k0data_reg = 32'b00000000000000000000000000000000;
reg    k0vld_reg = 1'b0;
reg    k0ack_out;
reg   [5:0] indvar_reg_522;
reg   [5:0] ap_reg_ppstg_indvar_reg_522_pp1_it1;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg    ap_reg_ppiten_pp1_it3 = 1'b0;
reg    ap_reg_ppiten_pp1_it4 = 1'b0;
reg    ap_reg_ppiten_pp1_it5 = 1'b0;
reg   [0:0] exitcond8_reg_1149;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_1149_pp1_it5;
reg    ap_sig_bdd_230;
reg    ap_reg_ppiten_pp1_it6 = 1'b0;
reg    ap_reg_ppiten_pp1_it7 = 1'b0;
reg   [5:0] ap_reg_ppstg_indvar_reg_522_pp1_it2;
reg   [5:0] ap_reg_ppstg_indvar_reg_522_pp1_it3;
reg   [5:0] ap_reg_ppstg_indvar_reg_522_pp1_it4;
reg   [5:0] ap_reg_ppstg_indvar_reg_522_pp1_it5;
reg   [5:0] ap_reg_ppstg_indvar_reg_522_pp1_it6;
reg   [5:0] indvar2_reg_534;
reg   [5:0] ap_reg_ppstg_indvar2_reg_534_pp2_it1;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg    ap_reg_ppiten_pp2_it3 = 1'b0;
reg    ap_reg_ppiten_pp2_it4 = 1'b0;
reg    ap_reg_ppiten_pp2_it5 = 1'b0;
reg   [0:0] exitcond1_reg_1173;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1173_pp2_it5;
reg    ap_sig_bdd_263;
reg    ap_reg_ppiten_pp2_it6 = 1'b0;
reg    ap_reg_ppiten_pp2_it7 = 1'b0;
reg   [5:0] ap_reg_ppstg_indvar2_reg_534_pp2_it2;
reg   [5:0] ap_reg_ppstg_indvar2_reg_534_pp2_it3;
reg   [5:0] ap_reg_ppstg_indvar2_reg_534_pp2_it4;
reg   [5:0] ap_reg_ppstg_indvar2_reg_534_pp2_it5;
reg   [5:0] ap_reg_ppstg_indvar2_reg_534_pp2_it6;
reg   [31:0] total_distortion_reg_557;
reg   [31:0] i5_reg_569;
reg   [29:0] indvar1_reg_592;
reg   [31:0] reg_604;
wire   [31:0] centre_buffer_2_wgtCent_value_q0;
reg   [31:0] reg_610;
reg   [0:0] exitcond5_reg_1186;
reg    ap_reg_ppiten_pp4_it0 = 1'b0;
reg    ap_reg_ppiten_pp4_it1 = 1'b0;
reg    ap_reg_ppiten_pp4_it2 = 1'b0;
reg    ap_reg_ppiten_pp4_it3 = 1'b0;
reg    ap_reg_ppiten_pp4_it4 = 1'b0;
reg    ap_reg_ppiten_pp4_it5 = 1'b0;
reg    ap_reg_ppiten_pp4_it6 = 1'b0;
reg    ap_reg_ppiten_pp4_it7 = 1'b0;
reg    ap_reg_ppiten_pp4_it8 = 1'b0;
reg    ap_reg_ppiten_pp4_it9 = 1'b0;
reg    ap_reg_ppiten_pp4_it10 = 1'b0;
reg    ap_reg_ppiten_pp4_it11 = 1'b0;
reg    ap_reg_ppiten_pp4_it12 = 1'b0;
reg    ap_reg_ppiten_pp4_it13 = 1'b0;
reg    ap_reg_ppiten_pp4_it14 = 1'b0;
reg    ap_reg_ppiten_pp4_it15 = 1'b0;
reg    ap_reg_ppiten_pp4_it16 = 1'b0;
reg    ap_reg_ppiten_pp4_it17 = 1'b0;
reg    ap_reg_ppiten_pp4_it18 = 1'b0;
reg   [0:0] tmp_s_reg_1265;
wire   [8:0] i_1_fu_620_p2;
wire   [31:0] lim_fu_635_p2;
reg   [31:0] lim_reg_1125;
wire   [32:0] tmp_5_cast_fu_649_p1;
reg   [32:0] tmp_5_cast_reg_1130;
wire   [32:0] tmp_9_cast_fu_662_p1;
reg   [32:0] tmp_9_cast_reg_1135;
reg   [31:0] master_portA_addr_reg_1143;
wire   [0:0] tmp_3_fu_666_p2;
wire   [0:0] exitcond8_fu_690_p2;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_1149_pp1_it1;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_1149_pp1_it2;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_1149_pp1_it3;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_1149_pp1_it4;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_1149_pp1_it6;
wire   [5:0] indvar_next_fu_696_p2;
reg   [5:0] indvar_next_reg_1153;
wire   [0:0] isIter0_fu_702_p2;
reg   [0:0] isIter0_reg_1158;
wire   [31:0] b2_1_fu_713_p2;
reg   [31:0] b2_1_reg_1162;
reg   [31:0] master_portA_addr_1_reg_1167;
wire   [0:0] exitcond1_fu_738_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1173_pp2_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1173_pp2_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1173_pp2_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1173_pp2_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1173_pp2_it6;
wire   [5:0] indvar_next2_fu_744_p2;
reg   [5:0] indvar_next2_reg_1177;
wire   [0:0] isIter1_fu_750_p2;
reg   [0:0] isIter1_reg_1182;
wire   [0:0] exitcond5_fu_761_p2;
wire   [4:0] i_3_fu_767_p2;
reg   [4:0] i_3_reg_1190;
wire   [3:0] tmp_35_fu_777_p1;
reg   [3:0] tmp_35_reg_1195;
wire   [6:0] tmp_22_fu_804_p2;
reg   [6:0] tmp_22_reg_1205;
wire   [63:0] tmp_27_fu_867_p1;
reg   [63:0] tmp_27_reg_1245;
reg   [7:0] centre_buffer_count_addr_2_reg_1250;
reg   [7:0] centre_buffer_sum_sq_addr_2_reg_1255;
wire   [31:0] b_1_fu_910_p2;
wire   [0:0] tmp_s_fu_916_p2;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it1;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it2;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it3;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it4;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it5;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it6;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it7;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it8;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it9;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it10;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it11;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it12;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it13;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it14;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it15;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it16;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it17;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_1265_pp4_it18;
wire   [31:0] i_2_fu_921_p2;
reg   [31:0] i_2_reg_1269;
wire   [63:0] tmp_6_fu_927_p1;
reg   [63:0] tmp_6_reg_1274;
wire   [31:0] tmp_10_fu_939_p2;
reg   [31:0] tmp_10_reg_1286;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it1;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it2;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it3;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it4;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it5;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it6;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it7;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it8;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it9;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it10;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it11;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it12;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it13;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it14;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it15;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it16;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it17;
reg   [31:0] ap_reg_ppstg_tmp_10_reg_1286_pp4_it18;
wire   [0:0] tmp_13_fu_945_p2;
reg   [0:0] tmp_13_reg_1298;
wire   [31:0] centre_buffer_count_q0;
reg   [31:0] count_reg_1302;
wire   [31:0] total_distortion_2_fu_950_p2;
reg   [31:0] total_distortion_2_reg_1323;
wire   [31:0] p_s_fu_961_p3;
reg   [31:0] p_s_reg_1329;
wire   [31:0] centre_buffer_0_wgtCent_value_q0;
wire   [31:0] centre_buffer_1_wgtCent_value_q0;
reg   [31:0] master_portB_addr_reg_1346;
wire   [29:0] tmp_39_add_i32_shr_fu_1053_p4;
reg   [29:0] tmp_39_add_i32_shr_reg_1351;
wire   [31:0] tmp_24_fu_1063_p1;
reg   [31:0] tmp_24_reg_1356;
wire   [0:0] exitcond_fu_1067_p2;
reg   [0:0] exitcond_reg_1361;
reg    ap_reg_ppiten_pp5_it0 = 1'b0;
reg    ap_reg_ppiten_pp5_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1361_pp5_it1;
reg    ap_sig_bdd_629;
reg    ap_reg_ppiten_pp5_it2 = 1'b0;
wire   [29:0] indvar_next1_fu_1072_p2;
wire   [0:0] isIter_fu_1083_p2;
reg   [0:0] isIter_reg_1375;
reg   [0:0] ap_reg_ppstg_isIter_reg_1375_pp5_it1;
wire   [31:0] c_buffer_q1;
reg   [31:0] c_buffer_load_reg_1379;
reg   [7:0] centre_buffer_0_wgtCent_value_address0;
reg    centre_buffer_0_wgtCent_value_ce0;
reg    centre_buffer_0_wgtCent_value_we0;
reg   [31:0] centre_buffer_0_wgtCent_value_d0;
reg   [7:0] centre_buffer_1_wgtCent_value_address0;
reg    centre_buffer_1_wgtCent_value_ce0;
reg    centre_buffer_1_wgtCent_value_we0;
reg   [31:0] centre_buffer_1_wgtCent_value_d0;
reg   [7:0] centre_buffer_2_wgtCent_value_address0;
reg    centre_buffer_2_wgtCent_value_ce0;
reg    centre_buffer_2_wgtCent_value_we0;
reg   [31:0] centre_buffer_2_wgtCent_value_d0;
reg   [7:0] centre_buffer_sum_sq_address0;
reg    centre_buffer_sum_sq_ce0;
reg    centre_buffer_sum_sq_we0;
reg   [31:0] centre_buffer_sum_sq_d0;
wire   [31:0] centre_buffer_sum_sq_q0;
reg   [7:0] centre_buffer_count_address0;
reg    centre_buffer_count_ce0;
reg    centre_buffer_count_we0;
reg   [31:0] centre_buffer_count_d0;
reg   [4:0] i_buffer_address0;
reg    i_buffer_ce0;
reg    i_buffer_we0;
wire   [31:0] i_buffer_d0;
wire   [31:0] i_buffer_q0;
reg   [5:0] p_buffer_address0;
reg    p_buffer_ce0;
reg    p_buffer_we0;
wire   [31:0] p_buffer_d0;
wire   [31:0] p_buffer_q0;
reg   [5:0] p_buffer_address1;
reg    p_buffer_ce1;
wire   [31:0] p_buffer_q1;
reg   [9:0] c_buffer_address0;
reg    c_buffer_ce0;
reg    c_buffer_we0;
reg   [31:0] c_buffer_d0;
reg   [9:0] c_buffer_address1;
reg    c_buffer_ce1;
reg    c_buffer_we1;
wire   [31:0] c_buffer_d1;
reg   [8:0] i_reg_487;
wire   [0:0] exitcond7_fu_614_p2;
reg   [31:0] b_reg_498;
reg   [31:0] b2_reg_510;
reg   [5:0] indvar_phi_fu_526_p4;
reg   [5:0] indvar2_phi_fu_538_p4;
reg   [4:0] i1_reg_546;
reg   [31:0] total_distortion_phi_fu_561_p4;
reg   [31:0] i5_phi_fu_573_p4;
reg   [31:0] total_distortion_1_reg_580;
wire   [63:0] tmp_2_fu_626_p1;
wire   [63:0] tmp_25_fu_708_p1;
wire   [63:0] tmp_34_fu_756_p1;
wire   [63:0] tmp_19_fu_787_p1;
wire   [63:0] tmp_30_fu_814_p1;
wire   [63:0] tmp_30_1_fu_829_p1;
wire   [63:0] tmp_28_fu_834_p1;
wire   [63:0] tmp_21_fu_848_p1;
wire   [63:0] tmp_30_2_fu_862_p1;
wire   [63:0] tmp_12_fu_988_p1;
wire   [63:0] tmp_26_1_fu_997_p1;
wire   [63:0] tmp_26_2_fu_1007_p1;
wire   [63:0] tmp_26_fu_1078_p1;
wire   [63:0] tmp_7_cast_fu_680_p1;
wire   [63:0] tmp_11_cast_fu_728_p1;
wire   [63:0] tmp_29_cast_fu_1021_p1;
wire   [31:0] tmp_31_fu_889_p2;
wire   [31:0] tmp_32_fu_896_p2;
wire   [31:0] tmp_33_fu_875_p2;
wire   [31:0] tmp_44_1_fu_882_p2;
wire   [31:0] tmp_44_2_fu_903_p2;
wire   [31:0] grp_fu_968_p2;
wire   [31:0] grp_fu_982_p2;
wire   [31:0] grp_fu_975_p2;
wire   [29:0] tmp_5_fu_640_p4;
wire   [29:0] tmp_9_fu_653_p4;
wire   [32:0] tmp_6_cast_fu_671_p1;
wire   [32:0] tmp_7_fu_675_p2;
wire   [32:0] tmp_10_cast_fu_719_p1;
wire   [32:0] tmp_11_fu_723_p2;
wire   [4:0] tmp_36_fu_781_p2;
wire   [5:0] p_shl_fu_792_p3;
wire   [6:0] p_shl_cast_fu_800_p1;
wire   [6:0] i1_cast2_fu_773_p1;
wire   [31:0] tmp_30_fu_814_p0;
wire   [6:0] tmp_29_1_fu_819_p2;
wire   [31:0] tmp_30_1_fu_829_p0;
wire   [4:0] tmp_20_fu_841_p3;
wire   [6:0] tmp_29_2_fu_853_p2;
wire   [31:0] tmp_30_2_fu_862_p0;
wire   [31:0] tmp_17_fu_933_p2;
wire   [0:0] tmp_8_fu_956_p2;
wire   [31:0] grp_fu_968_p0;
wire   [31:0] grp_fu_968_p1;
wire   [31:0] grp_fu_975_p0;
wire   [31:0] grp_fu_975_p1;
wire   [31:0] grp_fu_982_p0;
wire   [31:0] grp_fu_982_p1;
wire   [31:0] tmp_25_1_fu_992_p2;
wire   [31:0] tmp_25_2_fu_1002_p2;
wire   [29:0] tmp_14_fu_1012_p4;
wire   [31:0] tmp_18_fu_1031_p2;
wire   [31:0] tmp_15_fu_1036_p2;
wire   [31:0] tmp_23_fu_1041_p2;
wire   [31:0] tmp_16_fu_1047_p2;
wire    grp_fu_968_ce;
wire    grp_fu_975_ce;
wire    grp_fu_982_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_sig_bdd_1247;
reg    ap_sig_bdd_1250;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_st3_fsm_2 = 5'b10;
parameter    ap_ST_st4_fsm_3 = 5'b11;
parameter    ap_ST_st5_fsm_4 = 5'b100;
parameter    ap_ST_pp1_stg0_fsm_5 = 5'b101;
parameter    ap_ST_st14_fsm_6 = 5'b110;
parameter    ap_ST_pp2_stg0_fsm_7 = 5'b111;
parameter    ap_ST_st23_fsm_8 = 5'b1000;
parameter    ap_ST_st24_fsm_9 = 5'b1001;
parameter    ap_ST_st25_fsm_10 = 5'b1010;
parameter    ap_ST_st26_fsm_11 = 5'b1011;
parameter    ap_ST_pp4_stg0_fsm_12 = 5'b1100;
parameter    ap_ST_pp4_stg1_fsm_13 = 5'b1101;
parameter    ap_ST_st65_fsm_14 = 5'b1110;
parameter    ap_ST_pp5_stg0_fsm_15 = 5'b1111;
parameter    ap_ST_st69_fsm_16 = 5'b10000;
parameter    ap_ST_st70_fsm_17 = 5'b10001;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv6_30 = 6'b110000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv7_2 = 7'b10;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_true = 1'b1;


combiner_top_centre_buffer_0_wgtCent_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centre_buffer_0_wgtCent_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centre_buffer_0_wgtCent_value_address0 ),
    .ce0( centre_buffer_0_wgtCent_value_ce0 ),
    .we0( centre_buffer_0_wgtCent_value_we0 ),
    .d0( centre_buffer_0_wgtCent_value_d0 ),
    .q0( centre_buffer_0_wgtCent_value_q0 )
);

combiner_top_centre_buffer_0_wgtCent_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centre_buffer_1_wgtCent_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centre_buffer_1_wgtCent_value_address0 ),
    .ce0( centre_buffer_1_wgtCent_value_ce0 ),
    .we0( centre_buffer_1_wgtCent_value_we0 ),
    .d0( centre_buffer_1_wgtCent_value_d0 ),
    .q0( centre_buffer_1_wgtCent_value_q0 )
);

combiner_top_centre_buffer_0_wgtCent_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centre_buffer_2_wgtCent_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centre_buffer_2_wgtCent_value_address0 ),
    .ce0( centre_buffer_2_wgtCent_value_ce0 ),
    .we0( centre_buffer_2_wgtCent_value_we0 ),
    .d0( centre_buffer_2_wgtCent_value_d0 ),
    .q0( centre_buffer_2_wgtCent_value_q0 )
);

combiner_top_centre_buffer_0_wgtCent_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centre_buffer_sum_sq_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centre_buffer_sum_sq_address0 ),
    .ce0( centre_buffer_sum_sq_ce0 ),
    .we0( centre_buffer_sum_sq_we0 ),
    .d0( centre_buffer_sum_sq_d0 ),
    .q0( centre_buffer_sum_sq_q0 )
);

combiner_top_centre_buffer_0_wgtCent_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centre_buffer_count_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centre_buffer_count_address0 ),
    .ce0( centre_buffer_count_ce0 ),
    .we0( centre_buffer_count_we0 ),
    .d0( centre_buffer_count_d0 ),
    .q0( centre_buffer_count_q0 )
);

combiner_top_i_buffer #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
i_buffer_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( i_buffer_address0 ),
    .ce0( i_buffer_ce0 ),
    .we0( i_buffer_we0 ),
    .d0( i_buffer_d0 ),
    .q0( i_buffer_q0 )
);

combiner_top_p_buffer #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
p_buffer_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_buffer_address0 ),
    .ce0( p_buffer_ce0 ),
    .we0( p_buffer_we0 ),
    .d0( p_buffer_d0 ),
    .q0( p_buffer_q0 ),
    .address1( p_buffer_address1 ),
    .ce1( p_buffer_ce1 ),
    .q1( p_buffer_q1 )
);

combiner_top_c_buffer #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
c_buffer_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( c_buffer_address0 ),
    .ce0( c_buffer_ce0 ),
    .we0( c_buffer_we0 ),
    .d0( c_buffer_d0 ),
    .address1( c_buffer_address1 ),
    .ce1( c_buffer_ce1 ),
    .we1( c_buffer_we1 ),
    .d1( c_buffer_d1 ),
    .q1( c_buffer_q1 )
);

combiner_top_sdiv_32ns_32ns_32_35 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
combiner_top_sdiv_32ns_32ns_32_35_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_968_p0 ),
    .din1( grp_fu_968_p1 ),
    .ce( grp_fu_968_ce ),
    .dout( grp_fu_968_p2 )
);

combiner_top_sdiv_32ns_32ns_32_35 #(
    .ID( 2 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
combiner_top_sdiv_32ns_32ns_32_35_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_975_p0 ),
    .din1( grp_fu_975_p1 ),
    .ce( grp_fu_975_ce ),
    .dout( grp_fu_975_p2 )
);

combiner_top_sdiv_32ns_32ns_32_35 #(
    .ID( 3 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
combiner_top_sdiv_32ns_32ns_32_35_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_982_p0 ),
    .din1( grp_fu_982_p1 ),
    .ce( grp_fu_982_ce ),
    .dout( grp_fu_982_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~(ap_const_lv1_0 == exitcond8_fu_690_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (ap_const_lv1_0 == exitcond8_fu_690_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_666_p2)) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~(ap_const_lv1_0 == exitcond8_fu_690_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end
    end
end

/// ap_reg_ppiten_pp1_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
            ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
        end
    end
end

/// ap_reg_ppiten_pp1_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
            ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
        end
    end
end

/// ap_reg_ppiten_pp1_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
            ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
        end
    end
end

/// ap_reg_ppiten_pp1_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
            ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
        end
    end
end

/// ap_reg_ppiten_pp1_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
            ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
            ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_lv1_0 == exitcond1_fu_738_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st14_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == exitcond1_fu_738_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if (((ap_ST_st14_fsm_6 == ap_CS_fsm) | ((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_lv1_0 == exitcond1_fu_738_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end
    end
end

/// ap_reg_ppiten_pp2_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
            ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
        end
    end
end

/// ap_reg_ppiten_pp2_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
            ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
        end
    end
end

/// ap_reg_ppiten_pp2_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
            ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
        end
    end
end

/// ap_reg_ppiten_pp2_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
            ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
        end
    end
end

/// ap_reg_ppiten_pp2_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
            ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
        end else if ((ap_ST_st14_fsm_6 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp4_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm) & (~(ap_const_lv1_0 == tmp_s_reg_1265) | ((ap_const_lv1_0 == tmp_s_reg_1265) & ~(ap_const_lv1_0 == tmp_13_reg_1298))))) begin
            ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
            ap_reg_ppiten_pp4_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp4_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it1 <= ap_reg_ppiten_pp4_it0;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
            ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp4_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it10 <= ap_reg_ppiten_pp4_it9;
        end
    end
end

/// ap_reg_ppiten_pp4_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it11 <= ap_reg_ppiten_pp4_it10;
        end
    end
end

/// ap_reg_ppiten_pp4_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it12 <= ap_reg_ppiten_pp4_it11;
        end
    end
end

/// ap_reg_ppiten_pp4_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it13 <= ap_reg_ppiten_pp4_it12;
        end
    end
end

/// ap_reg_ppiten_pp4_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it14 <= ap_reg_ppiten_pp4_it13;
        end
    end
end

/// ap_reg_ppiten_pp4_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it15 <= ap_reg_ppiten_pp4_it14;
        end
    end
end

/// ap_reg_ppiten_pp4_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it16 <= ap_reg_ppiten_pp4_it15;
        end
    end
end

/// ap_reg_ppiten_pp4_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it17 <= ap_reg_ppiten_pp4_it16;
        end
    end
end

/// ap_reg_ppiten_pp4_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it18 <= ap_reg_ppiten_pp4_it17;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
            ap_reg_ppiten_pp4_it18 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp4_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it2 <= ap_reg_ppiten_pp4_it1;
        end
    end
end

/// ap_reg_ppiten_pp4_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it3 <= ap_reg_ppiten_pp4_it2;
        end
    end
end

/// ap_reg_ppiten_pp4_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it4 <= ap_reg_ppiten_pp4_it3;
        end
    end
end

/// ap_reg_ppiten_pp4_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it5 <= ap_reg_ppiten_pp4_it4;
        end
    end
end

/// ap_reg_ppiten_pp4_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it6 <= ap_reg_ppiten_pp4_it5;
        end
    end
end

/// ap_reg_ppiten_pp4_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it7 <= ap_reg_ppiten_pp4_it6;
        end
    end
end

/// ap_reg_ppiten_pp4_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it8 <= ap_reg_ppiten_pp4_it7;
        end
    end
end

/// ap_reg_ppiten_pp4_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp4_it9 <= ap_reg_ppiten_pp4_it8;
        end
    end
end

/// ap_reg_ppiten_pp5_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp5_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_lv1_0 == exitcond_fu_1067_p2))) begin
            ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st65_fsm_14 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp5_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp5_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp5_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & (ap_const_lv1_0 == exitcond_fu_1067_p2))) begin
            ap_reg_ppiten_pp5_it1 <= ap_const_logic_1;
        end else if (((ap_ST_st65_fsm_14 == ap_CS_fsm) | ((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_lv1_0 == exitcond_fu_1067_p2)))) begin
            ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp5_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp5_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp5_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)))) begin
            ap_reg_ppiten_pp5_it2 <= ap_reg_ppiten_pp5_it1;
        end else if ((ap_ST_st65_fsm_14 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp5_it2 <= ap_const_logic_0;
        end
    end
end

/// centres_out_addr0data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_centres_out_addr0data_reg
    if (ap_rst == 1'b1) begin
        centres_out_addr0data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == centres_out_addr0vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == centres_out_addr0vld_reg) & (ap_const_logic_1 == centres_out_addr0ack_out)))) begin
            centres_out_addr0data_reg <= centres_out_addr;
        end
    end
end

/// data_points_in_addr0data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_data_points_in_addr0data_reg
    if (ap_rst == 1'b1) begin
        data_points_in_addr0data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == data_points_in_addr0vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == data_points_in_addr0vld_reg) & (ap_const_logic_1 == data_points_in_addr0ack_out)))) begin
            data_points_in_addr0data_reg <= data_points_in_addr;
        end
    end
end

/// distortion_out1data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_distortion_out1data_reg
    if (ap_rst == 1'b1) begin
        distortion_out1data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == distortion_out1vld_in) & (ap_const_logic_0 == distortion_out1vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == distortion_out1vld_in) & (ap_const_logic_1 == distortion_out1vld_reg) & (ap_const_logic_1 == ap_const_logic_1)))) begin
            distortion_out1data_reg <= total_distortion_1_reg_580;
        end
    end
end

/// k0data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_k0data_reg
    if (ap_rst == 1'b1) begin
        k0data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == k0vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == k0vld_reg) & (ap_const_logic_1 == k0ack_out)))) begin
            k0data_reg <= k;
        end
    end
end

/// kernel_info_in_addr0data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_kernel_info_in_addr0data_reg
    if (ap_rst == 1'b1) begin
        kernel_info_in_addr0data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == kernel_info_in_addr0vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == kernel_info_in_addr0vld_reg) & (ap_const_logic_1 == kernel_info_in_addr0ack_out)))) begin
            kernel_info_in_addr0data_reg <= kernel_info_in_addr;
        end
    end
end

/// n0data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_n0data_reg
    if (ap_rst == 1'b1) begin
        n0data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == n0vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == n0vld_reg) & (ap_const_logic_1 == n0ack_out)))) begin
            n0data_reg <= n;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_11 == ap_CS_fsm)) begin
        b2_reg_510 <= b2_1_reg_1162;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        b2_reg_510 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_11 == ap_CS_fsm)) begin
        b_reg_498 <= b_1_fu_910_p2;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        b_reg_498 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_lv1_0 == exitcond1_fu_738_p2))) begin
        i1_reg_546 <= ap_const_lv5_0;
    end else if (((ap_const_lv1_0 == exitcond5_reg_1186) & (ap_ST_st25_fsm_10 == ap_CS_fsm))) begin
        i1_reg_546 <= i_3_reg_1190;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
        i5_reg_569 <= ap_const_lv32_0;
    end else if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == tmp_s_reg_1265) & (ap_const_lv1_0 == tmp_13_reg_1298))) begin
        i5_reg_569 <= i_2_reg_1269;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_614_p2))) begin
        i_reg_487 <= i_1_fu_620_p2;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_reg_487 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st65_fsm_14 == ap_CS_fsm)) begin
        indvar1_reg_592 <= ap_const_lv30_0;
    end else if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & (ap_const_lv1_0 == exitcond_fu_1067_p2))) begin
        indvar1_reg_592 <= indvar_next1_fu_1072_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st14_fsm_6 == ap_CS_fsm)) begin
        indvar2_reg_534 <= ap_const_lv6_0;
    end else if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == exitcond1_reg_1173))) begin
        indvar2_reg_534 <= indvar_next2_reg_1177;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
        indvar_reg_522 <= ap_const_lv6_0;
    end else if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (exitcond8_reg_1149 == ap_const_lv1_0))) begin
        indvar_reg_522 <= indvar_next_reg_1153;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp4_it0)) begin
        if (ap_sig_bdd_1250) begin
            total_distortion_1_reg_580 <= total_distortion_2_fu_950_p2;
        end else if (ap_sig_bdd_1247) begin
            total_distortion_1_reg_580 <= total_distortion_phi_fu_561_p4;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
        total_distortion_reg_557 <= ap_const_lv32_0;
    end else if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == tmp_s_reg_1265) & (ap_const_lv1_0 == tmp_13_reg_1298))) begin
        total_distortion_reg_557 <= total_distortion_2_reg_1323;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
        ap_reg_ppstg_exitcond1_reg_1173_pp2_it1 <= exitcond1_reg_1173;
        ap_reg_ppstg_exitcond1_reg_1173_pp2_it2 <= ap_reg_ppstg_exitcond1_reg_1173_pp2_it1;
        ap_reg_ppstg_exitcond1_reg_1173_pp2_it3 <= ap_reg_ppstg_exitcond1_reg_1173_pp2_it2;
        ap_reg_ppstg_exitcond1_reg_1173_pp2_it4 <= ap_reg_ppstg_exitcond1_reg_1173_pp2_it3;
        ap_reg_ppstg_exitcond1_reg_1173_pp2_it5 <= ap_reg_ppstg_exitcond1_reg_1173_pp2_it4;
        ap_reg_ppstg_exitcond1_reg_1173_pp2_it6 <= ap_reg_ppstg_exitcond1_reg_1173_pp2_it5;
        ap_reg_ppstg_indvar2_reg_534_pp2_it1 <= indvar2_reg_534;
        ap_reg_ppstg_indvar2_reg_534_pp2_it2 <= ap_reg_ppstg_indvar2_reg_534_pp2_it1;
        ap_reg_ppstg_indvar2_reg_534_pp2_it3 <= ap_reg_ppstg_indvar2_reg_534_pp2_it2;
        ap_reg_ppstg_indvar2_reg_534_pp2_it4 <= ap_reg_ppstg_indvar2_reg_534_pp2_it3;
        ap_reg_ppstg_indvar2_reg_534_pp2_it5 <= ap_reg_ppstg_indvar2_reg_534_pp2_it4;
        ap_reg_ppstg_indvar2_reg_534_pp2_it6 <= ap_reg_ppstg_indvar2_reg_534_pp2_it5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
        ap_reg_ppstg_exitcond8_reg_1149_pp1_it1 <= exitcond8_reg_1149;
        ap_reg_ppstg_exitcond8_reg_1149_pp1_it2 <= ap_reg_ppstg_exitcond8_reg_1149_pp1_it1;
        ap_reg_ppstg_exitcond8_reg_1149_pp1_it3 <= ap_reg_ppstg_exitcond8_reg_1149_pp1_it2;
        ap_reg_ppstg_exitcond8_reg_1149_pp1_it4 <= ap_reg_ppstg_exitcond8_reg_1149_pp1_it3;
        ap_reg_ppstg_exitcond8_reg_1149_pp1_it5 <= ap_reg_ppstg_exitcond8_reg_1149_pp1_it4;
        ap_reg_ppstg_exitcond8_reg_1149_pp1_it6 <= ap_reg_ppstg_exitcond8_reg_1149_pp1_it5;
        ap_reg_ppstg_indvar_reg_522_pp1_it1 <= indvar_reg_522;
        ap_reg_ppstg_indvar_reg_522_pp1_it2 <= ap_reg_ppstg_indvar_reg_522_pp1_it1;
        ap_reg_ppstg_indvar_reg_522_pp1_it3 <= ap_reg_ppstg_indvar_reg_522_pp1_it2;
        ap_reg_ppstg_indvar_reg_522_pp1_it4 <= ap_reg_ppstg_indvar_reg_522_pp1_it3;
        ap_reg_ppstg_indvar_reg_522_pp1_it5 <= ap_reg_ppstg_indvar_reg_522_pp1_it4;
        ap_reg_ppstg_indvar_reg_522_pp1_it6 <= ap_reg_ppstg_indvar_reg_522_pp1_it5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)))) begin
        ap_reg_ppstg_exitcond_reg_1361_pp5_it1 <= exitcond_reg_1361;
        ap_reg_ppstg_isIter_reg_1375_pp5_it1 <= isIter_reg_1375;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm)) begin
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it1 <= tmp_10_reg_1286;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it10 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it9;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it11 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it10;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it12 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it11;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it13 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it12;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it14 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it13;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it15 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it14;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it16 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it15;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it17 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it16;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it18 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it17;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it2 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it1;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it3 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it2;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it4 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it3;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it5 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it4;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it6 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it5;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it7 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it6;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it8 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it7;
        ap_reg_ppstg_tmp_10_reg_1286_pp4_it9 <= ap_reg_ppstg_tmp_10_reg_1286_pp4_it8;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it1 <= tmp_s_reg_1265;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it10 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it9;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it11 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it10;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it12 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it11;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it13 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it12;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it14 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it13;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it15 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it14;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it16 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it15;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it17 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it16;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it18 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it17;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it2 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it1;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it3 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it2;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it4 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it3;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it5 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it4;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it6 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it5;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it7 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it6;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it8 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it7;
        ap_reg_ppstg_tmp_s_reg_1265_pp4_it9 <= ap_reg_ppstg_tmp_s_reg_1265_pp4_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st14_fsm_6 == ap_CS_fsm)) begin
        b2_1_reg_1162 <= b2_1_fu_713_p2;
        master_portA_addr_1_reg_1167 <= tmp_11_cast_fu_728_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & (ap_const_lv1_0 == exitcond_reg_1361))) begin
        c_buffer_load_reg_1379 <= c_buffer_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_reg_1186))) begin
        centre_buffer_count_addr_2_reg_1250 <= tmp_27_fu_867_p1;
        centre_buffer_sum_sq_addr_2_reg_1255 <= tmp_27_fu_867_p1;
        tmp_27_reg_1245[0] <= tmp_27_fu_867_p1[0];
tmp_27_reg_1245[1] <= tmp_27_fu_867_p1[1];
tmp_27_reg_1245[2] <= tmp_27_fu_867_p1[2];
tmp_27_reg_1245[3] <= tmp_27_fu_867_p1[3];
tmp_27_reg_1245[4] <= tmp_27_fu_867_p1[4];
tmp_27_reg_1245[5] <= tmp_27_fu_867_p1[5];
tmp_27_reg_1245[6] <= tmp_27_fu_867_p1[6];
tmp_27_reg_1245[7] <= tmp_27_fu_867_p1[7];
tmp_27_reg_1245[8] <= tmp_27_fu_867_p1[8];
tmp_27_reg_1245[9] <= tmp_27_fu_867_p1[9];
tmp_27_reg_1245[10] <= tmp_27_fu_867_p1[10];
tmp_27_reg_1245[11] <= tmp_27_fu_867_p1[11];
tmp_27_reg_1245[12] <= tmp_27_fu_867_p1[12];
tmp_27_reg_1245[13] <= tmp_27_fu_867_p1[13];
tmp_27_reg_1245[14] <= tmp_27_fu_867_p1[14];
tmp_27_reg_1245[15] <= tmp_27_fu_867_p1[15];
tmp_27_reg_1245[16] <= tmp_27_fu_867_p1[16];
tmp_27_reg_1245[17] <= tmp_27_fu_867_p1[17];
tmp_27_reg_1245[18] <= tmp_27_fu_867_p1[18];
tmp_27_reg_1245[19] <= tmp_27_fu_867_p1[19];
tmp_27_reg_1245[20] <= tmp_27_fu_867_p1[20];
tmp_27_reg_1245[21] <= tmp_27_fu_867_p1[21];
tmp_27_reg_1245[22] <= tmp_27_fu_867_p1[22];
tmp_27_reg_1245[23] <= tmp_27_fu_867_p1[23];
tmp_27_reg_1245[24] <= tmp_27_fu_867_p1[24];
tmp_27_reg_1245[25] <= tmp_27_fu_867_p1[25];
tmp_27_reg_1245[26] <= tmp_27_fu_867_p1[26];
tmp_27_reg_1245[27] <= tmp_27_fu_867_p1[27];
tmp_27_reg_1245[28] <= tmp_27_fu_867_p1[28];
tmp_27_reg_1245[29] <= tmp_27_fu_867_p1[29];
tmp_27_reg_1245[30] <= tmp_27_fu_867_p1[30];
tmp_27_reg_1245[31] <= tmp_27_fu_867_p1[31];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_lv1_0 == tmp_s_reg_1265) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm))) begin
        count_reg_1302 <= centre_buffer_count_q0;
        total_distortion_2_reg_1323 <= total_distortion_2_fu_950_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)))) begin
        exitcond1_reg_1173 <= exitcond1_fu_738_p2;
        indvar_next2_reg_1177 <= indvar_next2_fu_744_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        exitcond5_reg_1186 <= exitcond5_fu_761_p2;
        i_3_reg_1190 <= i_3_fu_767_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)))) begin
        exitcond8_reg_1149 <= exitcond8_fu_690_p2;
        indvar_next_reg_1153 <= indvar_next_fu_696_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)))) begin
        exitcond_reg_1361 <= exitcond_fu_1067_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it0))) begin
        i_2_reg_1269 <= i_2_fu_921_p2;
        tmp_s_reg_1265 <= tmp_s_fu_916_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (ap_const_lv1_0 == exitcond8_fu_690_p2))) begin
        isIter0_reg_1158 <= isIter0_fu_702_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == exitcond1_fu_738_p2))) begin
        isIter1_reg_1182 <= isIter1_fu_750_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & (ap_const_lv1_0 == exitcond_fu_1067_p2))) begin
        isIter_reg_1375 <= isIter_fu_1083_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        lim_reg_1125[1] <= lim_fu_635_p2[1];
lim_reg_1125[2] <= lim_fu_635_p2[2];
lim_reg_1125[3] <= lim_fu_635_p2[3];
lim_reg_1125[4] <= lim_fu_635_p2[4];
lim_reg_1125[5] <= lim_fu_635_p2[5];
lim_reg_1125[6] <= lim_fu_635_p2[6];
lim_reg_1125[7] <= lim_fu_635_p2[7];
lim_reg_1125[8] <= lim_fu_635_p2[8];
lim_reg_1125[9] <= lim_fu_635_p2[9];
lim_reg_1125[10] <= lim_fu_635_p2[10];
lim_reg_1125[11] <= lim_fu_635_p2[11];
lim_reg_1125[12] <= lim_fu_635_p2[12];
lim_reg_1125[13] <= lim_fu_635_p2[13];
lim_reg_1125[14] <= lim_fu_635_p2[14];
lim_reg_1125[15] <= lim_fu_635_p2[15];
lim_reg_1125[16] <= lim_fu_635_p2[16];
lim_reg_1125[17] <= lim_fu_635_p2[17];
lim_reg_1125[18] <= lim_fu_635_p2[18];
lim_reg_1125[19] <= lim_fu_635_p2[19];
lim_reg_1125[20] <= lim_fu_635_p2[20];
lim_reg_1125[21] <= lim_fu_635_p2[21];
lim_reg_1125[22] <= lim_fu_635_p2[22];
lim_reg_1125[23] <= lim_fu_635_p2[23];
lim_reg_1125[24] <= lim_fu_635_p2[24];
lim_reg_1125[25] <= lim_fu_635_p2[25];
lim_reg_1125[26] <= lim_fu_635_p2[26];
lim_reg_1125[27] <= lim_fu_635_p2[27];
lim_reg_1125[28] <= lim_fu_635_p2[28];
lim_reg_1125[29] <= lim_fu_635_p2[29];
lim_reg_1125[30] <= lim_fu_635_p2[30];
lim_reg_1125[31] <= lim_fu_635_p2[31];
        tmp_5_cast_reg_1130[0] <= tmp_5_cast_fu_649_p1[0];
tmp_5_cast_reg_1130[1] <= tmp_5_cast_fu_649_p1[1];
tmp_5_cast_reg_1130[2] <= tmp_5_cast_fu_649_p1[2];
tmp_5_cast_reg_1130[3] <= tmp_5_cast_fu_649_p1[3];
tmp_5_cast_reg_1130[4] <= tmp_5_cast_fu_649_p1[4];
tmp_5_cast_reg_1130[5] <= tmp_5_cast_fu_649_p1[5];
tmp_5_cast_reg_1130[6] <= tmp_5_cast_fu_649_p1[6];
tmp_5_cast_reg_1130[7] <= tmp_5_cast_fu_649_p1[7];
tmp_5_cast_reg_1130[8] <= tmp_5_cast_fu_649_p1[8];
tmp_5_cast_reg_1130[9] <= tmp_5_cast_fu_649_p1[9];
tmp_5_cast_reg_1130[10] <= tmp_5_cast_fu_649_p1[10];
tmp_5_cast_reg_1130[11] <= tmp_5_cast_fu_649_p1[11];
tmp_5_cast_reg_1130[12] <= tmp_5_cast_fu_649_p1[12];
tmp_5_cast_reg_1130[13] <= tmp_5_cast_fu_649_p1[13];
tmp_5_cast_reg_1130[14] <= tmp_5_cast_fu_649_p1[14];
tmp_5_cast_reg_1130[15] <= tmp_5_cast_fu_649_p1[15];
tmp_5_cast_reg_1130[16] <= tmp_5_cast_fu_649_p1[16];
tmp_5_cast_reg_1130[17] <= tmp_5_cast_fu_649_p1[17];
tmp_5_cast_reg_1130[18] <= tmp_5_cast_fu_649_p1[18];
tmp_5_cast_reg_1130[19] <= tmp_5_cast_fu_649_p1[19];
tmp_5_cast_reg_1130[20] <= tmp_5_cast_fu_649_p1[20];
tmp_5_cast_reg_1130[21] <= tmp_5_cast_fu_649_p1[21];
tmp_5_cast_reg_1130[22] <= tmp_5_cast_fu_649_p1[22];
tmp_5_cast_reg_1130[23] <= tmp_5_cast_fu_649_p1[23];
tmp_5_cast_reg_1130[24] <= tmp_5_cast_fu_649_p1[24];
tmp_5_cast_reg_1130[25] <= tmp_5_cast_fu_649_p1[25];
tmp_5_cast_reg_1130[26] <= tmp_5_cast_fu_649_p1[26];
tmp_5_cast_reg_1130[27] <= tmp_5_cast_fu_649_p1[27];
tmp_5_cast_reg_1130[28] <= tmp_5_cast_fu_649_p1[28];
tmp_5_cast_reg_1130[29] <= tmp_5_cast_fu_649_p1[29];
        tmp_9_cast_reg_1135[0] <= tmp_9_cast_fu_662_p1[0];
tmp_9_cast_reg_1135[1] <= tmp_9_cast_fu_662_p1[1];
tmp_9_cast_reg_1135[2] <= tmp_9_cast_fu_662_p1[2];
tmp_9_cast_reg_1135[3] <= tmp_9_cast_fu_662_p1[3];
tmp_9_cast_reg_1135[4] <= tmp_9_cast_fu_662_p1[4];
tmp_9_cast_reg_1135[5] <= tmp_9_cast_fu_662_p1[5];
tmp_9_cast_reg_1135[6] <= tmp_9_cast_fu_662_p1[6];
tmp_9_cast_reg_1135[7] <= tmp_9_cast_fu_662_p1[7];
tmp_9_cast_reg_1135[8] <= tmp_9_cast_fu_662_p1[8];
tmp_9_cast_reg_1135[9] <= tmp_9_cast_fu_662_p1[9];
tmp_9_cast_reg_1135[10] <= tmp_9_cast_fu_662_p1[10];
tmp_9_cast_reg_1135[11] <= tmp_9_cast_fu_662_p1[11];
tmp_9_cast_reg_1135[12] <= tmp_9_cast_fu_662_p1[12];
tmp_9_cast_reg_1135[13] <= tmp_9_cast_fu_662_p1[13];
tmp_9_cast_reg_1135[14] <= tmp_9_cast_fu_662_p1[14];
tmp_9_cast_reg_1135[15] <= tmp_9_cast_fu_662_p1[15];
tmp_9_cast_reg_1135[16] <= tmp_9_cast_fu_662_p1[16];
tmp_9_cast_reg_1135[17] <= tmp_9_cast_fu_662_p1[17];
tmp_9_cast_reg_1135[18] <= tmp_9_cast_fu_662_p1[18];
tmp_9_cast_reg_1135[19] <= tmp_9_cast_fu_662_p1[19];
tmp_9_cast_reg_1135[20] <= tmp_9_cast_fu_662_p1[20];
tmp_9_cast_reg_1135[21] <= tmp_9_cast_fu_662_p1[21];
tmp_9_cast_reg_1135[22] <= tmp_9_cast_fu_662_p1[22];
tmp_9_cast_reg_1135[23] <= tmp_9_cast_fu_662_p1[23];
tmp_9_cast_reg_1135[24] <= tmp_9_cast_fu_662_p1[24];
tmp_9_cast_reg_1135[25] <= tmp_9_cast_fu_662_p1[25];
tmp_9_cast_reg_1135[26] <= tmp_9_cast_fu_662_p1[26];
tmp_9_cast_reg_1135[27] <= tmp_9_cast_fu_662_p1[27];
tmp_9_cast_reg_1135[28] <= tmp_9_cast_fu_662_p1[28];
tmp_9_cast_reg_1135[29] <= tmp_9_cast_fu_662_p1[29];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_666_p2))) begin
        master_portA_addr_reg_1143 <= tmp_7_cast_fu_680_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st65_fsm_14 == ap_CS_fsm)) begin
        master_portB_addr_reg_1346[0] <= tmp_29_cast_fu_1021_p1[0];
master_portB_addr_reg_1346[1] <= tmp_29_cast_fu_1021_p1[1];
master_portB_addr_reg_1346[2] <= tmp_29_cast_fu_1021_p1[2];
master_portB_addr_reg_1346[3] <= tmp_29_cast_fu_1021_p1[3];
master_portB_addr_reg_1346[4] <= tmp_29_cast_fu_1021_p1[4];
master_portB_addr_reg_1346[5] <= tmp_29_cast_fu_1021_p1[5];
master_portB_addr_reg_1346[6] <= tmp_29_cast_fu_1021_p1[6];
master_portB_addr_reg_1346[7] <= tmp_29_cast_fu_1021_p1[7];
master_portB_addr_reg_1346[8] <= tmp_29_cast_fu_1021_p1[8];
master_portB_addr_reg_1346[9] <= tmp_29_cast_fu_1021_p1[9];
master_portB_addr_reg_1346[10] <= tmp_29_cast_fu_1021_p1[10];
master_portB_addr_reg_1346[11] <= tmp_29_cast_fu_1021_p1[11];
master_portB_addr_reg_1346[12] <= tmp_29_cast_fu_1021_p1[12];
master_portB_addr_reg_1346[13] <= tmp_29_cast_fu_1021_p1[13];
master_portB_addr_reg_1346[14] <= tmp_29_cast_fu_1021_p1[14];
master_portB_addr_reg_1346[15] <= tmp_29_cast_fu_1021_p1[15];
master_portB_addr_reg_1346[16] <= tmp_29_cast_fu_1021_p1[16];
master_portB_addr_reg_1346[17] <= tmp_29_cast_fu_1021_p1[17];
master_portB_addr_reg_1346[18] <= tmp_29_cast_fu_1021_p1[18];
master_portB_addr_reg_1346[19] <= tmp_29_cast_fu_1021_p1[19];
master_portB_addr_reg_1346[20] <= tmp_29_cast_fu_1021_p1[20];
master_portB_addr_reg_1346[21] <= tmp_29_cast_fu_1021_p1[21];
master_portB_addr_reg_1346[22] <= tmp_29_cast_fu_1021_p1[22];
master_portB_addr_reg_1346[23] <= tmp_29_cast_fu_1021_p1[23];
master_portB_addr_reg_1346[24] <= tmp_29_cast_fu_1021_p1[24];
master_portB_addr_reg_1346[25] <= tmp_29_cast_fu_1021_p1[25];
master_portB_addr_reg_1346[26] <= tmp_29_cast_fu_1021_p1[26];
master_portB_addr_reg_1346[27] <= tmp_29_cast_fu_1021_p1[27];
master_portB_addr_reg_1346[28] <= tmp_29_cast_fu_1021_p1[28];
master_portB_addr_reg_1346[29] <= tmp_29_cast_fu_1021_p1[29];
        tmp_24_reg_1356[0] <= tmp_24_fu_1063_p1[0];
tmp_24_reg_1356[1] <= tmp_24_fu_1063_p1[1];
tmp_24_reg_1356[2] <= tmp_24_fu_1063_p1[2];
tmp_24_reg_1356[3] <= tmp_24_fu_1063_p1[3];
tmp_24_reg_1356[4] <= tmp_24_fu_1063_p1[4];
tmp_24_reg_1356[5] <= tmp_24_fu_1063_p1[5];
tmp_24_reg_1356[6] <= tmp_24_fu_1063_p1[6];
tmp_24_reg_1356[7] <= tmp_24_fu_1063_p1[7];
tmp_24_reg_1356[8] <= tmp_24_fu_1063_p1[8];
tmp_24_reg_1356[9] <= tmp_24_fu_1063_p1[9];
tmp_24_reg_1356[10] <= tmp_24_fu_1063_p1[10];
tmp_24_reg_1356[11] <= tmp_24_fu_1063_p1[11];
tmp_24_reg_1356[12] <= tmp_24_fu_1063_p1[12];
tmp_24_reg_1356[13] <= tmp_24_fu_1063_p1[13];
tmp_24_reg_1356[14] <= tmp_24_fu_1063_p1[14];
tmp_24_reg_1356[15] <= tmp_24_fu_1063_p1[15];
tmp_24_reg_1356[16] <= tmp_24_fu_1063_p1[16];
tmp_24_reg_1356[17] <= tmp_24_fu_1063_p1[17];
tmp_24_reg_1356[18] <= tmp_24_fu_1063_p1[18];
tmp_24_reg_1356[19] <= tmp_24_fu_1063_p1[19];
tmp_24_reg_1356[20] <= tmp_24_fu_1063_p1[20];
tmp_24_reg_1356[21] <= tmp_24_fu_1063_p1[21];
tmp_24_reg_1356[22] <= tmp_24_fu_1063_p1[22];
tmp_24_reg_1356[23] <= tmp_24_fu_1063_p1[23];
tmp_24_reg_1356[24] <= tmp_24_fu_1063_p1[24];
tmp_24_reg_1356[25] <= tmp_24_fu_1063_p1[25];
tmp_24_reg_1356[26] <= tmp_24_fu_1063_p1[26];
tmp_24_reg_1356[27] <= tmp_24_fu_1063_p1[27];
tmp_24_reg_1356[28] <= tmp_24_fu_1063_p1[28];
tmp_24_reg_1356[29] <= tmp_24_fu_1063_p1[29];
        tmp_39_add_i32_shr_reg_1351 <= {{tmp_16_fu_1047_p2[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == tmp_s_reg_1265))) begin
        p_s_reg_1329 <= p_s_fu_961_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_reg_ppstg_exitcond8_reg_1149_pp1_it5 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6))) | ((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1173_pp2_it5) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6))))) begin
        reg_604 <= master_portA_datain;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st24_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_reg_1186)) | ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == tmp_s_reg_1265)))) begin
        reg_610 <= centre_buffer_2_wgtCent_value_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_lv1_0 == tmp_s_fu_916_p2))) begin
        tmp_10_reg_1286 <= tmp_10_fu_939_p2;
        tmp_13_reg_1298 <= tmp_13_fu_945_p2;
        tmp_6_reg_1274[0] <= tmp_6_fu_927_p1[0];
tmp_6_reg_1274[1] <= tmp_6_fu_927_p1[1];
tmp_6_reg_1274[2] <= tmp_6_fu_927_p1[2];
tmp_6_reg_1274[3] <= tmp_6_fu_927_p1[3];
tmp_6_reg_1274[4] <= tmp_6_fu_927_p1[4];
tmp_6_reg_1274[5] <= tmp_6_fu_927_p1[5];
tmp_6_reg_1274[6] <= tmp_6_fu_927_p1[6];
tmp_6_reg_1274[7] <= tmp_6_fu_927_p1[7];
tmp_6_reg_1274[8] <= tmp_6_fu_927_p1[8];
tmp_6_reg_1274[9] <= tmp_6_fu_927_p1[9];
tmp_6_reg_1274[10] <= tmp_6_fu_927_p1[10];
tmp_6_reg_1274[11] <= tmp_6_fu_927_p1[11];
tmp_6_reg_1274[12] <= tmp_6_fu_927_p1[12];
tmp_6_reg_1274[13] <= tmp_6_fu_927_p1[13];
tmp_6_reg_1274[14] <= tmp_6_fu_927_p1[14];
tmp_6_reg_1274[15] <= tmp_6_fu_927_p1[15];
tmp_6_reg_1274[16] <= tmp_6_fu_927_p1[16];
tmp_6_reg_1274[17] <= tmp_6_fu_927_p1[17];
tmp_6_reg_1274[18] <= tmp_6_fu_927_p1[18];
tmp_6_reg_1274[19] <= tmp_6_fu_927_p1[19];
tmp_6_reg_1274[20] <= tmp_6_fu_927_p1[20];
tmp_6_reg_1274[21] <= tmp_6_fu_927_p1[21];
tmp_6_reg_1274[22] <= tmp_6_fu_927_p1[22];
tmp_6_reg_1274[23] <= tmp_6_fu_927_p1[23];
tmp_6_reg_1274[24] <= tmp_6_fu_927_p1[24];
tmp_6_reg_1274[25] <= tmp_6_fu_927_p1[25];
tmp_6_reg_1274[26] <= tmp_6_fu_927_p1[26];
tmp_6_reg_1274[27] <= tmp_6_fu_927_p1[27];
tmp_6_reg_1274[28] <= tmp_6_fu_927_p1[28];
tmp_6_reg_1274[29] <= tmp_6_fu_927_p1[29];
tmp_6_reg_1274[30] <= tmp_6_fu_927_p1[30];
tmp_6_reg_1274[31] <= tmp_6_fu_927_p1[31];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st23_fsm_8 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_fu_761_p2))) begin
        tmp_22_reg_1205 <= tmp_22_fu_804_p2;
        tmp_35_reg_1195 <= tmp_35_fu_777_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// c_buffer_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18 or tmp_12_fu_988_p1 or tmp_26_2_fu_1007_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp4_it18)) begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            c_buffer_address0 = tmp_26_2_fu_1007_p1;
        end else if ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm)) begin
            c_buffer_address0 = tmp_12_fu_988_p1;
        end else begin
            c_buffer_address0 = 'bx;
        end
    end else begin
        c_buffer_address0 = 'bx;
    end
end

/// c_buffer_address1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18 or ap_reg_ppiten_pp5_it0 or tmp_26_1_fu_997_p1 or tmp_26_fu_1078_p1)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it18))) begin
        c_buffer_address1 = tmp_26_1_fu_997_p1;
    end else if (((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it0))) begin
        c_buffer_address1 = tmp_26_fu_1078_p1;
    end else begin
        c_buffer_address1 = 'bx;
    end
end

/// c_buffer_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18)
begin
    if ((((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it18)) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it18) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)))) begin
        c_buffer_ce0 = ap_const_logic_1;
    end else begin
        c_buffer_ce0 = ap_const_logic_0;
    end
end

/// c_buffer_ce1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18 or ap_reg_ppiten_pp5_it0 or ap_sig_bdd_629 or ap_reg_ppiten_pp5_it2)
begin
    if ((((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2))) | ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it18)))) begin
        c_buffer_ce1 = ap_const_logic_1;
    end else begin
        c_buffer_ce1 = ap_const_logic_0;
    end
end

/// c_buffer_d0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18 or grp_fu_968_p2 or grp_fu_982_p2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp4_it18)) begin
        if ((ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) begin
            c_buffer_d0 = grp_fu_982_p2;
        end else if ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm)) begin
            c_buffer_d0 = grp_fu_968_p2;
        end else begin
            c_buffer_d0 = 'bx;
        end
    end else begin
        c_buffer_d0 = 'bx;
    end
end

/// c_buffer_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18 or ap_reg_ppstg_tmp_s_reg_1265_pp4_it17 or ap_reg_ppstg_tmp_s_reg_1265_pp4_it18)
begin
    if ((((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_1265_pp4_it17)) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it18) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_1265_pp4_it18)))) begin
        c_buffer_we0 = ap_const_logic_1;
    end else begin
        c_buffer_we0 = ap_const_logic_0;
    end
end

/// c_buffer_we1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it18 or ap_reg_ppstg_tmp_s_reg_1265_pp4_it17)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it18) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_1265_pp4_it17))) begin
        c_buffer_we1 = ap_const_logic_1;
    end else begin
        c_buffer_we1 = ap_const_logic_0;
    end
end

/// centre_buffer_0_wgtCent_value_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0 or tmp_27_fu_867_p1 or tmp_6_reg_1274 or tmp_2_fu_626_p1 or tmp_28_fu_834_p1)
begin
    if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        centre_buffer_0_wgtCent_value_address0 = tmp_27_fu_867_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_0_wgtCent_value_address0 = tmp_2_fu_626_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm))) begin
        centre_buffer_0_wgtCent_value_address0 = tmp_6_reg_1274;
    end else if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        centre_buffer_0_wgtCent_value_address0 = tmp_28_fu_834_p1;
    end else begin
        centre_buffer_0_wgtCent_value_address0 = 'bx;
    end
end

/// centre_buffer_0_wgtCent_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st23_fsm_8 == ap_CS_fsm) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)))) begin
        centre_buffer_0_wgtCent_value_ce0 = ap_const_logic_1;
    end else begin
        centre_buffer_0_wgtCent_value_ce0 = ap_const_logic_0;
    end
end

/// centre_buffer_0_wgtCent_value_d0 assign process. ///
always @ (ap_CS_fsm or tmp_33_fu_875_p2)
begin
    if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        centre_buffer_0_wgtCent_value_d0 = tmp_33_fu_875_p2;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_0_wgtCent_value_d0 = ap_const_lv32_0;
    end else begin
        centre_buffer_0_wgtCent_value_d0 = 'bx;
    end
end

/// centre_buffer_0_wgtCent_value_we0 assign process. ///
always @ (ap_CS_fsm or exitcond5_reg_1186 or exitcond7_fu_614_p2)
begin
    if ((((ap_ST_st24_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_reg_1186)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_614_p2)))) begin
        centre_buffer_0_wgtCent_value_we0 = ap_const_logic_1;
    end else begin
        centre_buffer_0_wgtCent_value_we0 = ap_const_logic_0;
    end
end

/// centre_buffer_1_wgtCent_value_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0 or tmp_27_fu_867_p1 or tmp_6_reg_1274 or tmp_2_fu_626_p1 or tmp_28_fu_834_p1)
begin
    if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        centre_buffer_1_wgtCent_value_address0 = tmp_27_fu_867_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_1_wgtCent_value_address0 = tmp_2_fu_626_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm))) begin
        centre_buffer_1_wgtCent_value_address0 = tmp_6_reg_1274;
    end else if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        centre_buffer_1_wgtCent_value_address0 = tmp_28_fu_834_p1;
    end else begin
        centre_buffer_1_wgtCent_value_address0 = 'bx;
    end
end

/// centre_buffer_1_wgtCent_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st23_fsm_8 == ap_CS_fsm) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)))) begin
        centre_buffer_1_wgtCent_value_ce0 = ap_const_logic_1;
    end else begin
        centre_buffer_1_wgtCent_value_ce0 = ap_const_logic_0;
    end
end

/// centre_buffer_1_wgtCent_value_d0 assign process. ///
always @ (ap_CS_fsm or tmp_44_1_fu_882_p2)
begin
    if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        centre_buffer_1_wgtCent_value_d0 = tmp_44_1_fu_882_p2;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_1_wgtCent_value_d0 = ap_const_lv32_0;
    end else begin
        centre_buffer_1_wgtCent_value_d0 = 'bx;
    end
end

/// centre_buffer_1_wgtCent_value_we0 assign process. ///
always @ (ap_CS_fsm or exitcond5_reg_1186 or exitcond7_fu_614_p2)
begin
    if ((((ap_ST_st24_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_reg_1186)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_614_p2)))) begin
        centre_buffer_1_wgtCent_value_we0 = ap_const_logic_1;
    end else begin
        centre_buffer_1_wgtCent_value_we0 = ap_const_logic_0;
    end
end

/// centre_buffer_2_wgtCent_value_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0 or tmp_27_reg_1245 or tmp_6_reg_1274 or tmp_2_fu_626_p1 or tmp_28_fu_834_p1)
begin
    if ((ap_ST_st25_fsm_10 == ap_CS_fsm)) begin
        centre_buffer_2_wgtCent_value_address0 = tmp_27_reg_1245;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_2_wgtCent_value_address0 = tmp_2_fu_626_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm))) begin
        centre_buffer_2_wgtCent_value_address0 = tmp_6_reg_1274;
    end else if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        centre_buffer_2_wgtCent_value_address0 = tmp_28_fu_834_p1;
    end else begin
        centre_buffer_2_wgtCent_value_address0 = 'bx;
    end
end

/// centre_buffer_2_wgtCent_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st23_fsm_8 == ap_CS_fsm) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm)) | (ap_ST_st25_fsm_10 == ap_CS_fsm))) begin
        centre_buffer_2_wgtCent_value_ce0 = ap_const_logic_1;
    end else begin
        centre_buffer_2_wgtCent_value_ce0 = ap_const_logic_0;
    end
end

/// centre_buffer_2_wgtCent_value_d0 assign process. ///
always @ (ap_CS_fsm or tmp_44_2_fu_903_p2)
begin
    if ((ap_ST_st25_fsm_10 == ap_CS_fsm)) begin
        centre_buffer_2_wgtCent_value_d0 = tmp_44_2_fu_903_p2;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_2_wgtCent_value_d0 = ap_const_lv32_0;
    end else begin
        centre_buffer_2_wgtCent_value_d0 = 'bx;
    end
end

/// centre_buffer_2_wgtCent_value_we0 assign process. ///
always @ (ap_CS_fsm or exitcond5_reg_1186 or exitcond7_fu_614_p2)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_614_p2)) | ((ap_const_lv1_0 == exitcond5_reg_1186) & (ap_ST_st25_fsm_10 == ap_CS_fsm)))) begin
        centre_buffer_2_wgtCent_value_we0 = ap_const_logic_1;
    end else begin
        centre_buffer_2_wgtCent_value_we0 = ap_const_logic_0;
    end
end

/// centre_buffer_count_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0 or tmp_27_fu_867_p1 or centre_buffer_count_addr_2_reg_1250 or tmp_6_fu_927_p1 or tmp_2_fu_626_p1)
begin
    if ((ap_ST_st25_fsm_10 == ap_CS_fsm)) begin
        centre_buffer_count_address0 = centre_buffer_count_addr_2_reg_1250;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_count_address0 = tmp_2_fu_626_p1;
    end else if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it0))) begin
        centre_buffer_count_address0 = tmp_6_fu_927_p1;
    end else if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        centre_buffer_count_address0 = tmp_27_fu_867_p1;
    end else begin
        centre_buffer_count_address0 = 'bx;
    end
end

/// centre_buffer_count_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it0)) | (ap_ST_st25_fsm_10 == ap_CS_fsm))) begin
        centre_buffer_count_ce0 = ap_const_logic_1;
    end else begin
        centre_buffer_count_ce0 = ap_const_logic_0;
    end
end

/// centre_buffer_count_d0 assign process. ///
always @ (ap_CS_fsm or tmp_31_fu_889_p2)
begin
    if ((ap_ST_st25_fsm_10 == ap_CS_fsm)) begin
        centre_buffer_count_d0 = tmp_31_fu_889_p2;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_count_d0 = ap_const_lv32_0;
    end else begin
        centre_buffer_count_d0 = 'bx;
    end
end

/// centre_buffer_count_we0 assign process. ///
always @ (ap_CS_fsm or exitcond5_reg_1186 or exitcond7_fu_614_p2)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_614_p2)) | ((ap_const_lv1_0 == exitcond5_reg_1186) & (ap_ST_st25_fsm_10 == ap_CS_fsm)))) begin
        centre_buffer_count_we0 = ap_const_logic_1;
    end else begin
        centre_buffer_count_we0 = ap_const_logic_0;
    end
end

/// centre_buffer_sum_sq_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0 or tmp_27_fu_867_p1 or centre_buffer_sum_sq_addr_2_reg_1255 or tmp_6_fu_927_p1 or tmp_2_fu_626_p1)
begin
    if ((ap_ST_st25_fsm_10 == ap_CS_fsm)) begin
        centre_buffer_sum_sq_address0 = centre_buffer_sum_sq_addr_2_reg_1255;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_sum_sq_address0 = tmp_2_fu_626_p1;
    end else if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it0))) begin
        centre_buffer_sum_sq_address0 = tmp_6_fu_927_p1;
    end else if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        centre_buffer_sum_sq_address0 = tmp_27_fu_867_p1;
    end else begin
        centre_buffer_sum_sq_address0 = 'bx;
    end
end

/// centre_buffer_sum_sq_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp4_it0)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it0)) | (ap_ST_st25_fsm_10 == ap_CS_fsm))) begin
        centre_buffer_sum_sq_ce0 = ap_const_logic_1;
    end else begin
        centre_buffer_sum_sq_ce0 = ap_const_logic_0;
    end
end

/// centre_buffer_sum_sq_d0 assign process. ///
always @ (ap_CS_fsm or tmp_32_fu_896_p2)
begin
    if ((ap_ST_st25_fsm_10 == ap_CS_fsm)) begin
        centre_buffer_sum_sq_d0 = tmp_32_fu_896_p2;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        centre_buffer_sum_sq_d0 = ap_const_lv32_0;
    end else begin
        centre_buffer_sum_sq_d0 = 'bx;
    end
end

/// centre_buffer_sum_sq_we0 assign process. ///
always @ (ap_CS_fsm or exitcond5_reg_1186 or exitcond7_fu_614_p2)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_614_p2)) | ((ap_const_lv1_0 == exitcond5_reg_1186) & (ap_ST_st25_fsm_10 == ap_CS_fsm)))) begin
        centre_buffer_sum_sq_we0 = ap_const_logic_1;
    end else begin
        centre_buffer_sum_sq_we0 = ap_const_logic_0;
    end
end

/// centres_out_addr0ack_out assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        centres_out_addr0ack_out = ap_const_logic_1;
    end else begin
        centres_out_addr0ack_out = ap_const_logic_0;
    end
end

/// data_points_in_addr0ack_out assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        data_points_in_addr0ack_out = ap_const_logic_1;
    end else begin
        data_points_in_addr0ack_out = ap_const_logic_0;
    end
end

/// distortion_out1ack_in assign process. ///
always @ (distortion_out1vld_reg)
begin
    if (((ap_const_logic_0 == distortion_out1vld_reg) | ((ap_const_logic_1 == distortion_out1vld_reg) & (ap_const_logic_1 == ap_const_logic_1)))) begin
        distortion_out1ack_in = ap_const_logic_1;
    end else begin
        distortion_out1ack_in = ap_const_logic_0;
    end
end

/// distortion_out1vld_in assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st69_fsm_16 == ap_CS_fsm)) begin
        distortion_out1vld_in = ap_const_logic_1;
    end else begin
        distortion_out1vld_in = ap_const_logic_0;
    end
end

/// i5_phi_fu_573_p4 assign process. ///
always @ (ap_CS_fsm or i5_reg_569 or ap_reg_ppiten_pp4_it1 or tmp_s_reg_1265 or i_2_reg_1269 or tmp_13_reg_1298)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == tmp_s_reg_1265) & (ap_const_lv1_0 == tmp_13_reg_1298))) begin
        i5_phi_fu_573_p4 = i_2_reg_1269;
    end else begin
        i5_phi_fu_573_p4 = i5_reg_569;
    end
end

/// i_buffer_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp2_it7 or tmp_34_fu_756_p1 or tmp_19_fu_787_p1 or tmp_21_fu_848_p1)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it7))) begin
        i_buffer_address0 = tmp_34_fu_756_p1;
    end else if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        i_buffer_address0 = tmp_21_fu_848_p1;
    end else if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        i_buffer_address0 = tmp_19_fu_787_p1;
    end else begin
        i_buffer_address0 = 'bx;
    end
end

/// i_buffer_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6 or ap_reg_ppiten_pp2_it7)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) | (ap_ST_st23_fsm_8 == ap_CS_fsm) | ((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it7) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6))))) begin
        i_buffer_ce0 = ap_const_logic_1;
    end else begin
        i_buffer_ce0 = ap_const_logic_0;
    end
end

/// i_buffer_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6 or ap_reg_ppiten_pp2_it7 or ap_reg_ppstg_exitcond1_reg_1173_pp2_it6)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it7) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1173_pp2_it6))) begin
        i_buffer_we0 = ap_const_logic_1;
    end else begin
        i_buffer_we0 = ap_const_logic_0;
    end
end

/// indvar2_phi_fu_538_p4 assign process. ///
always @ (ap_CS_fsm or indvar2_reg_534 or ap_reg_ppiten_pp2_it1 or exitcond1_reg_1173 or indvar_next2_reg_1177)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & (ap_const_lv1_0 == exitcond1_reg_1173))) begin
        indvar2_phi_fu_538_p4 = indvar_next2_reg_1177;
    end else begin
        indvar2_phi_fu_538_p4 = indvar2_reg_534;
    end
end

/// indvar_phi_fu_526_p4 assign process. ///
always @ (ap_CS_fsm or indvar_reg_522 or ap_reg_ppiten_pp1_it1 or exitcond8_reg_1149 or indvar_next_reg_1153)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond8_reg_1149 == ap_const_lv1_0))) begin
        indvar_phi_fu_526_p4 = indvar_next_reg_1153;
    end else begin
        indvar_phi_fu_526_p4 = indvar_reg_522;
    end
end

/// k0ack_out assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        k0ack_out = ap_const_logic_1;
    end else begin
        k0ack_out = ap_const_logic_0;
    end
end

/// kernel_info_in_addr0ack_out assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        kernel_info_in_addr0ack_out = ap_const_logic_1;
    end else begin
        kernel_info_in_addr0ack_out = ap_const_logic_0;
    end
end

/// master_portA_address assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1 or exitcond8_reg_1149 or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp2_it1 or exitcond1_reg_1173 or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6 or master_portA_addr_reg_1143 or isIter0_reg_1158 or master_portA_addr_1_reg_1167 or isIter1_reg_1182)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == exitcond1_reg_1173) & ~(ap_const_lv1_0 == isIter1_reg_1182))) begin
        master_portA_address = master_portA_addr_1_reg_1167;
    end else if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (exitcond8_reg_1149 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_1158))) begin
        master_portA_address = master_portA_addr_reg_1143;
    end else begin
        master_portA_address = 'bx;
    end
end

/// master_portA_req_write assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1 or exitcond8_reg_1149 or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp2_it1 or exitcond1_reg_1173 or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6 or isIter0_reg_1158 or isIter1_reg_1182)
begin
    if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (exitcond8_reg_1149 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_1158)) | ((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == exitcond1_reg_1173) & ~(ap_const_lv1_0 == isIter1_reg_1182)))) begin
        master_portA_req_write = ap_const_logic_1;
    end else begin
        master_portA_req_write = ap_const_logic_0;
    end
end

/// master_portA_rsp_read assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond8_reg_1149_pp1_it5 or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppstg_exitcond1_reg_1173_pp2_it5 or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6)
begin
    if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_reg_ppstg_exitcond8_reg_1149_pp1_it5 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6))) | ((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1173_pp2_it5) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6))))) begin
        master_portA_rsp_read = ap_const_logic_1;
    end else begin
        master_portA_rsp_read = ap_const_logic_0;
    end
end

/// master_portA_size assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1 or exitcond8_reg_1149 or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp2_it1 or exitcond1_reg_1173 or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6 or isIter0_reg_1158 or isIter1_reg_1182)
begin
    if (((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & (ap_const_lv1_0 == exitcond1_reg_1173) & ~(ap_const_lv1_0 == isIter1_reg_1182))) begin
        master_portA_size = ap_const_lv32_20;
    end else if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (exitcond8_reg_1149 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_1158))) begin
        master_portA_size = ap_const_lv32_30;
    end else begin
        master_portA_size = 'bx;
    end
end

/// master_portB_req_din assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond_reg_1361_pp5_it1 or ap_sig_bdd_629 or ap_reg_ppiten_pp5_it2 or ap_reg_ppstg_isIter_reg_1375_pp5_it1)
begin
    if ((((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1361_pp5_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_1375_pp5_it1)) | ((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1361_pp5_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2))))) begin
        master_portB_req_din = ap_const_logic_1;
    end else begin
        master_portB_req_din = ap_const_logic_0;
    end
end

/// master_portB_req_write assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond_reg_1361_pp5_it1 or ap_sig_bdd_629 or ap_reg_ppiten_pp5_it2 or ap_reg_ppstg_isIter_reg_1375_pp5_it1)
begin
    if ((((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1361_pp5_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_1375_pp5_it1)) | ((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1361_pp5_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2))))) begin
        master_portB_req_write = ap_const_logic_1;
    end else begin
        master_portB_req_write = ap_const_logic_0;
    end
end

/// n0ack_out assign process. ///
always @ (ap_CS_fsm or distortion_out1ack_in)
begin
    if (((ap_ST_st70_fsm_17 == ap_CS_fsm) & ~(distortion_out1ack_in == ap_const_logic_0))) begin
        n0ack_out = ap_const_logic_1;
    end else begin
        n0ack_out = ap_const_logic_0;
    end
end

/// p_buffer_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it7 or tmp_25_fu_708_p1 or tmp_30_fu_814_p1)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it7))) begin
        p_buffer_address0 = tmp_25_fu_708_p1;
    end else if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        p_buffer_address0 = tmp_30_fu_814_p1;
    end else begin
        p_buffer_address0 = 'bx;
    end
end

/// p_buffer_address1 assign process. ///
always @ (ap_CS_fsm or tmp_30_1_fu_829_p1 or tmp_30_2_fu_862_p1)
begin
    if ((ap_ST_st24_fsm_9 == ap_CS_fsm)) begin
        p_buffer_address1 = tmp_30_2_fu_862_p1;
    end else if ((ap_ST_st23_fsm_8 == ap_CS_fsm)) begin
        p_buffer_address1 = tmp_30_1_fu_829_p1;
    end else begin
        p_buffer_address1 = 'bx;
    end
end

/// p_buffer_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp1_it7)
begin
    if (((ap_ST_st23_fsm_8 == ap_CS_fsm) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6))))) begin
        p_buffer_ce0 = ap_const_logic_1;
    end else begin
        p_buffer_ce0 = ap_const_logic_0;
    end
end

/// p_buffer_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st24_fsm_9 == ap_CS_fsm) | (ap_ST_st23_fsm_8 == ap_CS_fsm))) begin
        p_buffer_ce1 = ap_const_logic_1;
    end else begin
        p_buffer_ce1 = ap_const_logic_0;
    end
end

/// p_buffer_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp1_it7 or ap_reg_ppstg_exitcond8_reg_1149_pp1_it6)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_1149_pp1_it6))) begin
        p_buffer_we0 = ap_const_logic_1;
    end else begin
        p_buffer_we0 = ap_const_logic_0;
    end
end

/// total_distortion_phi_fu_561_p4 assign process. ///
always @ (ap_CS_fsm or total_distortion_reg_557 or ap_reg_ppiten_pp4_it1 or tmp_s_reg_1265 or tmp_13_reg_1298 or total_distortion_2_reg_1323)
begin
    if (((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == tmp_s_reg_1265) & (ap_const_lv1_0 == tmp_13_reg_1298))) begin
        total_distortion_phi_fu_561_p4 = total_distortion_2_reg_1323;
    end else begin
        total_distortion_phi_fu_561_p4 = total_distortion_reg_557;
    end
end
always @ (ap_start or ap_CS_fsm or distortion_out1ack_in or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_bdd_230 or ap_reg_ppiten_pp1_it6 or ap_reg_ppiten_pp1_it7 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_sig_bdd_263 or ap_reg_ppiten_pp2_it6 or ap_reg_ppiten_pp2_it7 or ap_reg_ppiten_pp4_it17 or ap_reg_ppiten_pp4_it18 or tmp_3_fu_666_p2 or exitcond8_fu_690_p2 or exitcond1_fu_738_p2 or exitcond5_fu_761_p2 or exitcond_fu_1067_p2 or ap_reg_ppiten_pp5_it0 or ap_reg_ppiten_pp5_it1 or ap_sig_bdd_629 or ap_reg_ppiten_pp5_it2 or exitcond7_fu_614_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            if ((ap_const_lv1_0 == exitcond7_fu_614_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            if ((ap_const_lv1_0 == tmp_3_fu_666_p2)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_12;
            end
        ap_ST_pp1_stg0_fsm_5 : 
            if ((~((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~(ap_const_lv1_0 == exitcond8_fu_690_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end else if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it7) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it6)) & ~(ap_const_lv1_0 == exitcond8_fu_690_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st14_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end
        ap_ST_st14_fsm_6 : 
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_7;
        ap_ST_pp2_stg0_fsm_7 : 
            if ((~((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it7) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_lv1_0 == exitcond1_fu_738_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_7;
            end else if ((((ap_ST_pp2_stg0_fsm_7 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it7) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_263 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it6)) & ~(ap_const_lv1_0 == exitcond1_fu_738_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_st23_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_7;
            end
        ap_ST_st23_fsm_8 : 
            if ((ap_const_lv1_0 == exitcond5_fu_761_p2)) begin
                ap_NS_fsm = ap_ST_st24_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_11;
            end
        ap_ST_st24_fsm_9 : 
            ap_NS_fsm = ap_ST_st25_fsm_10;
        ap_ST_st25_fsm_10 : 
            ap_NS_fsm = ap_ST_st23_fsm_8;
        ap_ST_st26_fsm_11 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_pp4_stg0_fsm_12 : 
            ap_NS_fsm = ap_ST_pp4_stg1_fsm_13;
        ap_ST_pp4_stg1_fsm_13 : 
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp4_it18) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm) & ~(ap_const_logic_1 == ap_reg_ppiten_pp4_it17))) begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st65_fsm_14;
            end
        ap_ST_st65_fsm_14 : 
            ap_NS_fsm = ap_ST_pp5_stg0_fsm_15;
        ap_ST_pp5_stg0_fsm_15 : 
            if ((~((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_lv1_0 == exitcond_fu_1067_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp5_it1)))) begin
                ap_NS_fsm = ap_ST_pp5_stg0_fsm_15;
            end else if ((((ap_ST_pp5_stg0_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~(ap_sig_bdd_629 & (ap_const_logic_1 == ap_reg_ppiten_pp5_it2)) & ~(ap_const_lv1_0 == exitcond_fu_1067_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp5_it1)))) begin
                ap_NS_fsm = ap_ST_st69_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_pp5_stg0_fsm_15;
            end
        ap_ST_st69_fsm_16 : 
            ap_NS_fsm = ap_ST_st70_fsm_17;
        ap_ST_st70_fsm_17 : 
            if (~(distortion_out1ack_in == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st70_fsm_17;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_1247 assign process. ///
always @ (ap_CS_fsm or tmp_s_fu_916_p2)
begin
    ap_sig_bdd_1247 = ((ap_ST_pp4_stg0_fsm_12 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_s_fu_916_p2));
end

/// ap_sig_bdd_1250 assign process. ///
always @ (ap_CS_fsm or tmp_s_reg_1265 or tmp_13_reg_1298)
begin
    ap_sig_bdd_1250 = ((ap_const_lv1_0 == tmp_s_reg_1265) & (ap_ST_pp4_stg1_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_13_reg_1298));
end

/// ap_sig_bdd_230 assign process. ///
always @ (master_portA_rsp_empty_n or ap_reg_ppstg_exitcond8_reg_1149_pp1_it5)
begin
    ap_sig_bdd_230 = ((master_portA_rsp_empty_n == ap_const_logic_0) & (ap_reg_ppstg_exitcond8_reg_1149_pp1_it5 == ap_const_lv1_0));
end

/// ap_sig_bdd_263 assign process. ///
always @ (master_portA_rsp_empty_n or ap_reg_ppstg_exitcond1_reg_1173_pp2_it5)
begin
    ap_sig_bdd_263 = ((master_portA_rsp_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1173_pp2_it5));
end

/// ap_sig_bdd_629 assign process. ///
always @ (master_portB_req_full_n or ap_reg_ppstg_exitcond_reg_1361_pp5_it1)
begin
    ap_sig_bdd_629 = ((master_portB_req_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1361_pp5_it1));
end
assign b2_1_fu_713_p2 = (b2_reg_510 + ap_const_lv32_30);
assign b_1_fu_910_p2 = (b_reg_498 + ap_const_lv32_20);
assign c_buffer_d1 = grp_fu_975_p2;
assign distortion_out = distortion_out1data_reg;
assign exitcond1_fu_738_p2 = (indvar2_phi_fu_538_p4 == ap_const_lv6_20? 1'b1: 1'b0);
assign exitcond5_fu_761_p2 = (i1_reg_546 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond7_fu_614_p2 = (i_reg_487 == ap_const_lv9_100? 1'b1: 1'b0);
assign exitcond8_fu_690_p2 = (indvar_phi_fu_526_p4 == ap_const_lv6_30? 1'b1: 1'b0);
assign exitcond_fu_1067_p2 = (indvar1_reg_592 == tmp_39_add_i32_shr_reg_1351? 1'b1: 1'b0);
assign grp_fu_968_ce = ap_const_logic_1;
assign grp_fu_968_p0 = centre_buffer_0_wgtCent_value_q0;
assign grp_fu_968_p1 = p_s_fu_961_p3;
assign grp_fu_975_ce = ap_const_logic_1;
assign grp_fu_975_p0 = centre_buffer_1_wgtCent_value_q0;
assign grp_fu_975_p1 = p_s_fu_961_p3;
assign grp_fu_982_ce = ap_const_logic_1;
assign grp_fu_982_p0 = reg_610;
assign grp_fu_982_p1 = p_s_reg_1329;
assign i1_cast2_fu_773_p1 = $unsigned(i1_reg_546);
assign i_1_fu_620_p2 = (i_reg_487 + ap_const_lv9_1);
assign i_2_fu_921_p2 = (i5_phi_fu_573_p4 + ap_const_lv32_1);
assign i_3_fu_767_p2 = (i1_reg_546 + ap_const_lv5_1);
assign i_buffer_d0 = reg_604;
assign indvar_next1_fu_1072_p2 = (indvar1_reg_592 + ap_const_lv30_1);
assign indvar_next2_fu_744_p2 = (indvar2_phi_fu_538_p4 + ap_const_lv6_1);
assign indvar_next_fu_696_p2 = (indvar_phi_fu_526_p4 + ap_const_lv6_1);
assign isIter0_fu_702_p2 = (indvar_phi_fu_526_p4 == ap_const_lv6_0? 1'b1: 1'b0);
assign isIter1_fu_750_p2 = (indvar2_phi_fu_538_p4 == ap_const_lv6_0? 1'b1: 1'b0);
assign isIter_fu_1083_p2 = (indvar1_reg_592 == ap_const_lv30_0? 1'b1: 1'b0);
assign lim_fu_635_p2 = n0data_reg << ap_const_lv32_1;
assign master_portA_dataout = ap_const_lv32_0;
assign master_portA_req_din = ap_const_logic_0;
assign master_portB_address = master_portB_addr_reg_1346;
assign master_portB_dataout = c_buffer_load_reg_1379;
assign master_portB_rsp_read = ap_const_logic_0;
assign master_portB_size = tmp_24_reg_1356;
assign p_buffer_d0 = reg_604;
assign p_s_fu_961_p3 = ((tmp_8_fu_956_p2)? ap_const_lv32_1: count_reg_1302);
assign p_shl_cast_fu_800_p1 = $unsigned(p_shl_fu_792_p3);
assign p_shl_fu_792_p3 = {{tmp_35_fu_777_p1}, {ap_const_lv2_0}};
assign tmp_10_cast_fu_719_p1 = $unsigned(b_reg_498);
assign tmp_10_fu_939_p2 = (tmp_17_fu_933_p2 - i5_phi_fu_573_p4);
assign tmp_11_cast_fu_728_p1 = $unsigned(tmp_11_fu_723_p2);
assign tmp_11_fu_723_p2 = (tmp_9_cast_reg_1135 + tmp_10_cast_fu_719_p1);
assign tmp_12_fu_988_p1 = $unsigned(ap_reg_ppstg_tmp_10_reg_1286_pp4_it17);
assign tmp_13_fu_945_p2 = (i5_phi_fu_573_p4 == k0data_reg? 1'b1: 1'b0);
assign tmp_14_fu_1012_p4 = {{centres_out_addr0data_reg[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_15_fu_1036_p2 = (tmp_18_fu_1031_p2 - k0data_reg);
assign tmp_16_fu_1047_p2 = (tmp_23_fu_1041_p2 + ap_const_lv32_C);
assign tmp_17_fu_933_p2 = i5_phi_fu_573_p4 << ap_const_lv32_2;
assign tmp_18_fu_1031_p2 = k0data_reg << ap_const_lv32_2;
assign tmp_19_fu_787_p1 = $unsigned(tmp_36_fu_781_p2);
assign tmp_20_fu_841_p3 = {{tmp_35_reg_1195}, {ap_const_lv1_1}};
assign tmp_21_fu_848_p1 = $unsigned(tmp_20_fu_841_p3);
assign tmp_22_fu_804_p2 = (p_shl_cast_fu_800_p1 - i1_cast2_fu_773_p1);
assign tmp_23_fu_1041_p2 = tmp_15_fu_1036_p2 << ap_const_lv32_2;
assign tmp_24_fu_1063_p1 = $unsigned(tmp_39_add_i32_shr_fu_1053_p4);
assign tmp_25_1_fu_992_p2 = (ap_reg_ppstg_tmp_10_reg_1286_pp4_it17 + ap_const_lv32_1);
assign tmp_25_2_fu_1002_p2 = (ap_reg_ppstg_tmp_10_reg_1286_pp4_it18 + ap_const_lv32_2);
assign tmp_25_fu_708_p1 = $unsigned(ap_reg_ppstg_indvar_reg_522_pp1_it6);
assign tmp_26_1_fu_997_p1 = $unsigned(tmp_25_1_fu_992_p2);
assign tmp_26_2_fu_1007_p1 = $unsigned(tmp_25_2_fu_1002_p2);
assign tmp_26_fu_1078_p1 = $unsigned(indvar1_reg_592);
assign tmp_27_fu_867_p1 = $unsigned(i_buffer_q0);
assign tmp_28_fu_834_p1 = $unsigned(i1_reg_546);
assign tmp_29_1_fu_819_p2 = (tmp_22_fu_804_p2 + ap_const_lv7_1);
assign tmp_29_2_fu_853_p2 = (tmp_22_reg_1205 + ap_const_lv7_2);
assign tmp_29_cast_fu_1021_p1 = $unsigned(tmp_14_fu_1012_p4);
assign tmp_2_fu_626_p1 = $unsigned(i_reg_487);
assign tmp_30_1_fu_829_p0 = $signed(tmp_29_1_fu_819_p2);
assign tmp_30_1_fu_829_p1 = $unsigned(tmp_30_1_fu_829_p0);
assign tmp_30_2_fu_862_p0 = $signed(tmp_29_2_fu_853_p2);
assign tmp_30_2_fu_862_p1 = $unsigned(tmp_30_2_fu_862_p0);
assign tmp_30_fu_814_p0 = $signed(tmp_22_fu_804_p2);
assign tmp_30_fu_814_p1 = $unsigned(tmp_30_fu_814_p0);
assign tmp_31_fu_889_p2 = (centre_buffer_count_q0 + ap_const_lv32_1);
assign tmp_32_fu_896_p2 = (centre_buffer_sum_sq_q0 + i_buffer_q0);
assign tmp_33_fu_875_p2 = (p_buffer_q0 + centre_buffer_0_wgtCent_value_q0);
assign tmp_34_fu_756_p1 = $unsigned(ap_reg_ppstg_indvar2_reg_534_pp2_it6);
assign tmp_35_fu_777_p1 = i1_reg_546[3:0];
assign tmp_36_fu_781_p2 = i1_reg_546 << ap_const_lv5_1;
assign tmp_39_add_i32_shr_fu_1053_p4 = {{tmp_16_fu_1047_p2[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_3_fu_666_p2 = (b_reg_498 > lim_reg_1125? 1'b1: 1'b0);
assign tmp_44_1_fu_882_p2 = (p_buffer_q1 + centre_buffer_1_wgtCent_value_q0);
assign tmp_44_2_fu_903_p2 = (p_buffer_q1 + reg_610);
assign tmp_5_cast_fu_649_p1 = $unsigned(tmp_5_fu_640_p4);
assign tmp_5_fu_640_p4 = {{data_points_in_addr0data_reg[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_6_cast_fu_671_p1 = $unsigned(b2_reg_510);
assign tmp_6_fu_927_p1 = $unsigned(i5_phi_fu_573_p4);
assign tmp_7_cast_fu_680_p1 = $unsigned(tmp_7_fu_675_p2);
assign tmp_7_fu_675_p2 = (tmp_5_cast_reg_1130 + tmp_6_cast_fu_671_p1);
assign tmp_8_fu_956_p2 = (count_reg_1302 == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_9_cast_fu_662_p1 = $unsigned(tmp_9_fu_653_p4);
assign tmp_9_fu_653_p4 = {{kernel_info_in_addr0data_reg[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_s_fu_916_p2 = (i5_phi_fu_573_p4 > k0data_reg? 1'b1: 1'b0);
assign total_distortion_2_fu_950_p2 = (centre_buffer_sum_sq_q0 + total_distortion_reg_557);
always @ (posedge ap_clk)
begin
    data_points_in_addr0vld_reg <= 1'b0;
    kernel_info_in_addr0vld_reg <= 1'b0;
    centres_out_addr0vld_reg <= 1'b0;
    distortion_out1vld_reg <= 1'b0;
    n0vld_reg <= 1'b0;
    k0vld_reg <= 1'b0;
    lim_reg_1125[0] <= 1'b0;
    tmp_5_cast_reg_1130[32:30] <= 3'b000;
    tmp_9_cast_reg_1135[32:30] <= 3'b000;
    tmp_27_reg_1245[63:32] <= 32'b00000000000000000000000000000000;
    tmp_6_reg_1274[63:32] <= 32'b00000000000000000000000000000000;
    master_portB_addr_reg_1346[31:30] <= 2'b00;
    tmp_24_reg_1356[31:30] <= 2'b00;
end



endmodule //combiner_top

