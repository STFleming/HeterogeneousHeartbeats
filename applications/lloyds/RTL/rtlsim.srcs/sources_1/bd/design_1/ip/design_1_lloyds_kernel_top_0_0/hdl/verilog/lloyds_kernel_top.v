// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lloyds_kernel_top,hls_ip_2013_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module lloyds_kernel_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        block_address,
        data_points_req_din,
        data_points_req_full_n,
        data_points_req_write,
        data_points_rsp_empty_n,
        data_points_rsp_read,
        data_points_address,
        data_points_datain,
        data_points_dataout,
        data_points_size,
        centres_in_req_din,
        centres_in_req_full_n,
        centres_in_req_write,
        centres_in_rsp_empty_n,
        centres_in_rsp_read,
        centres_in_address,
        centres_in_datain,
        centres_in_dataout,
        centres_in_size,
        output_r_req_din,
        output_r_req_full_n,
        output_r_req_write,
        output_r_rsp_empty_n,
        output_r_rsp_read,
        output_r_address,
        output_r_datain,
        output_r_dataout,
        output_r_size,
        n,
        k_V
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] block_address;
output   data_points_req_din;
input   data_points_req_full_n;
output   data_points_req_write;
input   data_points_rsp_empty_n;
output   data_points_rsp_read;
output  [31:0] data_points_address;
input  [31:0] data_points_datain;
output  [31:0] data_points_dataout;
output  [31:0] data_points_size;
output   centres_in_req_din;
input   centres_in_req_full_n;
output   centres_in_req_write;
input   centres_in_rsp_empty_n;
output   centres_in_rsp_read;
output  [31:0] centres_in_address;
input  [31:0] centres_in_datain;
output  [31:0] centres_in_dataout;
output  [31:0] centres_in_size;
output   output_r_req_din;
input   output_r_req_full_n;
output   output_r_req_write;
input   output_r_rsp_empty_n;
output   output_r_rsp_read;
output  [31:0] output_r_address;
input  [31:0] output_r_datain;
output  [31:0] output_r_dataout;
output  [31:0] output_r_size;
input  [31:0] n;
input  [7:0] k_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg   [2:0] ap_CS_fsm = 3'b000;
reg   [7:0] final_centre_index_V_reg_239;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it1;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it2;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it3;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it4;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it5;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it6;
reg   [7:0] ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it7;
reg   [7:0] p_s_reg_251;
reg   [31:0] sum_sq_out_reg_263;
reg   [31:0] min_dist_reg_275;
wire   [4:0] i_1_fu_352_p2;
reg   [4:0] i_1_reg_516;
wire   [63:0] tmp_fu_358_p1;
reg   [63:0] tmp_reg_521;
wire   [0:0] exitcond_fu_346_p2;
wire   [31:0] data_points_buffer_0_value_q0;
reg   [31:0] data_points_buffer_0_value_load_reg_542;
wire   [31:0] data_points_buffer_1_value_q0;
reg   [31:0] data_points_buffer_1_value_load_reg_547;
wire   [31:0] data_points_buffer_2_value_q0;
reg   [31:0] data_points_buffer_2_value_load_reg_552;
wire   [0:0] tmp_s_fu_365_p2;
reg   [0:0] tmp_s_reg_557;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_s_reg_557_pp0_it7;
wire   [7:0] ii_V_fu_370_p2;
reg   [7:0] ii_V_reg_561;
wire   [0:0] tmp_11_fu_383_p2;
reg   [0:0] tmp_11_reg_581;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_581_pp0_it7;
wire   [31:0] tmp_7_fu_388_p2;
reg   [31:0] tmp_7_reg_585;
wire   [31:0] tmp_2_1_fu_393_p2;
reg   [31:0] tmp_2_1_reg_590;
wire   [31:0] tmp_2_2_fu_398_p2;
reg   [31:0] tmp_2_2_reg_595;
wire   [63:0] lhs_V_fu_403_p1;
wire   [63:0] lhs_V_1_fu_412_p1;
wire   [63:0] lhs_V_2_fu_421_p1;
reg   [31:0] result_2_reg_618;
wire   [31:0] tmp3_fu_460_p2;
reg   [31:0] tmp3_reg_623;
wire   [7:0] p_024_0_s_fu_476_p3;
wire   [31:0] p_sum_sq_out_fu_484_p3;
wire   [31:0] p_min_dist_fu_492_p3;
reg   [3:0] data_points_buffer_0_value_address0;
reg    data_points_buffer_0_value_ce0;
reg    data_points_buffer_0_value_we0;
wire   [31:0] data_points_buffer_0_value_d0;
reg   [3:0] data_points_buffer_1_value_address0;
reg    data_points_buffer_1_value_ce0;
reg    data_points_buffer_1_value_we0;
wire   [31:0] data_points_buffer_1_value_d0;
reg   [3:0] data_points_buffer_2_value_address0;
reg    data_points_buffer_2_value_ce0;
reg    data_points_buffer_2_value_we0;
wire   [31:0] data_points_buffer_2_value_d0;
reg   [7:0] centres_buffer_0_value_address0;
reg    centres_buffer_0_value_ce0;
reg    centres_buffer_0_value_we0;
wire   [31:0] centres_buffer_0_value_d0;
wire   [31:0] centres_buffer_0_value_q0;
reg   [7:0] centres_buffer_1_value_address0;
reg    centres_buffer_1_value_ce0;
reg    centres_buffer_1_value_we0;
wire   [31:0] centres_buffer_1_value_d0;
wire   [31:0] centres_buffer_1_value_q0;
reg   [7:0] centres_buffer_2_value_address0;
reg    centres_buffer_2_value_ce0;
reg    centres_buffer_2_value_we0;
wire   [31:0] centres_buffer_2_value_d0;
wire   [31:0] centres_buffer_2_value_q0;
reg   [3:0] output_buffer_min_idx_V_address0;
reg    output_buffer_min_idx_V_ce0;
reg    output_buffer_min_idx_V_we0;
wire   [7:0] output_buffer_min_idx_V_d0;
wire   [7:0] output_buffer_min_idx_V_q0;
reg   [3:0] output_buffer_sum_sq_address0;
reg    output_buffer_sum_sq_ce0;
reg    output_buffer_sum_sq_we0;
wire   [31:0] output_buffer_sum_sq_d0;
wire   [31:0] output_buffer_sum_sq_q0;
wire    grp_load_centres_buffer_fu_309_ap_start;
wire    grp_load_centres_buffer_fu_309_ap_done;
wire    grp_load_centres_buffer_fu_309_ap_idle;
wire    grp_load_centres_buffer_fu_309_ap_ready;
wire    grp_load_centres_buffer_fu_309_bus_r_req_din;
wire    grp_load_centres_buffer_fu_309_bus_r_req_full_n;
wire    grp_load_centres_buffer_fu_309_bus_r_req_write;
wire    grp_load_centres_buffer_fu_309_bus_r_rsp_empty_n;
wire    grp_load_centres_buffer_fu_309_bus_r_rsp_read;
wire   [31:0] grp_load_centres_buffer_fu_309_bus_r_address;
wire   [31:0] grp_load_centres_buffer_fu_309_bus_r_datain;
wire   [31:0] grp_load_centres_buffer_fu_309_bus_r_dataout;
wire   [31:0] grp_load_centres_buffer_fu_309_bus_r_size;
wire   [7:0] grp_load_centres_buffer_fu_309_k_V;
wire   [7:0] grp_load_centres_buffer_fu_309_buffer_0_value_address0;
wire    grp_load_centres_buffer_fu_309_buffer_0_value_ce0;
wire    grp_load_centres_buffer_fu_309_buffer_0_value_we0;
wire   [31:0] grp_load_centres_buffer_fu_309_buffer_0_value_d0;
wire   [7:0] grp_load_centres_buffer_fu_309_buffer_1_value_address0;
wire    grp_load_centres_buffer_fu_309_buffer_1_value_ce0;
wire    grp_load_centres_buffer_fu_309_buffer_1_value_we0;
wire   [31:0] grp_load_centres_buffer_fu_309_buffer_1_value_d0;
wire   [7:0] grp_load_centres_buffer_fu_309_buffer_2_value_address0;
wire    grp_load_centres_buffer_fu_309_buffer_2_value_ce0;
wire    grp_load_centres_buffer_fu_309_buffer_2_value_we0;
wire   [31:0] grp_load_centres_buffer_fu_309_buffer_2_value_d0;
wire    grp_load_points_buffer_fu_323_ap_start;
wire    grp_load_points_buffer_fu_323_ap_done;
wire    grp_load_points_buffer_fu_323_ap_idle;
wire    grp_load_points_buffer_fu_323_ap_ready;
wire   [31:0] grp_load_points_buffer_fu_323_address;
wire    grp_load_points_buffer_fu_323_bus_r_req_din;
wire    grp_load_points_buffer_fu_323_bus_r_req_full_n;
wire    grp_load_points_buffer_fu_323_bus_r_req_write;
wire    grp_load_points_buffer_fu_323_bus_r_rsp_empty_n;
wire    grp_load_points_buffer_fu_323_bus_r_rsp_read;
wire   [31:0] grp_load_points_buffer_fu_323_bus_r_address;
wire   [31:0] grp_load_points_buffer_fu_323_bus_r_datain;
wire   [31:0] grp_load_points_buffer_fu_323_bus_r_dataout;
wire   [31:0] grp_load_points_buffer_fu_323_bus_r_size;
wire   [3:0] grp_load_points_buffer_fu_323_buffer_0_value_address0;
wire    grp_load_points_buffer_fu_323_buffer_0_value_ce0;
wire    grp_load_points_buffer_fu_323_buffer_0_value_we0;
wire   [31:0] grp_load_points_buffer_fu_323_buffer_0_value_d0;
wire   [3:0] grp_load_points_buffer_fu_323_buffer_1_value_address0;
wire    grp_load_points_buffer_fu_323_buffer_1_value_ce0;
wire    grp_load_points_buffer_fu_323_buffer_1_value_we0;
wire   [31:0] grp_load_points_buffer_fu_323_buffer_1_value_d0;
wire   [3:0] grp_load_points_buffer_fu_323_buffer_2_value_address0;
wire    grp_load_points_buffer_fu_323_buffer_2_value_ce0;
wire    grp_load_points_buffer_fu_323_buffer_2_value_we0;
wire   [31:0] grp_load_points_buffer_fu_323_buffer_2_value_d0;
wire    grp_store_output_buffer_fu_337_ap_start;
wire    grp_store_output_buffer_fu_337_ap_done;
wire    grp_store_output_buffer_fu_337_ap_idle;
wire    grp_store_output_buffer_fu_337_ap_ready;
wire   [3:0] grp_store_output_buffer_fu_337_buffer_min_idx_V_address0;
wire    grp_store_output_buffer_fu_337_buffer_min_idx_V_ce0;
wire   [7:0] grp_store_output_buffer_fu_337_buffer_min_idx_V_q0;
wire   [3:0] grp_store_output_buffer_fu_337_buffer_sum_sq_address0;
wire    grp_store_output_buffer_fu_337_buffer_sum_sq_ce0;
wire   [31:0] grp_store_output_buffer_fu_337_buffer_sum_sq_q0;
wire   [31:0] grp_store_output_buffer_fu_337_address;
wire    grp_store_output_buffer_fu_337_bus_r_req_din;
wire    grp_store_output_buffer_fu_337_bus_r_req_full_n;
wire    grp_store_output_buffer_fu_337_bus_r_req_write;
wire    grp_store_output_buffer_fu_337_bus_r_rsp_empty_n;
wire    grp_store_output_buffer_fu_337_bus_r_rsp_read;
wire   [31:0] grp_store_output_buffer_fu_337_bus_r_address;
wire   [31:0] grp_store_output_buffer_fu_337_bus_r_datain;
wire   [31:0] grp_store_output_buffer_fu_337_bus_r_dataout;
wire   [31:0] grp_store_output_buffer_fu_337_bus_r_size;
reg   [4:0] i_reg_228;
reg   [7:0] final_centre_index_V_phi_fu_243_p4;
reg   [7:0] p_014_2_reg_286;
reg   [31:0] sum_sq_out_2_reg_297;
reg    grp_load_centres_buffer_fu_309_ap_start_ap_start_reg = 1'b0;
reg    grp_load_points_buffer_fu_323_ap_start_ap_start_reg = 1'b0;
reg    grp_store_output_buffer_fu_337_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_3_fu_376_p1;
wire   [31:0] grp_fu_406_p0;
wire   [31:0] grp_fu_406_p1;
wire   [31:0] grp_fu_415_p0;
wire   [31:0] grp_fu_415_p1;
wire   [31:0] grp_fu_424_p0;
wire   [31:0] grp_fu_424_p1;
wire   [63:0] grp_fu_406_p2;
wire   [63:0] grp_fu_415_p2;
wire   [63:0] grp_fu_424_p2;
wire   [31:0] tmp3_fu_460_p0;
wire   [31:0] tmp3_fu_460_p1;
wire   [31:0] tmp_dist_fu_466_p0;
wire   [31:0] tmp_dist_fu_466_p1;
wire   [31:0] tmp_dist_fu_466_p2;
wire   [0:0] tmp_10_fu_470_p2;
wire    grp_fu_406_ce;
wire    grp_fu_415_ce;
wire    grp_fu_424_ce;
reg   [2:0] ap_NS_fsm;
reg    ap_sig_bdd_392;
reg    ap_sig_bdd_202;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_st2_fsm_1 = 3'b1;
parameter    ap_ST_st3_fsm_2 = 3'b10;
parameter    ap_ST_st4_fsm_3 = 3'b11;
parameter    ap_ST_pp0_stg0_fsm_4 = 3'b100;
parameter    ap_ST_st14_fsm_5 = 3'b101;
parameter    ap_ST_st15_fsm_6 = 3'b110;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_7FFFFFFF = 32'b1111111111111111111111111111111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_true = 1'b1;


lloyds_kernel_top_data_points_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
data_points_buffer_0_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( data_points_buffer_0_value_address0 ),
    .ce0( data_points_buffer_0_value_ce0 ),
    .we0( data_points_buffer_0_value_we0 ),
    .d0( data_points_buffer_0_value_d0 ),
    .q0( data_points_buffer_0_value_q0 )
);

lloyds_kernel_top_data_points_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
data_points_buffer_1_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( data_points_buffer_1_value_address0 ),
    .ce0( data_points_buffer_1_value_ce0 ),
    .we0( data_points_buffer_1_value_we0 ),
    .d0( data_points_buffer_1_value_d0 ),
    .q0( data_points_buffer_1_value_q0 )
);

lloyds_kernel_top_data_points_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
data_points_buffer_2_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( data_points_buffer_2_value_address0 ),
    .ce0( data_points_buffer_2_value_ce0 ),
    .we0( data_points_buffer_2_value_we0 ),
    .d0( data_points_buffer_2_value_d0 ),
    .q0( data_points_buffer_2_value_q0 )
);

lloyds_kernel_top_centres_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centres_buffer_0_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centres_buffer_0_value_address0 ),
    .ce0( centres_buffer_0_value_ce0 ),
    .we0( centres_buffer_0_value_we0 ),
    .d0( centres_buffer_0_value_d0 ),
    .q0( centres_buffer_0_value_q0 )
);

lloyds_kernel_top_centres_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centres_buffer_1_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centres_buffer_1_value_address0 ),
    .ce0( centres_buffer_1_value_ce0 ),
    .we0( centres_buffer_1_value_we0 ),
    .d0( centres_buffer_1_value_d0 ),
    .q0( centres_buffer_1_value_q0 )
);

lloyds_kernel_top_centres_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
centres_buffer_2_value_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( centres_buffer_2_value_address0 ),
    .ce0( centres_buffer_2_value_ce0 ),
    .we0( centres_buffer_2_value_we0 ),
    .d0( centres_buffer_2_value_d0 ),
    .q0( centres_buffer_2_value_q0 )
);

lloyds_kernel_top_output_buffer_min_idx_V #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
output_buffer_min_idx_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( output_buffer_min_idx_V_address0 ),
    .ce0( output_buffer_min_idx_V_ce0 ),
    .we0( output_buffer_min_idx_V_we0 ),
    .d0( output_buffer_min_idx_V_d0 ),
    .q0( output_buffer_min_idx_V_q0 )
);

lloyds_kernel_top_data_points_buffer_0_value #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
output_buffer_sum_sq_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( output_buffer_sum_sq_address0 ),
    .ce0( output_buffer_sum_sq_ce0 ),
    .we0( output_buffer_sum_sq_we0 ),
    .d0( output_buffer_sum_sq_d0 ),
    .q0( output_buffer_sum_sq_q0 )
);

load_centres_buffer grp_load_centres_buffer_fu_309(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_load_centres_buffer_fu_309_ap_start ),
    .ap_done( grp_load_centres_buffer_fu_309_ap_done ),
    .ap_idle( grp_load_centres_buffer_fu_309_ap_idle ),
    .ap_ready( grp_load_centres_buffer_fu_309_ap_ready ),
    .bus_r_req_din( grp_load_centres_buffer_fu_309_bus_r_req_din ),
    .bus_r_req_full_n( grp_load_centres_buffer_fu_309_bus_r_req_full_n ),
    .bus_r_req_write( grp_load_centres_buffer_fu_309_bus_r_req_write ),
    .bus_r_rsp_empty_n( grp_load_centres_buffer_fu_309_bus_r_rsp_empty_n ),
    .bus_r_rsp_read( grp_load_centres_buffer_fu_309_bus_r_rsp_read ),
    .bus_r_address( grp_load_centres_buffer_fu_309_bus_r_address ),
    .bus_r_datain( grp_load_centres_buffer_fu_309_bus_r_datain ),
    .bus_r_dataout( grp_load_centres_buffer_fu_309_bus_r_dataout ),
    .bus_r_size( grp_load_centres_buffer_fu_309_bus_r_size ),
    .k_V( grp_load_centres_buffer_fu_309_k_V ),
    .buffer_0_value_address0( grp_load_centres_buffer_fu_309_buffer_0_value_address0 ),
    .buffer_0_value_ce0( grp_load_centres_buffer_fu_309_buffer_0_value_ce0 ),
    .buffer_0_value_we0( grp_load_centres_buffer_fu_309_buffer_0_value_we0 ),
    .buffer_0_value_d0( grp_load_centres_buffer_fu_309_buffer_0_value_d0 ),
    .buffer_1_value_address0( grp_load_centres_buffer_fu_309_buffer_1_value_address0 ),
    .buffer_1_value_ce0( grp_load_centres_buffer_fu_309_buffer_1_value_ce0 ),
    .buffer_1_value_we0( grp_load_centres_buffer_fu_309_buffer_1_value_we0 ),
    .buffer_1_value_d0( grp_load_centres_buffer_fu_309_buffer_1_value_d0 ),
    .buffer_2_value_address0( grp_load_centres_buffer_fu_309_buffer_2_value_address0 ),
    .buffer_2_value_ce0( grp_load_centres_buffer_fu_309_buffer_2_value_ce0 ),
    .buffer_2_value_we0( grp_load_centres_buffer_fu_309_buffer_2_value_we0 ),
    .buffer_2_value_d0( grp_load_centres_buffer_fu_309_buffer_2_value_d0 )
);

load_points_buffer grp_load_points_buffer_fu_323(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_load_points_buffer_fu_323_ap_start ),
    .ap_done( grp_load_points_buffer_fu_323_ap_done ),
    .ap_idle( grp_load_points_buffer_fu_323_ap_idle ),
    .ap_ready( grp_load_points_buffer_fu_323_ap_ready ),
    .address( grp_load_points_buffer_fu_323_address ),
    .bus_r_req_din( grp_load_points_buffer_fu_323_bus_r_req_din ),
    .bus_r_req_full_n( grp_load_points_buffer_fu_323_bus_r_req_full_n ),
    .bus_r_req_write( grp_load_points_buffer_fu_323_bus_r_req_write ),
    .bus_r_rsp_empty_n( grp_load_points_buffer_fu_323_bus_r_rsp_empty_n ),
    .bus_r_rsp_read( grp_load_points_buffer_fu_323_bus_r_rsp_read ),
    .bus_r_address( grp_load_points_buffer_fu_323_bus_r_address ),
    .bus_r_datain( grp_load_points_buffer_fu_323_bus_r_datain ),
    .bus_r_dataout( grp_load_points_buffer_fu_323_bus_r_dataout ),
    .bus_r_size( grp_load_points_buffer_fu_323_bus_r_size ),
    .buffer_0_value_address0( grp_load_points_buffer_fu_323_buffer_0_value_address0 ),
    .buffer_0_value_ce0( grp_load_points_buffer_fu_323_buffer_0_value_ce0 ),
    .buffer_0_value_we0( grp_load_points_buffer_fu_323_buffer_0_value_we0 ),
    .buffer_0_value_d0( grp_load_points_buffer_fu_323_buffer_0_value_d0 ),
    .buffer_1_value_address0( grp_load_points_buffer_fu_323_buffer_1_value_address0 ),
    .buffer_1_value_ce0( grp_load_points_buffer_fu_323_buffer_1_value_ce0 ),
    .buffer_1_value_we0( grp_load_points_buffer_fu_323_buffer_1_value_we0 ),
    .buffer_1_value_d0( grp_load_points_buffer_fu_323_buffer_1_value_d0 ),
    .buffer_2_value_address0( grp_load_points_buffer_fu_323_buffer_2_value_address0 ),
    .buffer_2_value_ce0( grp_load_points_buffer_fu_323_buffer_2_value_ce0 ),
    .buffer_2_value_we0( grp_load_points_buffer_fu_323_buffer_2_value_we0 ),
    .buffer_2_value_d0( grp_load_points_buffer_fu_323_buffer_2_value_d0 )
);

store_output_buffer grp_store_output_buffer_fu_337(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_store_output_buffer_fu_337_ap_start ),
    .ap_done( grp_store_output_buffer_fu_337_ap_done ),
    .ap_idle( grp_store_output_buffer_fu_337_ap_idle ),
    .ap_ready( grp_store_output_buffer_fu_337_ap_ready ),
    .buffer_min_idx_V_address0( grp_store_output_buffer_fu_337_buffer_min_idx_V_address0 ),
    .buffer_min_idx_V_ce0( grp_store_output_buffer_fu_337_buffer_min_idx_V_ce0 ),
    .buffer_min_idx_V_q0( grp_store_output_buffer_fu_337_buffer_min_idx_V_q0 ),
    .buffer_sum_sq_address0( grp_store_output_buffer_fu_337_buffer_sum_sq_address0 ),
    .buffer_sum_sq_ce0( grp_store_output_buffer_fu_337_buffer_sum_sq_ce0 ),
    .buffer_sum_sq_q0( grp_store_output_buffer_fu_337_buffer_sum_sq_q0 ),
    .address( grp_store_output_buffer_fu_337_address ),
    .bus_r_req_din( grp_store_output_buffer_fu_337_bus_r_req_din ),
    .bus_r_req_full_n( grp_store_output_buffer_fu_337_bus_r_req_full_n ),
    .bus_r_req_write( grp_store_output_buffer_fu_337_bus_r_req_write ),
    .bus_r_rsp_empty_n( grp_store_output_buffer_fu_337_bus_r_rsp_empty_n ),
    .bus_r_rsp_read( grp_store_output_buffer_fu_337_bus_r_rsp_read ),
    .bus_r_address( grp_store_output_buffer_fu_337_bus_r_address ),
    .bus_r_datain( grp_store_output_buffer_fu_337_bus_r_datain ),
    .bus_r_dataout( grp_store_output_buffer_fu_337_bus_r_dataout ),
    .bus_r_size( grp_store_output_buffer_fu_337_bus_r_size )
);

lloyds_kernel_top_mul_32s_32s_64_6 #(
    .ID( 18 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
lloyds_kernel_top_mul_32s_32s_64_6_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_406_p0 ),
    .din1( grp_fu_406_p1 ),
    .ce( grp_fu_406_ce ),
    .dout( grp_fu_406_p2 )
);

lloyds_kernel_top_mul_32s_32s_64_6 #(
    .ID( 19 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
lloyds_kernel_top_mul_32s_32s_64_6_U19(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_415_p0 ),
    .din1( grp_fu_415_p1 ),
    .ce( grp_fu_415_ce ),
    .dout( grp_fu_415_p2 )
);

lloyds_kernel_top_mul_32s_32s_64_6 #(
    .ID( 20 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
lloyds_kernel_top_mul_32s_32s_64_6_U20(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_424_p0 ),
    .din1( grp_fu_424_p1 ),
    .ce( grp_fu_424_ce ),
    .dout( grp_fu_424_p2 )
);

lloyds_kernel_top_add_32ns_32ns_32_1 #(
    .ID( 21 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lloyds_kernel_top_add_32ns_32ns_32_1_U21(
    .din0( tmp3_fu_460_p0 ),
    .din1( tmp3_fu_460_p1 ),
    .dout( tmp3_fu_460_p2 )
);

lloyds_kernel_top_add_32ns_32ns_32_1 #(
    .ID( 22 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lloyds_kernel_top_add_32ns_32ns_32_1_U22(
    .din0( tmp_dist_fu_466_p0 ),
    .din1( tmp_dist_fu_466_p1 ),
    .dout( tmp_dist_fu_466_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (~(ap_const_lv1_0 == tmp_s_fu_365_p2) | ((ap_const_lv1_0 == tmp_s_fu_365_p2) & ~(ap_const_lv1_0 == tmp_11_fu_383_p2))))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
        end
    end
end

/// grp_load_centres_buffer_fu_309_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_load_centres_buffer_fu_309_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_load_centres_buffer_fu_309_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            grp_load_centres_buffer_fu_309_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_load_centres_buffer_fu_309_ap_ready)) begin
            grp_load_centres_buffer_fu_309_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_load_points_buffer_fu_323_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_load_points_buffer_fu_323_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_load_points_buffer_fu_323_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            grp_load_points_buffer_fu_323_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_load_points_buffer_fu_323_ap_ready)) begin
            grp_load_points_buffer_fu_323_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_store_output_buffer_fu_337_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_store_output_buffer_fu_337_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_store_output_buffer_fu_337_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(exitcond_fu_346_p2 == ap_const_lv1_0))) begin
            grp_store_output_buffer_fu_337_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_store_output_buffer_fu_337_ap_ready)) begin
            grp_store_output_buffer_fu_337_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == tmp_s_reg_557) & (ap_const_lv1_0 == tmp_11_reg_581))) begin
        final_centre_index_V_reg_239 <= ii_V_reg_561;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        final_centre_index_V_reg_239 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        i_reg_228 <= i_1_reg_516;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~((ap_const_logic_0 == grp_load_points_buffer_fu_323_ap_done) | (ap_const_logic_0 == grp_load_centres_buffer_fu_309_ap_done)))) begin
        i_reg_228 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_11_reg_581_pp0_it7))) begin
        min_dist_reg_275 <= p_min_dist_fu_492_p3;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        min_dist_reg_275 <= ap_const_lv32_7FFFFFFF;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_202) begin
        if (ap_sig_bdd_392) begin
            p_014_2_reg_286 <= p_024_0_s_fu_476_p3;
        end else if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it7)) begin
            p_014_2_reg_286 <= p_s_reg_251;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_11_reg_581_pp0_it7))) begin
        p_s_reg_251 <= p_024_0_s_fu_476_p3;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        p_s_reg_251 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_202) begin
        if (ap_sig_bdd_392) begin
            sum_sq_out_2_reg_297 <= p_sum_sq_out_fu_484_p3;
        end else if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it7)) begin
            sum_sq_out_2_reg_297 <= sum_sq_out_reg_263;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_11_reg_581_pp0_it7))) begin
        sum_sq_out_reg_263 <= p_sum_sq_out_fu_484_p3;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        sum_sq_out_reg_263 <= ap_const_lv32_7FFFFFFF;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm)) begin
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it1 <= final_centre_index_V_reg_239;
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it2 <= ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it1;
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it3 <= ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it2;
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it4 <= ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it3;
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it5 <= ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it4;
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it6 <= ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it5;
        ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it7 <= ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it6;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it1 <= tmp_11_reg_581;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it2 <= ap_reg_ppstg_tmp_11_reg_581_pp0_it1;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it3 <= ap_reg_ppstg_tmp_11_reg_581_pp0_it2;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it4 <= ap_reg_ppstg_tmp_11_reg_581_pp0_it3;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it5 <= ap_reg_ppstg_tmp_11_reg_581_pp0_it4;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it6 <= ap_reg_ppstg_tmp_11_reg_581_pp0_it5;
        ap_reg_ppstg_tmp_11_reg_581_pp0_it7 <= ap_reg_ppstg_tmp_11_reg_581_pp0_it6;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it1 <= tmp_s_reg_557;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it2 <= ap_reg_ppstg_tmp_s_reg_557_pp0_it1;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it3 <= ap_reg_ppstg_tmp_s_reg_557_pp0_it2;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it4 <= ap_reg_ppstg_tmp_s_reg_557_pp0_it3;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it5 <= ap_reg_ppstg_tmp_s_reg_557_pp0_it4;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it6 <= ap_reg_ppstg_tmp_s_reg_557_pp0_it5;
        ap_reg_ppstg_tmp_s_reg_557_pp0_it7 <= ap_reg_ppstg_tmp_s_reg_557_pp0_it6;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        data_points_buffer_0_value_load_reg_542 <= data_points_buffer_0_value_q0;
        data_points_buffer_1_value_load_reg_547 <= data_points_buffer_1_value_q0;
        data_points_buffer_2_value_load_reg_552 <= data_points_buffer_2_value_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        i_1_reg_516 <= i_1_fu_352_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        ii_V_reg_561 <= ii_V_fu_370_p2;
        tmp_s_reg_557 <= tmp_s_fu_365_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it6))) begin
        result_2_reg_618 <= {{grp_fu_424_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
        tmp3_reg_623 <= tmp3_fu_460_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == tmp_s_fu_365_p2))) begin
        tmp_11_reg_581 <= tmp_11_fu_383_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == tmp_s_reg_557))) begin
        tmp_2_1_reg_590 <= tmp_2_1_fu_393_p2;
        tmp_2_2_reg_595 <= tmp_2_2_fu_398_p2;
        tmp_7_reg_585 <= tmp_7_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (exitcond_fu_346_p2 == ap_const_lv1_0))) begin
        tmp_reg_521[0] <= tmp_fu_358_p1[0];
tmp_reg_521[1] <= tmp_fu_358_p1[1];
tmp_reg_521[2] <= tmp_fu_358_p1[2];
tmp_reg_521[3] <= tmp_fu_358_p1[3];
tmp_reg_521[4] <= tmp_fu_358_p1[4];
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or grp_store_output_buffer_fu_337_ap_done)
begin
    if (((ap_ST_st15_fsm_6 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_store_output_buffer_fu_337_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or grp_store_output_buffer_fu_337_ap_done)
begin
    if (((ap_ST_st15_fsm_6 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_store_output_buffer_fu_337_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// centres_buffer_0_value_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or grp_load_centres_buffer_fu_309_buffer_0_value_address0 or tmp_3_fu_376_p1)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        centres_buffer_0_value_address0 = tmp_3_fu_376_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_0_value_address0 = grp_load_centres_buffer_fu_309_buffer_0_value_address0;
    end else begin
        centres_buffer_0_value_address0 = 'bx;
    end
end

/// centres_buffer_0_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or grp_load_centres_buffer_fu_309_buffer_0_value_ce0)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        centres_buffer_0_value_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_0_value_ce0 = grp_load_centres_buffer_fu_309_buffer_0_value_ce0;
    end else begin
        centres_buffer_0_value_ce0 = ap_const_logic_0;
    end
end

/// centres_buffer_0_value_we0 assign process. ///
always @ (ap_CS_fsm or grp_load_centres_buffer_fu_309_buffer_0_value_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_0_value_we0 = grp_load_centres_buffer_fu_309_buffer_0_value_we0;
    end else begin
        centres_buffer_0_value_we0 = ap_const_logic_0;
    end
end

/// centres_buffer_1_value_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or grp_load_centres_buffer_fu_309_buffer_1_value_address0 or tmp_3_fu_376_p1)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        centres_buffer_1_value_address0 = tmp_3_fu_376_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_1_value_address0 = grp_load_centres_buffer_fu_309_buffer_1_value_address0;
    end else begin
        centres_buffer_1_value_address0 = 'bx;
    end
end

/// centres_buffer_1_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or grp_load_centres_buffer_fu_309_buffer_1_value_ce0)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        centres_buffer_1_value_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_1_value_ce0 = grp_load_centres_buffer_fu_309_buffer_1_value_ce0;
    end else begin
        centres_buffer_1_value_ce0 = ap_const_logic_0;
    end
end

/// centres_buffer_1_value_we0 assign process. ///
always @ (ap_CS_fsm or grp_load_centres_buffer_fu_309_buffer_1_value_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_1_value_we0 = grp_load_centres_buffer_fu_309_buffer_1_value_we0;
    end else begin
        centres_buffer_1_value_we0 = ap_const_logic_0;
    end
end

/// centres_buffer_2_value_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or grp_load_centres_buffer_fu_309_buffer_2_value_address0 or tmp_3_fu_376_p1)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        centres_buffer_2_value_address0 = tmp_3_fu_376_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_2_value_address0 = grp_load_centres_buffer_fu_309_buffer_2_value_address0;
    end else begin
        centres_buffer_2_value_address0 = 'bx;
    end
end

/// centres_buffer_2_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or grp_load_centres_buffer_fu_309_buffer_2_value_ce0)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        centres_buffer_2_value_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_2_value_ce0 = grp_load_centres_buffer_fu_309_buffer_2_value_ce0;
    end else begin
        centres_buffer_2_value_ce0 = ap_const_logic_0;
    end
end

/// centres_buffer_2_value_we0 assign process. ///
always @ (ap_CS_fsm or grp_load_centres_buffer_fu_309_buffer_2_value_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        centres_buffer_2_value_we0 = grp_load_centres_buffer_fu_309_buffer_2_value_we0;
    end else begin
        centres_buffer_2_value_we0 = ap_const_logic_0;
    end
end

/// data_points_buffer_0_value_address0 assign process. ///
always @ (ap_CS_fsm or tmp_fu_358_p1 or grp_load_points_buffer_fu_323_buffer_0_value_address0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_points_buffer_0_value_address0 = tmp_fu_358_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_0_value_address0 = grp_load_points_buffer_fu_323_buffer_0_value_address0;
    end else begin
        data_points_buffer_0_value_address0 = 'bx;
    end
end

/// data_points_buffer_0_value_ce0 assign process. ///
always @ (ap_CS_fsm or grp_load_points_buffer_fu_323_buffer_0_value_ce0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_points_buffer_0_value_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_0_value_ce0 = grp_load_points_buffer_fu_323_buffer_0_value_ce0;
    end else begin
        data_points_buffer_0_value_ce0 = ap_const_logic_0;
    end
end

/// data_points_buffer_0_value_we0 assign process. ///
always @ (ap_CS_fsm or grp_load_points_buffer_fu_323_buffer_0_value_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_0_value_we0 = grp_load_points_buffer_fu_323_buffer_0_value_we0;
    end else begin
        data_points_buffer_0_value_we0 = ap_const_logic_0;
    end
end

/// data_points_buffer_1_value_address0 assign process. ///
always @ (ap_CS_fsm or tmp_fu_358_p1 or grp_load_points_buffer_fu_323_buffer_1_value_address0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_points_buffer_1_value_address0 = tmp_fu_358_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_1_value_address0 = grp_load_points_buffer_fu_323_buffer_1_value_address0;
    end else begin
        data_points_buffer_1_value_address0 = 'bx;
    end
end

/// data_points_buffer_1_value_ce0 assign process. ///
always @ (ap_CS_fsm or grp_load_points_buffer_fu_323_buffer_1_value_ce0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_points_buffer_1_value_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_1_value_ce0 = grp_load_points_buffer_fu_323_buffer_1_value_ce0;
    end else begin
        data_points_buffer_1_value_ce0 = ap_const_logic_0;
    end
end

/// data_points_buffer_1_value_we0 assign process. ///
always @ (ap_CS_fsm or grp_load_points_buffer_fu_323_buffer_1_value_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_1_value_we0 = grp_load_points_buffer_fu_323_buffer_1_value_we0;
    end else begin
        data_points_buffer_1_value_we0 = ap_const_logic_0;
    end
end

/// data_points_buffer_2_value_address0 assign process. ///
always @ (ap_CS_fsm or tmp_fu_358_p1 or grp_load_points_buffer_fu_323_buffer_2_value_address0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_points_buffer_2_value_address0 = tmp_fu_358_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_2_value_address0 = grp_load_points_buffer_fu_323_buffer_2_value_address0;
    end else begin
        data_points_buffer_2_value_address0 = 'bx;
    end
end

/// data_points_buffer_2_value_ce0 assign process. ///
always @ (ap_CS_fsm or grp_load_points_buffer_fu_323_buffer_2_value_ce0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_points_buffer_2_value_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_2_value_ce0 = grp_load_points_buffer_fu_323_buffer_2_value_ce0;
    end else begin
        data_points_buffer_2_value_ce0 = ap_const_logic_0;
    end
end

/// data_points_buffer_2_value_we0 assign process. ///
always @ (ap_CS_fsm or grp_load_points_buffer_fu_323_buffer_2_value_we0)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_points_buffer_2_value_we0 = grp_load_points_buffer_fu_323_buffer_2_value_we0;
    end else begin
        data_points_buffer_2_value_we0 = ap_const_logic_0;
    end
end

/// final_centre_index_V_phi_fu_243_p4 assign process. ///
always @ (ap_CS_fsm or final_centre_index_V_reg_239 or ap_reg_ppiten_pp0_it1 or tmp_s_reg_557 or ii_V_reg_561 or tmp_11_reg_581)
begin
    if (((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == tmp_s_reg_557) & (ap_const_lv1_0 == tmp_11_reg_581))) begin
        final_centre_index_V_phi_fu_243_p4 = ii_V_reg_561;
    end else begin
        final_centre_index_V_phi_fu_243_p4 = final_centre_index_V_reg_239;
    end
end

/// output_buffer_min_idx_V_address0 assign process. ///
always @ (ap_CS_fsm or tmp_reg_521 or grp_store_output_buffer_fu_337_buffer_min_idx_V_address0)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        output_buffer_min_idx_V_address0 = tmp_reg_521;
    end else if ((ap_ST_st15_fsm_6 == ap_CS_fsm)) begin
        output_buffer_min_idx_V_address0 = grp_store_output_buffer_fu_337_buffer_min_idx_V_address0;
    end else begin
        output_buffer_min_idx_V_address0 = 'bx;
    end
end

/// output_buffer_min_idx_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_store_output_buffer_fu_337_buffer_min_idx_V_ce0)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        output_buffer_min_idx_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st15_fsm_6 == ap_CS_fsm)) begin
        output_buffer_min_idx_V_ce0 = grp_store_output_buffer_fu_337_buffer_min_idx_V_ce0;
    end else begin
        output_buffer_min_idx_V_ce0 = ap_const_logic_0;
    end
end

/// output_buffer_min_idx_V_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        output_buffer_min_idx_V_we0 = ap_const_logic_1;
    end else begin
        output_buffer_min_idx_V_we0 = ap_const_logic_0;
    end
end

/// output_buffer_sum_sq_address0 assign process. ///
always @ (ap_CS_fsm or tmp_reg_521 or grp_store_output_buffer_fu_337_buffer_sum_sq_address0)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        output_buffer_sum_sq_address0 = tmp_reg_521;
    end else if ((ap_ST_st15_fsm_6 == ap_CS_fsm)) begin
        output_buffer_sum_sq_address0 = grp_store_output_buffer_fu_337_buffer_sum_sq_address0;
    end else begin
        output_buffer_sum_sq_address0 = 'bx;
    end
end

/// output_buffer_sum_sq_ce0 assign process. ///
always @ (ap_CS_fsm or grp_store_output_buffer_fu_337_buffer_sum_sq_ce0)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        output_buffer_sum_sq_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st15_fsm_6 == ap_CS_fsm)) begin
        output_buffer_sum_sq_ce0 = grp_store_output_buffer_fu_337_buffer_sum_sq_ce0;
    end else begin
        output_buffer_sum_sq_ce0 = ap_const_logic_0;
    end
end

/// output_buffer_sum_sq_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st14_fsm_5 == ap_CS_fsm)) begin
        output_buffer_sum_sq_we0 = ap_const_logic_1;
    end else begin
        output_buffer_sum_sq_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp0_it8 or exitcond_fu_346_p2 or grp_load_centres_buffer_fu_309_ap_done or grp_load_points_buffer_fu_323_ap_done or grp_store_output_buffer_fu_337_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~((ap_const_logic_0 == grp_load_points_buffer_fu_323_ap_done) | (ap_const_logic_0 == grp_load_centres_buffer_fu_309_ap_done))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st3_fsm_2 : 
            if (~(exitcond_fu_346_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st15_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
        ap_ST_pp0_stg0_fsm_4 : 
            if (~((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it7))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_5;
            end
        ap_ST_st14_fsm_5 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st15_fsm_6 : 
            if (~(ap_const_logic_0 == grp_store_output_buffer_fu_337_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_6;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_202 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it8)
begin
    ap_sig_bdd_202 = ((ap_ST_pp0_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it8));
end

/// ap_sig_bdd_392 assign process. ///
always @ (ap_reg_ppstg_tmp_s_reg_557_pp0_it7 or ap_reg_ppstg_tmp_11_reg_581_pp0_it7)
begin
    ap_sig_bdd_392 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_s_reg_557_pp0_it7) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_11_reg_581_pp0_it7));
end
assign centres_buffer_0_value_d0 = grp_load_centres_buffer_fu_309_buffer_0_value_d0;
assign centres_buffer_1_value_d0 = grp_load_centres_buffer_fu_309_buffer_1_value_d0;
assign centres_buffer_2_value_d0 = grp_load_centres_buffer_fu_309_buffer_2_value_d0;
assign centres_in_address = grp_load_centres_buffer_fu_309_bus_r_address;
assign centres_in_dataout = grp_load_centres_buffer_fu_309_bus_r_dataout;
assign centres_in_req_din = grp_load_centres_buffer_fu_309_bus_r_req_din;
assign centres_in_req_write = grp_load_centres_buffer_fu_309_bus_r_req_write;
assign centres_in_rsp_read = grp_load_centres_buffer_fu_309_bus_r_rsp_read;
assign centres_in_size = grp_load_centres_buffer_fu_309_bus_r_size;
assign data_points_address = grp_load_points_buffer_fu_323_bus_r_address;
assign data_points_buffer_0_value_d0 = grp_load_points_buffer_fu_323_buffer_0_value_d0;
assign data_points_buffer_1_value_d0 = grp_load_points_buffer_fu_323_buffer_1_value_d0;
assign data_points_buffer_2_value_d0 = grp_load_points_buffer_fu_323_buffer_2_value_d0;
assign data_points_dataout = grp_load_points_buffer_fu_323_bus_r_dataout;
assign data_points_req_din = grp_load_points_buffer_fu_323_bus_r_req_din;
assign data_points_req_write = grp_load_points_buffer_fu_323_bus_r_req_write;
assign data_points_rsp_read = grp_load_points_buffer_fu_323_bus_r_rsp_read;
assign data_points_size = grp_load_points_buffer_fu_323_bus_r_size;
assign exitcond_fu_346_p2 = (i_reg_228 == ap_const_lv5_10? 1'b1: 1'b0);
assign grp_fu_406_ce = ap_const_logic_1;
assign grp_fu_406_p0 = lhs_V_fu_403_p1;
assign grp_fu_406_p1 = lhs_V_fu_403_p1;
assign grp_fu_415_ce = ap_const_logic_1;
assign grp_fu_415_p0 = lhs_V_1_fu_412_p1;
assign grp_fu_415_p1 = lhs_V_1_fu_412_p1;
assign grp_fu_424_ce = ap_const_logic_1;
assign grp_fu_424_p0 = lhs_V_2_fu_421_p1;
assign grp_fu_424_p1 = lhs_V_2_fu_421_p1;
assign grp_load_centres_buffer_fu_309_ap_start = grp_load_centres_buffer_fu_309_ap_start_ap_start_reg;
assign grp_load_centres_buffer_fu_309_bus_r_datain = centres_in_datain;
assign grp_load_centres_buffer_fu_309_bus_r_req_full_n = centres_in_req_full_n;
assign grp_load_centres_buffer_fu_309_bus_r_rsp_empty_n = centres_in_rsp_empty_n;
assign grp_load_centres_buffer_fu_309_k_V = k_V;
assign grp_load_points_buffer_fu_323_address = block_address;
assign grp_load_points_buffer_fu_323_ap_start = grp_load_points_buffer_fu_323_ap_start_ap_start_reg;
assign grp_load_points_buffer_fu_323_bus_r_datain = data_points_datain;
assign grp_load_points_buffer_fu_323_bus_r_req_full_n = data_points_req_full_n;
assign grp_load_points_buffer_fu_323_bus_r_rsp_empty_n = data_points_rsp_empty_n;
assign grp_store_output_buffer_fu_337_address = block_address;
assign grp_store_output_buffer_fu_337_ap_start = grp_store_output_buffer_fu_337_ap_start_ap_start_reg;
assign grp_store_output_buffer_fu_337_buffer_min_idx_V_q0 = output_buffer_min_idx_V_q0;
assign grp_store_output_buffer_fu_337_buffer_sum_sq_q0 = output_buffer_sum_sq_q0;
assign grp_store_output_buffer_fu_337_bus_r_datain = output_r_datain;
assign grp_store_output_buffer_fu_337_bus_r_req_full_n = output_r_req_full_n;
assign grp_store_output_buffer_fu_337_bus_r_rsp_empty_n = output_r_rsp_empty_n;
assign i_1_fu_352_p2 = (i_reg_228 + ap_const_lv5_1);
assign ii_V_fu_370_p2 = (final_centre_index_V_phi_fu_243_p4 + ap_const_lv8_1);
assign lhs_V_1_fu_412_p1 = $signed(tmp_2_1_reg_590);
assign lhs_V_2_fu_421_p1 = $signed(tmp_2_2_reg_595);
assign lhs_V_fu_403_p1 = $signed(tmp_7_reg_585);
assign output_buffer_min_idx_V_d0 = p_014_2_reg_286;
assign output_buffer_sum_sq_d0 = sum_sq_out_2_reg_297;
assign output_r_address = grp_store_output_buffer_fu_337_bus_r_address;
assign output_r_dataout = grp_store_output_buffer_fu_337_bus_r_dataout;
assign output_r_req_din = grp_store_output_buffer_fu_337_bus_r_req_din;
assign output_r_req_write = grp_store_output_buffer_fu_337_bus_r_req_write;
assign output_r_rsp_read = grp_store_output_buffer_fu_337_bus_r_rsp_read;
assign output_r_size = grp_store_output_buffer_fu_337_bus_r_size;
assign p_024_0_s_fu_476_p3 = ((tmp_10_fu_470_p2)? ap_reg_ppstg_final_centre_index_V_reg_239_pp0_it7: p_s_reg_251);
assign p_min_dist_fu_492_p3 = ((tmp_10_fu_470_p2)? tmp_dist_fu_466_p2: min_dist_reg_275);
assign p_sum_sq_out_fu_484_p3 = ((tmp_10_fu_470_p2)? tmp_dist_fu_466_p2: sum_sq_out_reg_263);
assign tmp3_fu_460_p0 = {{grp_fu_415_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
assign tmp3_fu_460_p1 = {{grp_fu_406_p2[ap_const_lv32_25 : ap_const_lv32_6]}};
assign tmp_10_fu_470_p2 = ($signed(tmp_dist_fu_466_p2) < $signed(min_dist_reg_275)? 1'b1: 1'b0);
assign tmp_11_fu_383_p2 = (final_centre_index_V_phi_fu_243_p4 == k_V? 1'b1: 1'b0);
assign tmp_2_1_fu_393_p2 = (centres_buffer_1_value_q0 - data_points_buffer_1_value_load_reg_547);
assign tmp_2_2_fu_398_p2 = (centres_buffer_2_value_q0 - data_points_buffer_2_value_load_reg_552);
assign tmp_3_fu_376_p1 = $unsigned(final_centre_index_V_phi_fu_243_p4);
assign tmp_7_fu_388_p2 = (centres_buffer_0_value_q0 - data_points_buffer_0_value_load_reg_542);
assign tmp_dist_fu_466_p0 = result_2_reg_618;
assign tmp_dist_fu_466_p1 = tmp3_reg_623;
assign tmp_fu_358_p1 = $unsigned(i_reg_228);
assign tmp_s_fu_365_p2 = (final_centre_index_V_phi_fu_243_p4 > k_V? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    tmp_reg_521[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end



endmodule //lloyds_kernel_top

