// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_centres_buffer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bus_r_req_din,
        bus_r_req_full_n,
        bus_r_req_write,
        bus_r_rsp_empty_n,
        bus_r_rsp_read,
        bus_r_address,
        bus_r_datain,
        bus_r_dataout,
        bus_r_size,
        k_V,
        buffer_0_value_address0,
        buffer_0_value_ce0,
        buffer_0_value_we0,
        buffer_0_value_d0,
        buffer_1_value_address0,
        buffer_1_value_ce0,
        buffer_1_value_we0,
        buffer_1_value_d0,
        buffer_2_value_address0,
        buffer_2_value_ce0,
        buffer_2_value_we0,
        buffer_2_value_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   bus_r_req_din;
input   bus_r_req_full_n;
output   bus_r_req_write;
input   bus_r_rsp_empty_n;
output   bus_r_rsp_read;
output  [31:0] bus_r_address;
input  [31:0] bus_r_datain;
output  [31:0] bus_r_dataout;
output  [31:0] bus_r_size;
input  [7:0] k_V;
output  [7:0] buffer_0_value_address0;
output   buffer_0_value_ce0;
output   buffer_0_value_we0;
output  [31:0] buffer_0_value_d0;
output  [7:0] buffer_1_value_address0;
output   buffer_1_value_ce0;
output   buffer_1_value_we0;
output  [31:0] buffer_1_value_d0;
output  [7:0] buffer_2_value_address0;
output   buffer_2_value_ce0;
output   buffer_2_value_we0;
output  [31:0] buffer_2_value_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bus_r_req_write;
reg bus_r_rsp_read;
reg buffer_0_value_ce0;
reg buffer_0_value_we0;
reg buffer_1_value_ce0;
reg buffer_1_value_we0;
reg buffer_2_value_ce0;
reg buffer_2_value_we0;
reg   [2:0] ap_CS_fsm = 3'b000;
reg   [29:0] indvar_reg_172;
reg   [29:0] ap_reg_ppstg_indvar_reg_172_pp0_it1;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg   [0:0] exitcond3_reg_353;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_353_pp0_it5;
reg    ap_sig_bdd_78;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg   [29:0] ap_reg_ppstg_indvar_reg_172_pp0_it2;
reg   [29:0] ap_reg_ppstg_indvar_reg_172_pp0_it3;
reg   [29:0] ap_reg_ppstg_indvar_reg_172_pp0_it4;
reg   [29:0] ap_reg_ppstg_indvar_reg_172_pp0_it5;
reg   [29:0] ap_reg_ppstg_indvar_reg_172_pp0_it6;
reg   [7:0] t_V_reg_184;
reg   [7:0] ap_reg_ppstg_t_V_reg_184_pp1_it1;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [29:0] tmp_2_add_i32_shr_fu_237_p1;
reg   [29:0] tmp_2_add_i32_shr_reg_343;
wire   [31:0] tmp_2_add_i32_shr_cast_fu_241_p1;
reg   [31:0] tmp_2_add_i32_shr_cast_reg_348;
wire   [0:0] exitcond3_fu_245_p2;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_353_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_353_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_353_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_353_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_353_pp0_it6;
wire   [29:0] indvar_next_fu_250_p2;
reg   [29:0] indvar_next_reg_357;
wire   [0:0] isIter0_fu_256_p2;
reg   [0:0] isIter0_reg_362;
reg   [31:0] bus_read_reg_366;
wire   [0:0] tmp_3_fu_267_p2;
reg   [0:0] tmp_3_reg_371;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_371_pp1_it1;
wire   [7:0] i_V_fu_272_p2;
reg   [7:0] i_V_reg_375;
wire   [10:0] tmp_5_fu_294_p2;
reg   [10:0] tmp_5_reg_380;
wire   [0:0] tmp_6_fu_305_p2;
reg   [0:0] tmp_6_reg_391;
wire   [31:0] int_buffer_q0;
reg   [31:0] int_buffer_load_reg_395;
reg   [31:0] int_buffer_load_1_reg_410;
wire   [31:0] int_buffer_q1;
reg   [31:0] int_buffer_load_2_reg_415;
reg   [9:0] int_buffer_address0;
reg    int_buffer_ce0;
reg    int_buffer_we0;
wire   [31:0] int_buffer_d0;
wire   [9:0] int_buffer_address1;
reg    int_buffer_ce1;
reg   [29:0] indvar_phi_fu_176_p4;
reg   [7:0] t_V_phi_fu_188_p4;
wire   [63:0] tmp_s_fu_262_p1;
wire   [63:0] tmp_5_cast_fu_300_p1;
wire   [63:0] tmp_8_1_cast_fu_315_p1;
wire   [63:0] tmp_8_2_cast_fu_325_p1;
wire   [63:0] tmp_4_fu_330_p1;
wire   [11:0] p_shl_fu_197_p3;
wire   [9:0] p_shl1_fu_209_p3;
wire   [12:0] p_shl_cast_fu_205_p1;
wire   [12:0] p_shl1_cast_fu_217_p1;
wire   [12:0] tmp_2_fu_221_p2;
wire   [10:0] tmp_1_fu_227_p4;
wire   [29:0] tmp_2_add_i32_shr_cast_fu_241_p0;
wire   [9:0] p_shl2_fu_282_p3;
wire   [10:0] p_shl2_cast_fu_290_p1;
wire   [10:0] tmp_4_cast1_fu_278_p1;
wire   [10:0] tmp_8_1_fu_310_p2;
wire   [10:0] tmp_8_2_fu_320_p2;
reg   [2:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b1;
parameter    ap_ST_pp1_stg0_fsm_2 = 3'b10;
parameter    ap_ST_pp1_stg1_fsm_3 = 3'b11;
parameter    ap_ST_st14_fsm_4 = 3'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_2 = 11'b10;
parameter    ap_true = 1'b1;


load_centres_buffer_int_buffer #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
int_buffer_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( int_buffer_address0 ),
    .ce0( int_buffer_ce0 ),
    .we0( int_buffer_we0 ),
    .d0( int_buffer_d0 ),
    .q0( int_buffer_q0 ),
    .address1( int_buffer_address1 ),
    .ce1( int_buffer_ce1 ),
    .q1( int_buffer_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & (ap_const_lv1_0 == exitcond3_fu_245_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm) & (~(ap_const_lv1_0 == tmp_3_reg_371) | ((ap_const_lv1_0 == tmp_3_reg_371) & ~(ap_const_lv1_0 == tmp_6_reg_391))))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
        end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        indvar_reg_172 <= ap_const_lv30_0;
    end else if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & (exitcond3_reg_353 == ap_const_lv1_0))) begin
        indvar_reg_172 <= indvar_next_reg_357;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2))) begin
        t_V_reg_184 <= ap_const_lv8_0;
    end else if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == tmp_3_reg_371) & (ap_const_lv1_0 == tmp_6_reg_391))) begin
        t_V_reg_184 <= i_V_reg_375;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
        ap_reg_ppstg_exitcond3_reg_353_pp0_it1 <= exitcond3_reg_353;
        ap_reg_ppstg_exitcond3_reg_353_pp0_it2 <= ap_reg_ppstg_exitcond3_reg_353_pp0_it1;
        ap_reg_ppstg_exitcond3_reg_353_pp0_it3 <= ap_reg_ppstg_exitcond3_reg_353_pp0_it2;
        ap_reg_ppstg_exitcond3_reg_353_pp0_it4 <= ap_reg_ppstg_exitcond3_reg_353_pp0_it3;
        ap_reg_ppstg_exitcond3_reg_353_pp0_it5 <= ap_reg_ppstg_exitcond3_reg_353_pp0_it4;
        ap_reg_ppstg_exitcond3_reg_353_pp0_it6 <= ap_reg_ppstg_exitcond3_reg_353_pp0_it5;
        ap_reg_ppstg_indvar_reg_172_pp0_it1 <= indvar_reg_172;
        ap_reg_ppstg_indvar_reg_172_pp0_it2 <= ap_reg_ppstg_indvar_reg_172_pp0_it1;
        ap_reg_ppstg_indvar_reg_172_pp0_it3 <= ap_reg_ppstg_indvar_reg_172_pp0_it2;
        ap_reg_ppstg_indvar_reg_172_pp0_it4 <= ap_reg_ppstg_indvar_reg_172_pp0_it3;
        ap_reg_ppstg_indvar_reg_172_pp0_it5 <= ap_reg_ppstg_indvar_reg_172_pp0_it4;
        ap_reg_ppstg_indvar_reg_172_pp0_it6 <= ap_reg_ppstg_indvar_reg_172_pp0_it5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_t_V_reg_184_pp1_it1 <= t_V_reg_184;
        ap_reg_ppstg_tmp_3_reg_371_pp1_it1 <= tmp_3_reg_371;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_reg_ppstg_exitcond3_reg_353_pp0_it5 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
        bus_read_reg_366 <= bus_r_datain;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
        exitcond3_reg_353 <= exitcond3_fu_245_p2;
        indvar_next_reg_357 <= indvar_next_fu_250_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        i_V_reg_375 <= i_V_fu_272_p2;
        tmp_3_reg_371 <= tmp_3_fu_267_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == tmp_3_reg_371))) begin
        int_buffer_load_1_reg_410 <= int_buffer_q0;
        int_buffer_load_2_reg_415 <= int_buffer_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_reg_371))) begin
        int_buffer_load_reg_395 <= int_buffer_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & (ap_const_lv1_0 == exitcond3_fu_245_p2))) begin
        isIter0_reg_362 <= isIter0_fu_256_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        tmp_2_add_i32_shr_cast_reg_348[0] <= tmp_2_add_i32_shr_cast_fu_241_p1[0];
tmp_2_add_i32_shr_cast_reg_348[1] <= tmp_2_add_i32_shr_cast_fu_241_p1[1];
tmp_2_add_i32_shr_cast_reg_348[2] <= tmp_2_add_i32_shr_cast_fu_241_p1[2];
tmp_2_add_i32_shr_cast_reg_348[3] <= tmp_2_add_i32_shr_cast_fu_241_p1[3];
tmp_2_add_i32_shr_cast_reg_348[4] <= tmp_2_add_i32_shr_cast_fu_241_p1[4];
tmp_2_add_i32_shr_cast_reg_348[5] <= tmp_2_add_i32_shr_cast_fu_241_p1[5];
tmp_2_add_i32_shr_cast_reg_348[6] <= tmp_2_add_i32_shr_cast_fu_241_p1[6];
tmp_2_add_i32_shr_cast_reg_348[7] <= tmp_2_add_i32_shr_cast_fu_241_p1[7];
tmp_2_add_i32_shr_cast_reg_348[8] <= tmp_2_add_i32_shr_cast_fu_241_p1[8];
tmp_2_add_i32_shr_cast_reg_348[9] <= tmp_2_add_i32_shr_cast_fu_241_p1[9];
tmp_2_add_i32_shr_cast_reg_348[10] <= tmp_2_add_i32_shr_cast_fu_241_p1[10];
tmp_2_add_i32_shr_cast_reg_348[11] <= tmp_2_add_i32_shr_cast_fu_241_p1[11];
tmp_2_add_i32_shr_cast_reg_348[12] <= tmp_2_add_i32_shr_cast_fu_241_p1[12];
tmp_2_add_i32_shr_cast_reg_348[13] <= tmp_2_add_i32_shr_cast_fu_241_p1[13];
tmp_2_add_i32_shr_cast_reg_348[14] <= tmp_2_add_i32_shr_cast_fu_241_p1[14];
tmp_2_add_i32_shr_cast_reg_348[15] <= tmp_2_add_i32_shr_cast_fu_241_p1[15];
tmp_2_add_i32_shr_cast_reg_348[16] <= tmp_2_add_i32_shr_cast_fu_241_p1[16];
tmp_2_add_i32_shr_cast_reg_348[17] <= tmp_2_add_i32_shr_cast_fu_241_p1[17];
tmp_2_add_i32_shr_cast_reg_348[18] <= tmp_2_add_i32_shr_cast_fu_241_p1[18];
tmp_2_add_i32_shr_cast_reg_348[19] <= tmp_2_add_i32_shr_cast_fu_241_p1[19];
tmp_2_add_i32_shr_cast_reg_348[20] <= tmp_2_add_i32_shr_cast_fu_241_p1[20];
tmp_2_add_i32_shr_cast_reg_348[21] <= tmp_2_add_i32_shr_cast_fu_241_p1[21];
tmp_2_add_i32_shr_cast_reg_348[22] <= tmp_2_add_i32_shr_cast_fu_241_p1[22];
tmp_2_add_i32_shr_cast_reg_348[23] <= tmp_2_add_i32_shr_cast_fu_241_p1[23];
tmp_2_add_i32_shr_cast_reg_348[24] <= tmp_2_add_i32_shr_cast_fu_241_p1[24];
tmp_2_add_i32_shr_cast_reg_348[25] <= tmp_2_add_i32_shr_cast_fu_241_p1[25];
tmp_2_add_i32_shr_cast_reg_348[26] <= tmp_2_add_i32_shr_cast_fu_241_p1[26];
tmp_2_add_i32_shr_cast_reg_348[27] <= tmp_2_add_i32_shr_cast_fu_241_p1[27];
tmp_2_add_i32_shr_cast_reg_348[28] <= tmp_2_add_i32_shr_cast_fu_241_p1[28];
tmp_2_add_i32_shr_cast_reg_348[29] <= tmp_2_add_i32_shr_cast_fu_241_p1[29];
        tmp_2_add_i32_shr_reg_343 <= tmp_2_add_i32_shr_fu_237_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == tmp_3_fu_267_p2))) begin
        tmp_5_reg_380 <= tmp_5_fu_294_p2;
        tmp_6_reg_391 <= tmp_6_fu_305_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st14_fsm_4 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st14_fsm_4 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// buffer_0_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm))) begin
        buffer_0_value_ce0 = ap_const_logic_1;
    end else begin
        buffer_0_value_ce0 = ap_const_logic_0;
    end
end

/// buffer_0_value_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_tmp_3_reg_371_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_3_reg_371_pp1_it1))) begin
        buffer_0_value_we0 = ap_const_logic_1;
    end else begin
        buffer_0_value_we0 = ap_const_logic_0;
    end
end

/// buffer_1_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm))) begin
        buffer_1_value_ce0 = ap_const_logic_1;
    end else begin
        buffer_1_value_ce0 = ap_const_logic_0;
    end
end

/// buffer_1_value_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_tmp_3_reg_371_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_3_reg_371_pp1_it1))) begin
        buffer_1_value_we0 = ap_const_logic_1;
    end else begin
        buffer_1_value_we0 = ap_const_logic_0;
    end
end

/// buffer_2_value_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm))) begin
        buffer_2_value_ce0 = ap_const_logic_1;
    end else begin
        buffer_2_value_ce0 = ap_const_logic_0;
    end
end

/// buffer_2_value_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_tmp_3_reg_371_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_3_reg_371_pp1_it1))) begin
        buffer_2_value_we0 = ap_const_logic_1;
    end else begin
        buffer_2_value_we0 = ap_const_logic_0;
    end
end

/// bus_r_req_write assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it1 or exitcond3_reg_353 or ap_sig_bdd_78 or ap_reg_ppiten_pp0_it6 or isIter0_reg_362)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & (exitcond3_reg_353 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_362))) begin
        bus_r_req_write = ap_const_logic_1;
    end else begin
        bus_r_req_write = ap_const_logic_0;
    end
end

/// bus_r_rsp_read assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond3_reg_353_pp0_it5 or ap_sig_bdd_78 or ap_reg_ppiten_pp0_it6)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_reg_ppstg_exitcond3_reg_353_pp0_it5 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) begin
        bus_r_rsp_read = ap_const_logic_1;
    end else begin
        bus_r_rsp_read = ap_const_logic_0;
    end
end

/// indvar_phi_fu_176_p4 assign process. ///
always @ (ap_CS_fsm or indvar_reg_172 or ap_reg_ppiten_pp0_it1 or exitcond3_reg_353 or indvar_next_reg_357)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond3_reg_353 == ap_const_lv1_0))) begin
        indvar_phi_fu_176_p4 = indvar_next_reg_357;
    end else begin
        indvar_phi_fu_176_p4 = indvar_reg_172;
    end
end

/// int_buffer_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp1_it0 or tmp_s_fu_262_p1 or tmp_5_cast_fu_300_p1 or tmp_8_1_cast_fu_315_p1)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7))) begin
        int_buffer_address0 = tmp_s_fu_262_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm))) begin
        int_buffer_address0 = tmp_8_1_cast_fu_315_p1;
    end else if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        int_buffer_address0 = tmp_5_cast_fu_300_p1;
    end else begin
        int_buffer_address0 = 'bx;
    end
end

/// int_buffer_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_78 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp1_it0)
begin
    if ((((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
        int_buffer_ce0 = ap_const_logic_1;
    end else begin
        int_buffer_ce0 = ap_const_logic_0;
    end
end

/// int_buffer_ce1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it0)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm))) begin
        int_buffer_ce1 = ap_const_logic_1;
    end else begin
        int_buffer_ce1 = ap_const_logic_0;
    end
end

/// int_buffer_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_78 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_exitcond3_reg_353_pp0_it6)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond3_reg_353_pp0_it6))) begin
        int_buffer_we0 = ap_const_logic_1;
    end else begin
        int_buffer_we0 = ap_const_logic_0;
    end
end

/// t_V_phi_fu_188_p4 assign process. ///
always @ (ap_CS_fsm or t_V_reg_184 or ap_reg_ppiten_pp1_it1 or tmp_3_reg_371 or i_V_reg_375 or tmp_6_reg_391)
begin
    if (((ap_ST_pp1_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == tmp_3_reg_371) & (ap_const_lv1_0 == tmp_6_reg_391))) begin
        t_V_phi_fu_188_p4 = i_V_reg_375;
    end else begin
        t_V_phi_fu_188_p4 = t_V_reg_184;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_78 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or exitcond3_fu_245_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_pp0_stg0_fsm_1 : 
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if ((((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_78 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~(ap_const_lv1_0 == exitcond3_fu_245_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        ap_ST_pp1_stg0_fsm_2 : 
            ap_NS_fsm = ap_ST_pp1_stg1_fsm_3;
        ap_ST_pp1_stg1_fsm_3 : 
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_ST_pp1_stg1_fsm_3 == ap_CS_fsm) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_4;
            end
        ap_ST_st14_fsm_4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_78 assign process. ///
always @ (bus_r_rsp_empty_n or ap_reg_ppstg_exitcond3_reg_353_pp0_it5)
begin
    ap_sig_bdd_78 = ((bus_r_rsp_empty_n == ap_const_logic_0) & (ap_reg_ppstg_exitcond3_reg_353_pp0_it5 == ap_const_lv1_0));
end
assign buffer_0_value_address0 = tmp_4_fu_330_p1;
assign buffer_0_value_d0 = int_buffer_load_reg_395;
assign buffer_1_value_address0 = tmp_4_fu_330_p1;
assign buffer_1_value_d0 = int_buffer_load_1_reg_410;
assign buffer_2_value_address0 = tmp_4_fu_330_p1;
assign buffer_2_value_d0 = int_buffer_load_2_reg_415;
assign bus_r_address = ap_const_lv32_0;
assign bus_r_dataout = ap_const_lv32_0;
assign bus_r_req_din = ap_const_logic_0;
assign bus_r_size = tmp_2_add_i32_shr_cast_reg_348;
assign exitcond3_fu_245_p2 = (indvar_phi_fu_176_p4 == tmp_2_add_i32_shr_reg_343? 1'b1: 1'b0);
assign i_V_fu_272_p2 = (t_V_phi_fu_188_p4 + ap_const_lv8_1);
assign indvar_next_fu_250_p2 = (indvar_phi_fu_176_p4 + ap_const_lv30_1);
assign int_buffer_address1 = tmp_8_2_cast_fu_325_p1;
assign int_buffer_d0 = bus_read_reg_366;
assign isIter0_fu_256_p2 = (indvar_phi_fu_176_p4 == ap_const_lv30_0? 1'b1: 1'b0);
assign p_shl1_cast_fu_217_p1 = $unsigned(p_shl1_fu_209_p3);
assign p_shl1_fu_209_p3 = {{k_V}, {ap_const_lv2_0}};
assign p_shl2_cast_fu_290_p1 = $unsigned(p_shl2_fu_282_p3);
assign p_shl2_fu_282_p3 = {{t_V_phi_fu_188_p4}, {ap_const_lv2_0}};
assign p_shl_cast_fu_205_p1 = $unsigned(p_shl_fu_197_p3);
assign p_shl_fu_197_p3 = {{k_V}, {ap_const_lv4_0}};
assign tmp_1_fu_227_p4 = {{tmp_2_fu_221_p2[ap_const_lv32_C : ap_const_lv32_2]}};
assign tmp_2_add_i32_shr_cast_fu_241_p0 = $signed(tmp_1_fu_227_p4);
assign tmp_2_add_i32_shr_cast_fu_241_p1 = $unsigned(tmp_2_add_i32_shr_cast_fu_241_p0);
assign tmp_2_add_i32_shr_fu_237_p1 = $signed(tmp_1_fu_227_p4);
assign tmp_2_fu_221_p2 = (p_shl_cast_fu_205_p1 - p_shl1_cast_fu_217_p1);
assign tmp_3_fu_267_p2 = (t_V_phi_fu_188_p4 > k_V? 1'b1: 1'b0);
assign tmp_4_cast1_fu_278_p1 = $unsigned(t_V_phi_fu_188_p4);
assign tmp_4_fu_330_p1 = $unsigned(ap_reg_ppstg_t_V_reg_184_pp1_it1);
assign tmp_5_cast_fu_300_p1 = $signed(tmp_5_fu_294_p2);
assign tmp_5_fu_294_p2 = (p_shl2_cast_fu_290_p1 - tmp_4_cast1_fu_278_p1);
assign tmp_6_fu_305_p2 = (t_V_phi_fu_188_p4 == k_V? 1'b1: 1'b0);
assign tmp_8_1_cast_fu_315_p1 = $signed(tmp_8_1_fu_310_p2);
assign tmp_8_1_fu_310_p2 = (tmp_5_reg_380 + ap_const_lv11_1);
assign tmp_8_2_cast_fu_325_p1 = $signed(tmp_8_2_fu_320_p2);
assign tmp_8_2_fu_320_p2 = (tmp_5_reg_380 + ap_const_lv11_2);
assign tmp_s_fu_262_p1 = $unsigned(ap_reg_ppstg_indvar_reg_172_pp0_it6);
always @ (posedge ap_clk)
begin
    tmp_2_add_i32_shr_cast_reg_348[31:30] <= 2'b00;
end



endmodule //load_centres_buffer

