// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module lloyds_kernel_top_top (
m_axi_data_points_AWID,
m_axi_data_points_AWADDR,
m_axi_data_points_AWLEN,
m_axi_data_points_AWSIZE,
m_axi_data_points_AWBURST,
m_axi_data_points_AWLOCK,
m_axi_data_points_AWCACHE,
m_axi_data_points_AWPROT,
m_axi_data_points_AWQOS,
m_axi_data_points_AWUSER,
m_axi_data_points_AWVALID,
m_axi_data_points_AWREADY,
m_axi_data_points_WDATA,
m_axi_data_points_WSTRB,
m_axi_data_points_WLAST,
m_axi_data_points_WUSER,
m_axi_data_points_WVALID,
m_axi_data_points_WREADY,
m_axi_data_points_BID,
m_axi_data_points_BRESP,
m_axi_data_points_BUSER,
m_axi_data_points_BVALID,
m_axi_data_points_BREADY,
m_axi_data_points_ARID,
m_axi_data_points_ARADDR,
m_axi_data_points_ARLEN,
m_axi_data_points_ARSIZE,
m_axi_data_points_ARBURST,
m_axi_data_points_ARLOCK,
m_axi_data_points_ARCACHE,
m_axi_data_points_ARPROT,
m_axi_data_points_ARQOS,
m_axi_data_points_ARUSER,
m_axi_data_points_ARVALID,
m_axi_data_points_ARREADY,
m_axi_data_points_RID,
m_axi_data_points_RDATA,
m_axi_data_points_RRESP,
m_axi_data_points_RLAST,
m_axi_data_points_RUSER,
m_axi_data_points_RVALID,
m_axi_data_points_RREADY,
m_axi_centres_in_AWID,
m_axi_centres_in_AWADDR,
m_axi_centres_in_AWLEN,
m_axi_centres_in_AWSIZE,
m_axi_centres_in_AWBURST,
m_axi_centres_in_AWLOCK,
m_axi_centres_in_AWCACHE,
m_axi_centres_in_AWPROT,
m_axi_centres_in_AWQOS,
m_axi_centres_in_AWUSER,
m_axi_centres_in_AWVALID,
m_axi_centres_in_AWREADY,
m_axi_centres_in_WDATA,
m_axi_centres_in_WSTRB,
m_axi_centres_in_WLAST,
m_axi_centres_in_WUSER,
m_axi_centres_in_WVALID,
m_axi_centres_in_WREADY,
m_axi_centres_in_BID,
m_axi_centres_in_BRESP,
m_axi_centres_in_BUSER,
m_axi_centres_in_BVALID,
m_axi_centres_in_BREADY,
m_axi_centres_in_ARID,
m_axi_centres_in_ARADDR,
m_axi_centres_in_ARLEN,
m_axi_centres_in_ARSIZE,
m_axi_centres_in_ARBURST,
m_axi_centres_in_ARLOCK,
m_axi_centres_in_ARCACHE,
m_axi_centres_in_ARPROT,
m_axi_centres_in_ARQOS,
m_axi_centres_in_ARUSER,
m_axi_centres_in_ARVALID,
m_axi_centres_in_ARREADY,
m_axi_centres_in_RID,
m_axi_centres_in_RDATA,
m_axi_centres_in_RRESP,
m_axi_centres_in_RLAST,
m_axi_centres_in_RUSER,
m_axi_centres_in_RVALID,
m_axi_centres_in_RREADY,
m_axi_output_r_AWID,
m_axi_output_r_AWADDR,
m_axi_output_r_AWLEN,
m_axi_output_r_AWSIZE,
m_axi_output_r_AWBURST,
m_axi_output_r_AWLOCK,
m_axi_output_r_AWCACHE,
m_axi_output_r_AWPROT,
m_axi_output_r_AWQOS,
m_axi_output_r_AWUSER,
m_axi_output_r_AWVALID,
m_axi_output_r_AWREADY,
m_axi_output_r_WDATA,
m_axi_output_r_WSTRB,
m_axi_output_r_WLAST,
m_axi_output_r_WUSER,
m_axi_output_r_WVALID,
m_axi_output_r_WREADY,
m_axi_output_r_BID,
m_axi_output_r_BRESP,
m_axi_output_r_BUSER,
m_axi_output_r_BVALID,
m_axi_output_r_BREADY,
m_axi_output_r_ARID,
m_axi_output_r_ARADDR,
m_axi_output_r_ARLEN,
m_axi_output_r_ARSIZE,
m_axi_output_r_ARBURST,
m_axi_output_r_ARLOCK,
m_axi_output_r_ARCACHE,
m_axi_output_r_ARPROT,
m_axi_output_r_ARQOS,
m_axi_output_r_ARUSER,
m_axi_output_r_ARVALID,
m_axi_output_r_ARREADY,
m_axi_output_r_RID,
m_axi_output_r_RDATA,
m_axi_output_r_RRESP,
m_axi_output_r_RLAST,
m_axi_output_r_RUSER,
m_axi_output_r_RVALID,
m_axi_output_r_RREADY,
aresetn,
aclk,
block_address,
n,
k_V,
ap_start,
ap_ready,
ap_done,
ap_idle
);

parameter C_M_AXI_DATA_POINTS_ID_WIDTH = 1;
parameter C_M_AXI_DATA_POINTS_ADDR_WIDTH = 32;
parameter C_M_AXI_DATA_POINTS_DATA_WIDTH = 32;
parameter C_M_AXI_DATA_POINTS_AWUSER_WIDTH = 1;
parameter C_M_AXI_DATA_POINTS_ARUSER_WIDTH = 1;
parameter C_M_AXI_DATA_POINTS_WUSER_WIDTH = 1;
parameter C_M_AXI_DATA_POINTS_RUSER_WIDTH = 1;
parameter C_M_AXI_DATA_POINTS_BUSER_WIDTH = 1;
parameter C_M_AXI_DATA_POINTS_USER_DATA_WIDTH = 32;
parameter C_M_AXI_DATA_POINTS_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_DATA_POINTS_USER_VALUE = 1'b0;
parameter C_M_AXI_DATA_POINTS_PROT_VALUE = 3'b010;
parameter C_M_AXI_DATA_POINTS_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_CENTRES_IN_ID_WIDTH = 1;
parameter C_M_AXI_CENTRES_IN_ADDR_WIDTH = 32;
parameter C_M_AXI_CENTRES_IN_DATA_WIDTH = 32;
parameter C_M_AXI_CENTRES_IN_AWUSER_WIDTH = 1;
parameter C_M_AXI_CENTRES_IN_ARUSER_WIDTH = 1;
parameter C_M_AXI_CENTRES_IN_WUSER_WIDTH = 1;
parameter C_M_AXI_CENTRES_IN_RUSER_WIDTH = 1;
parameter C_M_AXI_CENTRES_IN_BUSER_WIDTH = 1;
parameter C_M_AXI_CENTRES_IN_USER_DATA_WIDTH = 32;
parameter C_M_AXI_CENTRES_IN_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_CENTRES_IN_USER_VALUE = 1'b0;
parameter C_M_AXI_CENTRES_IN_PROT_VALUE = 3'b010;
parameter C_M_AXI_CENTRES_IN_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_OUTPUT_R_ID_WIDTH = 1;
parameter C_M_AXI_OUTPUT_R_ADDR_WIDTH = 32;
parameter C_M_AXI_OUTPUT_R_DATA_WIDTH = 32;
parameter C_M_AXI_OUTPUT_R_AWUSER_WIDTH = 1;
parameter C_M_AXI_OUTPUT_R_ARUSER_WIDTH = 1;
parameter C_M_AXI_OUTPUT_R_WUSER_WIDTH = 1;
parameter C_M_AXI_OUTPUT_R_RUSER_WIDTH = 1;
parameter C_M_AXI_OUTPUT_R_BUSER_WIDTH = 1;
parameter C_M_AXI_OUTPUT_R_USER_DATA_WIDTH = 32;
parameter C_M_AXI_OUTPUT_R_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_OUTPUT_R_USER_VALUE = 1'b0;
parameter C_M_AXI_OUTPUT_R_PROT_VALUE = 3'b010;
parameter C_M_AXI_OUTPUT_R_CACHE_VALUE = 4'b0000;
parameter RESET_ACTIVE_LOW = 1;

output [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_AWID ;
output [C_M_AXI_DATA_POINTS_ADDR_WIDTH - 1:0] m_axi_data_points_AWADDR ;
output [8 - 1:0] m_axi_data_points_AWLEN ;
output [3 - 1:0] m_axi_data_points_AWSIZE ;
output [2 - 1:0] m_axi_data_points_AWBURST ;
output [2 - 1:0] m_axi_data_points_AWLOCK ;
output [4 - 1:0] m_axi_data_points_AWCACHE ;
output [3 - 1:0] m_axi_data_points_AWPROT ;
output [4 - 1:0] m_axi_data_points_AWQOS ;
output [C_M_AXI_DATA_POINTS_AWUSER_WIDTH - 1:0] m_axi_data_points_AWUSER ;
output m_axi_data_points_AWVALID ;
input m_axi_data_points_AWREADY ;
output [C_M_AXI_DATA_POINTS_DATA_WIDTH - 1:0] m_axi_data_points_WDATA ;
output [C_M_AXI_DATA_POINTS_DATA_WIDTH/8 - 1:0] m_axi_data_points_WSTRB ;
output m_axi_data_points_WLAST ;
output [C_M_AXI_DATA_POINTS_WUSER_WIDTH - 1:0] m_axi_data_points_WUSER ;
output m_axi_data_points_WVALID ;
input m_axi_data_points_WREADY ;
input [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_BID ;
input [2 - 1:0] m_axi_data_points_BRESP ;
input [C_M_AXI_DATA_POINTS_BUSER_WIDTH - 1:0] m_axi_data_points_BUSER ;
input m_axi_data_points_BVALID ;
output m_axi_data_points_BREADY ;
output [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_ARID ;
output [C_M_AXI_DATA_POINTS_ADDR_WIDTH - 1:0] m_axi_data_points_ARADDR ;
output [8 - 1:0] m_axi_data_points_ARLEN ;
output [3 - 1:0] m_axi_data_points_ARSIZE ;
output [2 - 1:0] m_axi_data_points_ARBURST ;
output [2 - 1:0] m_axi_data_points_ARLOCK ;
output [4 - 1:0] m_axi_data_points_ARCACHE ;
output [3 - 1:0] m_axi_data_points_ARPROT ;
output [4 - 1:0] m_axi_data_points_ARQOS ;
output [C_M_AXI_DATA_POINTS_ARUSER_WIDTH - 1:0] m_axi_data_points_ARUSER ;
output m_axi_data_points_ARVALID ;
input m_axi_data_points_ARREADY ;
input [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_RID ;
input [C_M_AXI_DATA_POINTS_DATA_WIDTH - 1:0] m_axi_data_points_RDATA ;
input [2 - 1:0] m_axi_data_points_RRESP ;
input m_axi_data_points_RLAST ;
input [C_M_AXI_DATA_POINTS_RUSER_WIDTH - 1:0] m_axi_data_points_RUSER ;
input m_axi_data_points_RVALID ;
output m_axi_data_points_RREADY ;


output [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_AWID ;
output [C_M_AXI_CENTRES_IN_ADDR_WIDTH - 1:0] m_axi_centres_in_AWADDR ;
output [8 - 1:0] m_axi_centres_in_AWLEN ;
output [3 - 1:0] m_axi_centres_in_AWSIZE ;
output [2 - 1:0] m_axi_centres_in_AWBURST ;
output [2 - 1:0] m_axi_centres_in_AWLOCK ;
output [4 - 1:0] m_axi_centres_in_AWCACHE ;
output [3 - 1:0] m_axi_centres_in_AWPROT ;
output [4 - 1:0] m_axi_centres_in_AWQOS ;
output [C_M_AXI_CENTRES_IN_AWUSER_WIDTH - 1:0] m_axi_centres_in_AWUSER ;
output m_axi_centres_in_AWVALID ;
input m_axi_centres_in_AWREADY ;
output [C_M_AXI_CENTRES_IN_DATA_WIDTH - 1:0] m_axi_centres_in_WDATA ;
output [C_M_AXI_CENTRES_IN_DATA_WIDTH/8 - 1:0] m_axi_centres_in_WSTRB ;
output m_axi_centres_in_WLAST ;
output [C_M_AXI_CENTRES_IN_WUSER_WIDTH - 1:0] m_axi_centres_in_WUSER ;
output m_axi_centres_in_WVALID ;
input m_axi_centres_in_WREADY ;
input [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_BID ;
input [2 - 1:0] m_axi_centres_in_BRESP ;
input [C_M_AXI_CENTRES_IN_BUSER_WIDTH - 1:0] m_axi_centres_in_BUSER ;
input m_axi_centres_in_BVALID ;
output m_axi_centres_in_BREADY ;
output [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_ARID ;
output [C_M_AXI_CENTRES_IN_ADDR_WIDTH - 1:0] m_axi_centres_in_ARADDR ;
output [8 - 1:0] m_axi_centres_in_ARLEN ;
output [3 - 1:0] m_axi_centres_in_ARSIZE ;
output [2 - 1:0] m_axi_centres_in_ARBURST ;
output [2 - 1:0] m_axi_centres_in_ARLOCK ;
output [4 - 1:0] m_axi_centres_in_ARCACHE ;
output [3 - 1:0] m_axi_centres_in_ARPROT ;
output [4 - 1:0] m_axi_centres_in_ARQOS ;
output [C_M_AXI_CENTRES_IN_ARUSER_WIDTH - 1:0] m_axi_centres_in_ARUSER ;
output m_axi_centres_in_ARVALID ;
input m_axi_centres_in_ARREADY ;
input [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_RID ;
input [C_M_AXI_CENTRES_IN_DATA_WIDTH - 1:0] m_axi_centres_in_RDATA ;
input [2 - 1:0] m_axi_centres_in_RRESP ;
input m_axi_centres_in_RLAST ;
input [C_M_AXI_CENTRES_IN_RUSER_WIDTH - 1:0] m_axi_centres_in_RUSER ;
input m_axi_centres_in_RVALID ;
output m_axi_centres_in_RREADY ;


output [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_AWID ;
output [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_output_r_AWADDR ;
output [8 - 1:0] m_axi_output_r_AWLEN ;
output [3 - 1:0] m_axi_output_r_AWSIZE ;
output [2 - 1:0] m_axi_output_r_AWBURST ;
output [2 - 1:0] m_axi_output_r_AWLOCK ;
output [4 - 1:0] m_axi_output_r_AWCACHE ;
output [3 - 1:0] m_axi_output_r_AWPROT ;
output [4 - 1:0] m_axi_output_r_AWQOS ;
output [C_M_AXI_OUTPUT_R_AWUSER_WIDTH - 1:0] m_axi_output_r_AWUSER ;
output m_axi_output_r_AWVALID ;
input m_axi_output_r_AWREADY ;
output [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_output_r_WDATA ;
output [C_M_AXI_OUTPUT_R_DATA_WIDTH/8 - 1:0] m_axi_output_r_WSTRB ;
output m_axi_output_r_WLAST ;
output [C_M_AXI_OUTPUT_R_WUSER_WIDTH - 1:0] m_axi_output_r_WUSER ;
output m_axi_output_r_WVALID ;
input m_axi_output_r_WREADY ;
input [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_BID ;
input [2 - 1:0] m_axi_output_r_BRESP ;
input [C_M_AXI_OUTPUT_R_BUSER_WIDTH - 1:0] m_axi_output_r_BUSER ;
input m_axi_output_r_BVALID ;
output m_axi_output_r_BREADY ;
output [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_ARID ;
output [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_output_r_ARADDR ;
output [8 - 1:0] m_axi_output_r_ARLEN ;
output [3 - 1:0] m_axi_output_r_ARSIZE ;
output [2 - 1:0] m_axi_output_r_ARBURST ;
output [2 - 1:0] m_axi_output_r_ARLOCK ;
output [4 - 1:0] m_axi_output_r_ARCACHE ;
output [3 - 1:0] m_axi_output_r_ARPROT ;
output [4 - 1:0] m_axi_output_r_ARQOS ;
output [C_M_AXI_OUTPUT_R_ARUSER_WIDTH - 1:0] m_axi_output_r_ARUSER ;
output m_axi_output_r_ARVALID ;
input m_axi_output_r_ARREADY ;
input [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_RID ;
input [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_output_r_RDATA ;
input [2 - 1:0] m_axi_output_r_RRESP ;
input m_axi_output_r_RLAST ;
input [C_M_AXI_OUTPUT_R_RUSER_WIDTH - 1:0] m_axi_output_r_RUSER ;
input m_axi_output_r_RVALID ;
output m_axi_output_r_RREADY ;

input aresetn ;

input aclk ;

input [32 - 1:0] block_address ;
input [32 - 1:0] n ;
input [8 - 1:0] k_V ;
input ap_start ;
output ap_ready ;
output ap_done ;
output ap_idle ;


wire [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_AWID;
wire [C_M_AXI_DATA_POINTS_ADDR_WIDTH - 1:0] m_axi_data_points_AWADDR;
wire [8 - 1:0] m_axi_data_points_AWLEN;
wire [3 - 1:0] m_axi_data_points_AWSIZE;
wire [2 - 1:0] m_axi_data_points_AWBURST;
wire [2 - 1:0] m_axi_data_points_AWLOCK;
wire [4 - 1:0] m_axi_data_points_AWCACHE;
wire [3 - 1:0] m_axi_data_points_AWPROT;
wire [4 - 1:0] m_axi_data_points_AWQOS;
wire [C_M_AXI_DATA_POINTS_AWUSER_WIDTH - 1:0] m_axi_data_points_AWUSER;
wire m_axi_data_points_AWVALID;
wire m_axi_data_points_AWREADY;
wire [C_M_AXI_DATA_POINTS_DATA_WIDTH - 1:0] m_axi_data_points_WDATA;
wire [C_M_AXI_DATA_POINTS_DATA_WIDTH/8 - 1:0] m_axi_data_points_WSTRB;
wire m_axi_data_points_WLAST;
wire [C_M_AXI_DATA_POINTS_WUSER_WIDTH - 1:0] m_axi_data_points_WUSER;
wire m_axi_data_points_WVALID;
wire m_axi_data_points_WREADY;
wire [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_BID;
wire [2 - 1:0] m_axi_data_points_BRESP;
wire [C_M_AXI_DATA_POINTS_BUSER_WIDTH - 1:0] m_axi_data_points_BUSER;
wire m_axi_data_points_BVALID;
wire m_axi_data_points_BREADY;
wire [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_ARID;
wire [C_M_AXI_DATA_POINTS_ADDR_WIDTH - 1:0] m_axi_data_points_ARADDR;
wire [8 - 1:0] m_axi_data_points_ARLEN;
wire [3 - 1:0] m_axi_data_points_ARSIZE;
wire [2 - 1:0] m_axi_data_points_ARBURST;
wire [2 - 1:0] m_axi_data_points_ARLOCK;
wire [4 - 1:0] m_axi_data_points_ARCACHE;
wire [3 - 1:0] m_axi_data_points_ARPROT;
wire [4 - 1:0] m_axi_data_points_ARQOS;
wire [C_M_AXI_DATA_POINTS_ARUSER_WIDTH - 1:0] m_axi_data_points_ARUSER;
wire m_axi_data_points_ARVALID;
wire m_axi_data_points_ARREADY;
wire [C_M_AXI_DATA_POINTS_ID_WIDTH - 1:0] m_axi_data_points_RID;
wire [C_M_AXI_DATA_POINTS_DATA_WIDTH - 1:0] m_axi_data_points_RDATA;
wire [2 - 1:0] m_axi_data_points_RRESP;
wire m_axi_data_points_RLAST;
wire [C_M_AXI_DATA_POINTS_RUSER_WIDTH - 1:0] m_axi_data_points_RUSER;
wire m_axi_data_points_RVALID;
wire m_axi_data_points_RREADY;


wire [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_AWID;
wire [C_M_AXI_CENTRES_IN_ADDR_WIDTH - 1:0] m_axi_centres_in_AWADDR;
wire [8 - 1:0] m_axi_centres_in_AWLEN;
wire [3 - 1:0] m_axi_centres_in_AWSIZE;
wire [2 - 1:0] m_axi_centres_in_AWBURST;
wire [2 - 1:0] m_axi_centres_in_AWLOCK;
wire [4 - 1:0] m_axi_centres_in_AWCACHE;
wire [3 - 1:0] m_axi_centres_in_AWPROT;
wire [4 - 1:0] m_axi_centres_in_AWQOS;
wire [C_M_AXI_CENTRES_IN_AWUSER_WIDTH - 1:0] m_axi_centres_in_AWUSER;
wire m_axi_centres_in_AWVALID;
wire m_axi_centres_in_AWREADY;
wire [C_M_AXI_CENTRES_IN_DATA_WIDTH - 1:0] m_axi_centres_in_WDATA;
wire [C_M_AXI_CENTRES_IN_DATA_WIDTH/8 - 1:0] m_axi_centres_in_WSTRB;
wire m_axi_centres_in_WLAST;
wire [C_M_AXI_CENTRES_IN_WUSER_WIDTH - 1:0] m_axi_centres_in_WUSER;
wire m_axi_centres_in_WVALID;
wire m_axi_centres_in_WREADY;
wire [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_BID;
wire [2 - 1:0] m_axi_centres_in_BRESP;
wire [C_M_AXI_CENTRES_IN_BUSER_WIDTH - 1:0] m_axi_centres_in_BUSER;
wire m_axi_centres_in_BVALID;
wire m_axi_centres_in_BREADY;
wire [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_ARID;
wire [C_M_AXI_CENTRES_IN_ADDR_WIDTH - 1:0] m_axi_centres_in_ARADDR;
wire [8 - 1:0] m_axi_centres_in_ARLEN;
wire [3 - 1:0] m_axi_centres_in_ARSIZE;
wire [2 - 1:0] m_axi_centres_in_ARBURST;
wire [2 - 1:0] m_axi_centres_in_ARLOCK;
wire [4 - 1:0] m_axi_centres_in_ARCACHE;
wire [3 - 1:0] m_axi_centres_in_ARPROT;
wire [4 - 1:0] m_axi_centres_in_ARQOS;
wire [C_M_AXI_CENTRES_IN_ARUSER_WIDTH - 1:0] m_axi_centres_in_ARUSER;
wire m_axi_centres_in_ARVALID;
wire m_axi_centres_in_ARREADY;
wire [C_M_AXI_CENTRES_IN_ID_WIDTH - 1:0] m_axi_centres_in_RID;
wire [C_M_AXI_CENTRES_IN_DATA_WIDTH - 1:0] m_axi_centres_in_RDATA;
wire [2 - 1:0] m_axi_centres_in_RRESP;
wire m_axi_centres_in_RLAST;
wire [C_M_AXI_CENTRES_IN_RUSER_WIDTH - 1:0] m_axi_centres_in_RUSER;
wire m_axi_centres_in_RVALID;
wire m_axi_centres_in_RREADY;


wire [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_AWID;
wire [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_output_r_AWADDR;
wire [8 - 1:0] m_axi_output_r_AWLEN;
wire [3 - 1:0] m_axi_output_r_AWSIZE;
wire [2 - 1:0] m_axi_output_r_AWBURST;
wire [2 - 1:0] m_axi_output_r_AWLOCK;
wire [4 - 1:0] m_axi_output_r_AWCACHE;
wire [3 - 1:0] m_axi_output_r_AWPROT;
wire [4 - 1:0] m_axi_output_r_AWQOS;
wire [C_M_AXI_OUTPUT_R_AWUSER_WIDTH - 1:0] m_axi_output_r_AWUSER;
wire m_axi_output_r_AWVALID;
wire m_axi_output_r_AWREADY;
wire [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_output_r_WDATA;
wire [C_M_AXI_OUTPUT_R_DATA_WIDTH/8 - 1:0] m_axi_output_r_WSTRB;
wire m_axi_output_r_WLAST;
wire [C_M_AXI_OUTPUT_R_WUSER_WIDTH - 1:0] m_axi_output_r_WUSER;
wire m_axi_output_r_WVALID;
wire m_axi_output_r_WREADY;
wire [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_BID;
wire [2 - 1:0] m_axi_output_r_BRESP;
wire [C_M_AXI_OUTPUT_R_BUSER_WIDTH - 1:0] m_axi_output_r_BUSER;
wire m_axi_output_r_BVALID;
wire m_axi_output_r_BREADY;
wire [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_ARID;
wire [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_output_r_ARADDR;
wire [8 - 1:0] m_axi_output_r_ARLEN;
wire [3 - 1:0] m_axi_output_r_ARSIZE;
wire [2 - 1:0] m_axi_output_r_ARBURST;
wire [2 - 1:0] m_axi_output_r_ARLOCK;
wire [4 - 1:0] m_axi_output_r_ARCACHE;
wire [3 - 1:0] m_axi_output_r_ARPROT;
wire [4 - 1:0] m_axi_output_r_ARQOS;
wire [C_M_AXI_OUTPUT_R_ARUSER_WIDTH - 1:0] m_axi_output_r_ARUSER;
wire m_axi_output_r_ARVALID;
wire m_axi_output_r_ARREADY;
wire [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_RID;
wire [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_output_r_RDATA;
wire [2 - 1:0] m_axi_output_r_RRESP;
wire m_axi_output_r_RLAST;
wire [C_M_AXI_OUTPUT_R_RUSER_WIDTH - 1:0] m_axi_output_r_RUSER;
wire m_axi_output_r_RVALID;
wire m_axi_output_r_RREADY;

wire aresetn;


wire [32 - 1:0] sig_lloyds_kernel_top_data_points_datain;
wire [32 - 1:0] sig_lloyds_kernel_top_data_points_dataout;
wire [32 - 1:0] sig_lloyds_kernel_top_data_points_address;
wire [32 - 1:0] sig_lloyds_kernel_top_data_points_size;
wire sig_lloyds_kernel_top_data_points_req_din;
wire sig_lloyds_kernel_top_data_points_req_full_n;
wire sig_lloyds_kernel_top_data_points_req_write;
wire sig_lloyds_kernel_top_data_points_rsp_empty_n;
wire sig_lloyds_kernel_top_data_points_rsp_read;

wire [32 - 1:0] sig_lloyds_kernel_top_centres_in_datain;
wire [32 - 1:0] sig_lloyds_kernel_top_centres_in_dataout;
wire [32 - 1:0] sig_lloyds_kernel_top_centres_in_address;
wire [32 - 1:0] sig_lloyds_kernel_top_centres_in_size;
wire sig_lloyds_kernel_top_centres_in_req_din;
wire sig_lloyds_kernel_top_centres_in_req_full_n;
wire sig_lloyds_kernel_top_centres_in_req_write;
wire sig_lloyds_kernel_top_centres_in_rsp_empty_n;
wire sig_lloyds_kernel_top_centres_in_rsp_read;

wire [32 - 1:0] sig_lloyds_kernel_top_output_r_datain;
wire [32 - 1:0] sig_lloyds_kernel_top_output_r_dataout;
wire [32 - 1:0] sig_lloyds_kernel_top_output_r_address;
wire [32 - 1:0] sig_lloyds_kernel_top_output_r_size;
wire sig_lloyds_kernel_top_output_r_req_din;
wire sig_lloyds_kernel_top_output_r_req_full_n;
wire sig_lloyds_kernel_top_output_r_req_write;
wire sig_lloyds_kernel_top_output_r_rsp_empty_n;
wire sig_lloyds_kernel_top_output_r_rsp_read;

wire sig_lloyds_kernel_top_ap_rst;



lloyds_kernel_top lloyds_kernel_top_U(
    .data_points_datain(sig_lloyds_kernel_top_data_points_datain),
    .data_points_dataout(sig_lloyds_kernel_top_data_points_dataout),
    .data_points_address(sig_lloyds_kernel_top_data_points_address),
    .data_points_size(sig_lloyds_kernel_top_data_points_size),
    .data_points_req_din(sig_lloyds_kernel_top_data_points_req_din),
    .data_points_req_full_n(sig_lloyds_kernel_top_data_points_req_full_n),
    .data_points_req_write(sig_lloyds_kernel_top_data_points_req_write),
    .data_points_rsp_empty_n(sig_lloyds_kernel_top_data_points_rsp_empty_n),
    .data_points_rsp_read(sig_lloyds_kernel_top_data_points_rsp_read),
    .centres_in_datain(sig_lloyds_kernel_top_centres_in_datain),
    .centres_in_dataout(sig_lloyds_kernel_top_centres_in_dataout),
    .centres_in_address(sig_lloyds_kernel_top_centres_in_address),
    .centres_in_size(sig_lloyds_kernel_top_centres_in_size),
    .centres_in_req_din(sig_lloyds_kernel_top_centres_in_req_din),
    .centres_in_req_full_n(sig_lloyds_kernel_top_centres_in_req_full_n),
    .centres_in_req_write(sig_lloyds_kernel_top_centres_in_req_write),
    .centres_in_rsp_empty_n(sig_lloyds_kernel_top_centres_in_rsp_empty_n),
    .centres_in_rsp_read(sig_lloyds_kernel_top_centres_in_rsp_read),
    .output_r_datain(sig_lloyds_kernel_top_output_r_datain),
    .output_r_dataout(sig_lloyds_kernel_top_output_r_dataout),
    .output_r_address(sig_lloyds_kernel_top_output_r_address),
    .output_r_size(sig_lloyds_kernel_top_output_r_size),
    .output_r_req_din(sig_lloyds_kernel_top_output_r_req_din),
    .output_r_req_full_n(sig_lloyds_kernel_top_output_r_req_full_n),
    .output_r_req_write(sig_lloyds_kernel_top_output_r_req_write),
    .output_r_rsp_empty_n(sig_lloyds_kernel_top_output_r_rsp_empty_n),
    .output_r_rsp_read(sig_lloyds_kernel_top_output_r_rsp_read),
    .ap_rst(sig_lloyds_kernel_top_ap_rst),
    .ap_clk(aclk),
    .block_address(block_address),
    .n(n),
    .k_V(k_V),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

lloyds_kernel_top_data_points_if #(
    .C_ID_WIDTH(C_M_AXI_DATA_POINTS_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_DATA_POINTS_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_DATA_POINTS_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_DATA_POINTS_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_DATA_POINTS_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_DATA_POINTS_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_DATA_POINTS_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_DATA_POINTS_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_DATA_POINTS_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_DATA_POINTS_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_DATA_POINTS_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_DATA_POINTS_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_DATA_POINTS_CACHE_VALUE))
lloyds_kernel_top_data_points_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_lloyds_kernel_top_data_points_datain),
    .USER_dataout(sig_lloyds_kernel_top_data_points_dataout),
    .USER_address(sig_lloyds_kernel_top_data_points_address),
    .USER_size(sig_lloyds_kernel_top_data_points_size),
    .USER_req_din(sig_lloyds_kernel_top_data_points_req_din),
    .USER_req_full_n(sig_lloyds_kernel_top_data_points_req_full_n),
    .USER_req_write(sig_lloyds_kernel_top_data_points_req_write),
    .USER_rsp_empty_n(sig_lloyds_kernel_top_data_points_rsp_empty_n),
    .USER_rsp_read(sig_lloyds_kernel_top_data_points_rsp_read),
    .AWID(m_axi_data_points_AWID),
    .AWADDR(m_axi_data_points_AWADDR),
    .AWLEN(m_axi_data_points_AWLEN),
    .AWSIZE(m_axi_data_points_AWSIZE),
    .AWBURST(m_axi_data_points_AWBURST),
    .AWLOCK(m_axi_data_points_AWLOCK),
    .AWCACHE(m_axi_data_points_AWCACHE),
    .AWPROT(m_axi_data_points_AWPROT),
    .AWQOS(m_axi_data_points_AWQOS),
    .AWUSER(m_axi_data_points_AWUSER),
    .AWVALID(m_axi_data_points_AWVALID),
    .AWREADY(m_axi_data_points_AWREADY),
    .WDATA(m_axi_data_points_WDATA),
    .WSTRB(m_axi_data_points_WSTRB),
    .WLAST(m_axi_data_points_WLAST),
    .WUSER(m_axi_data_points_WUSER),
    .WVALID(m_axi_data_points_WVALID),
    .WREADY(m_axi_data_points_WREADY),
    .BID(m_axi_data_points_BID),
    .BRESP(m_axi_data_points_BRESP),
    .BUSER(m_axi_data_points_BUSER),
    .BVALID(m_axi_data_points_BVALID),
    .BREADY(m_axi_data_points_BREADY),
    .ARID(m_axi_data_points_ARID),
    .ARADDR(m_axi_data_points_ARADDR),
    .ARLEN(m_axi_data_points_ARLEN),
    .ARSIZE(m_axi_data_points_ARSIZE),
    .ARBURST(m_axi_data_points_ARBURST),
    .ARLOCK(m_axi_data_points_ARLOCK),
    .ARCACHE(m_axi_data_points_ARCACHE),
    .ARPROT(m_axi_data_points_ARPROT),
    .ARQOS(m_axi_data_points_ARQOS),
    .ARUSER(m_axi_data_points_ARUSER),
    .ARVALID(m_axi_data_points_ARVALID),
    .ARREADY(m_axi_data_points_ARREADY),
    .RID(m_axi_data_points_RID),
    .RDATA(m_axi_data_points_RDATA),
    .RRESP(m_axi_data_points_RRESP),
    .RLAST(m_axi_data_points_RLAST),
    .RUSER(m_axi_data_points_RUSER),
    .RVALID(m_axi_data_points_RVALID),
    .RREADY(m_axi_data_points_RREADY));

lloyds_kernel_top_centres_in_if #(
    .C_ID_WIDTH(C_M_AXI_CENTRES_IN_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_CENTRES_IN_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_CENTRES_IN_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_CENTRES_IN_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_CENTRES_IN_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_CENTRES_IN_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_CENTRES_IN_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_CENTRES_IN_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_CENTRES_IN_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_CENTRES_IN_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_CENTRES_IN_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_CENTRES_IN_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_CENTRES_IN_CACHE_VALUE))
lloyds_kernel_top_centres_in_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_lloyds_kernel_top_centres_in_datain),
    .USER_dataout(sig_lloyds_kernel_top_centres_in_dataout),
    .USER_address(sig_lloyds_kernel_top_centres_in_address),
    .USER_size(sig_lloyds_kernel_top_centres_in_size),
    .USER_req_din(sig_lloyds_kernel_top_centres_in_req_din),
    .USER_req_full_n(sig_lloyds_kernel_top_centres_in_req_full_n),
    .USER_req_write(sig_lloyds_kernel_top_centres_in_req_write),
    .USER_rsp_empty_n(sig_lloyds_kernel_top_centres_in_rsp_empty_n),
    .USER_rsp_read(sig_lloyds_kernel_top_centres_in_rsp_read),
    .AWID(m_axi_centres_in_AWID),
    .AWADDR(m_axi_centres_in_AWADDR),
    .AWLEN(m_axi_centres_in_AWLEN),
    .AWSIZE(m_axi_centres_in_AWSIZE),
    .AWBURST(m_axi_centres_in_AWBURST),
    .AWLOCK(m_axi_centres_in_AWLOCK),
    .AWCACHE(m_axi_centres_in_AWCACHE),
    .AWPROT(m_axi_centres_in_AWPROT),
    .AWQOS(m_axi_centres_in_AWQOS),
    .AWUSER(m_axi_centres_in_AWUSER),
    .AWVALID(m_axi_centres_in_AWVALID),
    .AWREADY(m_axi_centres_in_AWREADY),
    .WDATA(m_axi_centres_in_WDATA),
    .WSTRB(m_axi_centres_in_WSTRB),
    .WLAST(m_axi_centres_in_WLAST),
    .WUSER(m_axi_centres_in_WUSER),
    .WVALID(m_axi_centres_in_WVALID),
    .WREADY(m_axi_centres_in_WREADY),
    .BID(m_axi_centres_in_BID),
    .BRESP(m_axi_centres_in_BRESP),
    .BUSER(m_axi_centres_in_BUSER),
    .BVALID(m_axi_centres_in_BVALID),
    .BREADY(m_axi_centres_in_BREADY),
    .ARID(m_axi_centres_in_ARID),
    .ARADDR(m_axi_centres_in_ARADDR),
    .ARLEN(m_axi_centres_in_ARLEN),
    .ARSIZE(m_axi_centres_in_ARSIZE),
    .ARBURST(m_axi_centres_in_ARBURST),
    .ARLOCK(m_axi_centres_in_ARLOCK),
    .ARCACHE(m_axi_centres_in_ARCACHE),
    .ARPROT(m_axi_centres_in_ARPROT),
    .ARQOS(m_axi_centres_in_ARQOS),
    .ARUSER(m_axi_centres_in_ARUSER),
    .ARVALID(m_axi_centres_in_ARVALID),
    .ARREADY(m_axi_centres_in_ARREADY),
    .RID(m_axi_centres_in_RID),
    .RDATA(m_axi_centres_in_RDATA),
    .RRESP(m_axi_centres_in_RRESP),
    .RLAST(m_axi_centres_in_RLAST),
    .RUSER(m_axi_centres_in_RUSER),
    .RVALID(m_axi_centres_in_RVALID),
    .RREADY(m_axi_centres_in_RREADY));

lloyds_kernel_top_output_r_if #(
    .C_ID_WIDTH(C_M_AXI_OUTPUT_R_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_OUTPUT_R_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_OUTPUT_R_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_OUTPUT_R_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_OUTPUT_R_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_OUTPUT_R_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_OUTPUT_R_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_OUTPUT_R_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_OUTPUT_R_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_OUTPUT_R_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_OUTPUT_R_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_OUTPUT_R_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_OUTPUT_R_CACHE_VALUE))
lloyds_kernel_top_output_r_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_lloyds_kernel_top_output_r_datain),
    .USER_dataout(sig_lloyds_kernel_top_output_r_dataout),
    .USER_address(sig_lloyds_kernel_top_output_r_address),
    .USER_size(sig_lloyds_kernel_top_output_r_size),
    .USER_req_din(sig_lloyds_kernel_top_output_r_req_din),
    .USER_req_full_n(sig_lloyds_kernel_top_output_r_req_full_n),
    .USER_req_write(sig_lloyds_kernel_top_output_r_req_write),
    .USER_rsp_empty_n(sig_lloyds_kernel_top_output_r_rsp_empty_n),
    .USER_rsp_read(sig_lloyds_kernel_top_output_r_rsp_read),
    .AWID(m_axi_output_r_AWID),
    .AWADDR(m_axi_output_r_AWADDR),
    .AWLEN(m_axi_output_r_AWLEN),
    .AWSIZE(m_axi_output_r_AWSIZE),
    .AWBURST(m_axi_output_r_AWBURST),
    .AWLOCK(m_axi_output_r_AWLOCK),
    .AWCACHE(m_axi_output_r_AWCACHE),
    .AWPROT(m_axi_output_r_AWPROT),
    .AWQOS(m_axi_output_r_AWQOS),
    .AWUSER(m_axi_output_r_AWUSER),
    .AWVALID(m_axi_output_r_AWVALID),
    .AWREADY(m_axi_output_r_AWREADY),
    .WDATA(m_axi_output_r_WDATA),
    .WSTRB(m_axi_output_r_WSTRB),
    .WLAST(m_axi_output_r_WLAST),
    .WUSER(m_axi_output_r_WUSER),
    .WVALID(m_axi_output_r_WVALID),
    .WREADY(m_axi_output_r_WREADY),
    .BID(m_axi_output_r_BID),
    .BRESP(m_axi_output_r_BRESP),
    .BUSER(m_axi_output_r_BUSER),
    .BVALID(m_axi_output_r_BVALID),
    .BREADY(m_axi_output_r_BREADY),
    .ARID(m_axi_output_r_ARID),
    .ARADDR(m_axi_output_r_ARADDR),
    .ARLEN(m_axi_output_r_ARLEN),
    .ARSIZE(m_axi_output_r_ARSIZE),
    .ARBURST(m_axi_output_r_ARBURST),
    .ARLOCK(m_axi_output_r_ARLOCK),
    .ARCACHE(m_axi_output_r_ARCACHE),
    .ARPROT(m_axi_output_r_ARPROT),
    .ARQOS(m_axi_output_r_ARQOS),
    .ARUSER(m_axi_output_r_ARUSER),
    .ARVALID(m_axi_output_r_ARVALID),
    .ARREADY(m_axi_output_r_ARREADY),
    .RID(m_axi_output_r_RID),
    .RDATA(m_axi_output_r_RDATA),
    .RRESP(m_axi_output_r_RRESP),
    .RLAST(m_axi_output_r_RLAST),
    .RUSER(m_axi_output_r_RUSER),
    .RVALID(m_axi_output_r_RVALID),
    .RREADY(m_axi_output_r_RREADY));

lloyds_kernel_top_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_lloyds_kernel_top_ap_rst),
    .din(aresetn));

endmodule
