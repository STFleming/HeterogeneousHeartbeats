// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _dummy_hwhb_generator_HH_
#define _dummy_hwhb_generator_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dummy_hwhb_generator : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > sensor_bus_req_din;
    sc_in< sc_logic > sensor_bus_req_full_n;
    sc_out< sc_logic > sensor_bus_req_write;
    sc_in< sc_logic > sensor_bus_rsp_empty_n;
    sc_out< sc_logic > sensor_bus_rsp_read;
    sc_out< sc_lv<32> > sensor_bus_address;
    sc_in< sc_lv<32> > sensor_bus_datain;
    sc_out< sc_lv<32> > sensor_bus_dataout;
    sc_out< sc_lv<32> > sensor_bus_size;
    sc_in< sc_lv<32> > debug1;


    // Module declarations
    dummy_hwhb_generator(sc_module_name name);
    SC_HAS_PROCESS(dummy_hwhb_generator);

    ~dummy_hwhb_generator();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<1> ap_ST_st2_fsm_1;
    static const sc_lv<64> ap_const_lv64_11280005;
    static const sc_lv<64> ap_const_lv64_11280000;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_65();
    void thread_sensor_bus_address();
    void thread_sensor_bus_dataout();
    void thread_sensor_bus_req_din();
    void thread_sensor_bus_req_write();
    void thread_sensor_bus_rsp_read();
    void thread_sensor_bus_size();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
